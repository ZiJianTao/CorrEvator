[{"A_title": "Column-indicating caret is sometimes not in error outputNone", "A_clean_title": ["column", "indic", "caret", "sometim", "not", "error", "outputnon", "output", "none"], "B_title": "Remove the if (. ", "B_clean_title": ["remov"]},
{"A_title": "Column-indicating caret is sometimes not in error outputNone", "A_clean_title": ["column", "indic", "caret", "sometim", "not", "error", "outputnon", "output", "none"], "B_title": "Remove whitespaces from sourceExcerpt. ", "B_clean_title": ["remov", "whitespac", "sourceexcerpt", "sourc", "excerpt"]},
{"A_title": "Column-indicating caret is sometimes not in error outputNone", "A_clean_title": ["column", "indic", "caret", "sometim", "not", "error", "outputnon", "output", "none"], "B_title": "Fixed typo in code snippet. ", "B_clean_title": ["fix", "typo", "code", "snippet"]},
{"A_title": "Column-indicating caret is sometimes not in error outputNone", "A_clean_title": ["column", "indic", "caret", "sometim", "not", "error", "outputnon", "output", "none"], "B_title": "Remove whitespaces from sourceExcerpt .. ", "B_clean_title": ["remov", "whitespac", "sourceexcerpt", "sourc", "excerpt"]},
{"A_title": "Column-indicating caret is sometimes not in error outputNone", "A_clean_title": ["column", "indic", "caret", "sometim", "not", "error", "outputnon", "output", "none"], "B_title": "Remove spurious blank line. ", "B_clean_title": ["remov", "spuriou", "blank", "line"]},
{"A_title": "Column-indicating caret is sometimes not in error outputNone", "A_clean_title": ["column", "indic", "caret", "sometim", "not", "error", "outputnon", "output", "none"], "B_title": "Fixed bug in Closure Repair fix. ", "B_clean_title": ["fix", "bug", "closur", "repair", "fix"]},
{"A_title": "DateTimeFormat.parseInto sometimes miscalculates year (2.2)The following code (which can be added to org.joda.time.format.TestDateTimeFormatter) breaks because the input mutable date times millis appear to be mishandled and the year for the parse is changed to 1999.", "A_clean_title": ["datetimeformat", "parseinto", "date", "time", "format", "pars", "into", "sometim", "miscalcul", "year", "follow", "code", "which", "ad", "org", "joda", "time", "format", "testdatetimeformatt", "test", "date", "time", "formatt", "break", "becaus", "input", "mutabl", "date", "time", "milli", "appear", "mishandl", "year", "pars", "chang", "1999"], "B_title": "Fix copy year. ", "B_clean_title": ["fix", "copi", "year"]},
{"A_title": "Mann-Whitney U Test Suffers From Integer Overflow With Large Data SetsWhen performing a Mann-Whitney U Test on large data sets (the attached test uses two 1500 element sets) intermediate integer values used in calculateAsymptoticPValue can overflow leading to invalid results such as p-values of NaN or incorrect calculations. Attached is a patch including a test and a fix which modifies the affected code to use doubles", "A_clean_title": ["mann", "whitney", "test", "suffer", "integ", "overflow", "larg", "data", "setswhen", "set", "when", "perform", "mann", "whitney", "test", "larg", "data", "set", "attach", "test", "use", "two", "1500", "element", "set", "intermedi", "integ", "valu", "use", "calculateasymptoticpvalu", "calcul", "asymptot", "valu", "overflow", "lead", "invalid", "result", "such", "as", "valu", "nan", "na", "or", "incorrect", "calcul", "attach", "patch", "includ", "test", "fix", "which", "modifi", "affect", "code", "use", "doubl"], "B_title": "long not int ( not long ). ", "B_clean_title": ["long", "not", "int", "not", "long"]},
{"A_title": "Mann-Whitney U Test Suffers From Integer Overflow With Large Data SetsWhen performing a Mann-Whitney U Test on large data sets (the attached test uses two 1500 element sets) intermediate integer values used in calculateAsymptoticPValue can overflow leading to invalid results such as p-values of NaN or incorrect calculations. Attached is a patch including a test and a fix which modifies the affected code to use doubles", "A_clean_title": ["mann", "whitney", "test", "suffer", "integ", "overflow", "larg", "data", "setswhen", "set", "when", "perform", "mann", "whitney", "test", "larg", "data", "set", "attach", "test", "use", "two", "1500", "element", "set", "intermedi", "integ", "valu", "use", "calculateasymptoticpvalu", "calcul", "asymptot", "valu", "overflow", "lead", "invalid", "result", "such", "as", "valu", "nan", "na", "or", "incorrect", "calcul", "attach", "patch", "includ", "test", "fix", "which", "modifi", "affect", "code", "use", "doubl"], "B_title": "changed int to double .. ", "B_clean_title": ["chang", "int", "doubl"]},
{"A_title": "Mann-Whitney U Test Suffers From Integer Overflow With Large Data SetsWhen performing a Mann-Whitney U Test on large data sets (the attached test uses two 1500 element sets) intermediate integer values used in calculateAsymptoticPValue can overflow leading to invalid results such as p-values of NaN or incorrect calculations. Attached is a patch including a test and a fix which modifies the affected code to use doubles", "A_clean_title": ["mann", "whitney", "test", "suffer", "integ", "overflow", "larg", "data", "setswhen", "set", "when", "perform", "mann", "whitney", "test", "larg", "data", "set", "attach", "test", "use", "two", "1500", "element", "set", "intermedi", "integ", "valu", "use", "calculateasymptoticpvalu", "calcul", "asymptot", "valu", "overflow", "lead", "invalid", "result", "such", "as", "valu", "nan", "na", "or", "incorrect", "calcul", "attach", "patch", "includ", "test", "fix", "which", "modifi", "affect", "code", "use", "doubl"], "B_title": "Fix warning. ", "B_clean_title": ["fix", "warn"]},
{"A_title": "Converting from an interface type to a constructor which @implements itself causes stack overflow.None", "A_clean_title": ["convert", "interfac", "type", "constructor", "which", "implement", "itself", "caus", "stack", "overflow", "none"], "B_title": "fix doubled up patch. added fix for lost brackets in closures. ", "B_clean_title": ["fix", "doubl", "up", "patch", "ad", "fix", "lost", "bracket", "closur"]},
{"A_title": "NumberUtils createNumber thows a StringIndexOutOfBoundsException when only an l is passed in.Seems to be similar to LANG-300 except that if you dont place a digit in front of the l or L it throws a StringIndexOutOfBoundsException instead.", "A_clean_title": ["numberutil", "number", "util", "createnumb", "creat", "number", "thow", "stringindexoutofboundsexcept", "string", "index", "out", "bound", "except", "when", "onli", "pass", "seem", "similar", "lang", "300", "except", "that", "you", "dont", "place", "digit", "front", "or", "it", "throw", "stringindexoutofboundsexcept", "string", "index", "out", "bound", "except", "instead"], "B_title": "Fix build. formatting fixes. ", "B_clean_title": ["fix", "build", "format", "fix"]},
{"A_title": "NumberUtils createNumber thows a StringIndexOutOfBoundsException when only an l is passed in.Seems to be similar to LANG-300 except that if you dont place a digit in front of the l or L it throws a StringIndexOutOfBoundsException instead.", "A_clean_title": ["numberutil", "number", "util", "createnumb", "creat", "number", "thow", "stringindexoutofboundsexcept", "string", "index", "out", "bound", "except", "when", "onli", "pass", "seem", "similar", "lang", "300", "except", "that", "you", "dont", "place", "digit", "front", "or", "it", "throw", "stringindexoutofboundsexcept", "string", "index", "out", "bound", "except", "instead"], "B_title": "Fix post - release build. ", "B_clean_title": ["fix", "post", "releas", "build"]},
{"A_title": "MathUtils.gcd(u v) fails when u and v both contain a high power of 2The test at the beginning of MathUtils.gcd(u v) for arguments equal to zero fails when u and v contain high enough powers of 2 so that their product overflows to zero.         assertEquals(3 * (1<<15) MathUtils.gcd(3 * (1<<20) 9 * (1<<15))); Fix: Replace the test at the start of MathUtils.gcd()         if (u * v == 0)  by         if (u == 0 || v == 0) ", "A_clean_title": ["mathutil", "gcd", "math", "util", "fail", "when", "both", "contain", "high", "power", "2the", "test", "at", "begin", "mathutil", "gcd", "math", "util", "argument", "equal", "zero", "fail", "when", "contain", "high", "enough", "power", "so", "that", "their", "product", "overflow", "zero", "assertequ", "assert", "equal", "15", "mathutil", "gcd", "math", "util", "20", "15", "fix", "replac", "test", "at", "start", "mathutil", "gcd", "math", "util", "by"], "B_title": "Fix gcd ( ). ", "B_clean_title": ["fix", "gcd"]},
{"A_title": "DateUtils.isSameLocalTime does not work correctHi I think I found a bug in the DateUtils class in the method isSameLocalTime. Example:  Calendar a = Calendar.getInstance(); a.setTimeInMillis(1297364400000L); Calendar b = Calendar.getInstance(); b.setTimeInMillis(1297321200000L); Assert.assertFalse(DateUtils.isSameLocalTime(a b)); This is because the method compares  cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)  but I think it has to be  cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY)", "A_clean_title": ["dateutil", "issamelocaltim", "date", "util", "same", "local", "time", "not", "work", "correcthi", "correct", "hi", "think", "found", "bug", "dateutil", "date", "util", "class", "method", "issamelocaltim", "same", "local", "time", "exampl", "calendar", "calendar", "getinst", "get", "instanc", "settimeinmilli", "set", "time", "milli", "1297364400000l", "calendar", "calendar", "getinst", "get", "instanc", "settimeinmilli", "set", "time", "milli", "1297321200000l", "assert", "assertfals", "assert", "fals", "dateutil", "issamelocaltim", "date", "util", "same", "local", "time", "thi", "becaus", "method", "compar", "cal1", "get", "calendar", "hour", "cal2", "get", "calendar", "hour", "but", "think", "it", "ha", "cal1", "get", "calendar", "hour", "day", "cal2", "get", "calendar", "hour", "day"], "B_title": "Fixed fall through in DateUtils . java. ", "B_clean_title": ["fix", "fall", "through", "dateutil", "date", "util", "java"]},
{"A_title": "Fraction(double int) constructor strange behaviourThe Fraction constructor Fraction(double int) takes a double value and a int maximal denominator and approximates a fraction. When the double value is a large negative number with many digits in the fractional part and the maximal denominator is a big positive integer (in the 100000s) two distinct bugs can manifest: 1: the constructor returns a positive Fraction. Calling Fraction(-33655.1677817278 371880) returns the fraction 410517235/243036 which both has the wrong sign and is far away from the absolute value of the given value 2: the constructor does not manage to reduce the Fraction properly. Calling Fraction(-43979.60679604749 366081) returns the fraction -1651878166/256677 which should have* been reduced to -24654898/3831. I have as of yet not found a solution. The constructor looks like this: public Fraction(double value int maxDenominator)         throws FractionConversionException             this(value 0 maxDenominator 100);       Increasing the 100 value (max iterations) does not fix the problem for all cases. Changing the 0-value (the epsilon maximum allowed error) to something small does not work either as this breaks the tests in FractionTest.  The problem is not neccissarily that the algorithm is unable to approximate a fraction correctly. A solution where a FractionConversionException had been thrown in each of these examples would probably be the best solution if an improvement on the approximation algorithm turns out to be hard to find. This bug has been found when trying to explore the idea of axiom-based testing (http://bldl.ii.uib.no/testing.html). Attached is a java test class FractionTestByAxiom (junit goes into org.apache.commons.math3.fraction) which shows these bugs through a simplified approach to this kind of testing and a text file describing some of the value/maxDenominator combinations which causes one of these failures.  It is never specified in the documentation that the Fraction class guarantees that completely reduced rational numbers are constructed but a comment inside the equals method claims that since fractions are always in lowest terms numerators and can be compared directly for equality so it seems like this is the intention.", "A_clean_title": ["fraction", "doubl", "int", "constructor", "strang", "behaviourth", "behaviour", "fraction", "constructor", "fraction", "doubl", "int", "take", "doubl", "valu", "int", "maxim", "denomin", "approxim", "fraction", "when", "doubl", "valu", "larg", "neg", "number", "mani", "digit", "fraction", "part", "maxim", "denomin", "big", "posit", "integ", "100000", "two", "distinct", "bug", "manifest", "constructor", "return", "posit", "fraction", "call", "fraction", "33655", "1677817278", "371880", "return", "fraction", "410517235", "243036", "which", "both", "ha", "wrong", "sign", "far", "away", "absolut", "valu", "given", "valu", "constructor", "not", "manag", "reduc", "fraction", "properli", "call", "fraction", "43979", "60679604749", "366081", "return", "fraction", "1651878166", "256677", "which", "have", "been", "reduc", "24654898", "3831", "have", "as", "yet", "not", "found", "solut", "constructor", "look", "like", "thi", "public", "fraction", "doubl", "valu", "int", "maxdenomin", "max", "denomin", "throw", "fractionconversionexcept", "fraction", "convers", "except", "thi", "valu", "maxdenomin", "max", "denomin", "100", "increas", "100", "valu", "max", "iter", "not", "fix", "problem", "all", "case", "chang", "valu", "epsilon", "maximum", "allow", "error", "someth", "small", "not", "work", "either", "as", "thi", "break", "test", "fractiontest", "fraction", "test", "problem", "not", "neccissarili", "that", "algorithm", "unabl", "approxim", "fraction", "correctli", "solut", "where", "fractionconversionexcept", "fraction", "convers", "except", "had", "been", "thrown", "each", "these", "exampl", "would", "probabl", "best", "solut", "improv", "approxim", "algorithm", "turn", "out", "hard", "find", "thi", "bug", "ha", "been", "found", "when", "tri", "explor", "idea", "axiom", "base", "test", "http", "ii", "uib", "html", "bldl", "no", "test", "attach", "java", "test", "class", "fractiontestbyaxiom", "fraction", "test", "by", "axiom", "junit", "goe", "into", "org", "apach", "common", "math3", "fraction", "which", "show", "these", "bug", "through", "simplifi", "approach", "thi", "kind", "test", "text", "file", "describ", "some", "valu", "maxdenomin", "max", "denomin", "combin", "which", "caus", "one", "these", "failur", "it", "never", "specifi", "document", "that", "fraction", "class", "guarante", "that", "complet", "reduc", "ration", "number", "are", "construct", "but", "comment", "insid", "equal", "method", "claim", "that", "sinc", "fraction", "are", "alway", "lowest", "term", "numer", "compar", "directli", "equal", "so", "it", "seem", "like", "thi", "intent"], "B_title": "Improve overflow check for negative values in Fraction constructor.", "B_clean_title": ["improv", "overflow", "check", "neg", "valu", "fraction", "constructor"]},
{"A_title": "How could I disable static imports in the v55 output?I found v53+ are producing static imports.", "A_clean_title": ["how", "could", "disabl", "static", "import", "v55", "output", "found", "v53+", "are", "produc", "static", "import"], "B_title": "fix: Improve static import support in auto-import mode (#1155)  closes #1152", "B_clean_title": ["fix", "improv", "static", "import", "support", "auto", "import", "mode", "1155", "close", "1152"]},
{"A_title": "Maximal number of iterations (540) exceededI have a matrix of size 49x19 and when I apply SVD on this matrix it raises the following exception. The problem which I am facing is that SVD works for some matrix and doesnt work for others. I have no clue what is the possible reason.  Exception:: CorrespondenceAnalysis: org.apache.commons.math.MaxIterationsExceededException: Maximal number of iterations (540) exceeded  org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(EigenDecompositionImpl.java:881) org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(EigenDecompositionImpl.java:651) org.apache.commons.math.linear.EigenDecompositionImpl.decompose(EigenDecompositionImpl.java:243) org.apache.commons.math.linear.EigenDecompositionImpl.<init>(EigenDecompositionImpl.java:202) org.apache.commons.math.linear.SingularValueDecompositionImpl.<init>(SingularValueDecompositionImpl.java:114)   RealMatrix m = 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 1.00000000 1.00000000 1.00000000 1.00000000 0.99107143 1.00000000 1.00000000 1.00000000 1.00000000 0.94450431 1.00000000 1.00000000 0.99107143 0.95238096 1.00000000 1.00000000 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.964285731.00000000 1.00000000 0.94999999 0.95833331 1.00000000 1.00000000 0.99107143 0.94583333 1.00000000 0.95000000 0.98333333 0.92106681 0.97368419 1.00000000 0.95357142 0.95238096 1.00000000 0.93333334 0.96428573  RealMatrix rcp = MatrixUtils.createRealMatrix(CP); SingularValueDecomposition svd = new SingularValueDecompositionImpl(rcp);  RealMatrix U = svd.getU(); RealMatrix S = svd.getS(); RealMatrix Vt = svd.getVT(); double singularValues = svd.getSingularValues();", "A_clean_title": ["maxim", "number", "iter", "540", "exceededi", "exceed", "have", "matrix", "size", "49x19", "when", "appli", "svd", "thi", "matrix", "it", "rais", "follow", "except", "problem", "which", "am", "face", "that", "svd", "work", "some", "matrix", "doesnt", "work", "other", "have", "no", "clue", "what", "possibl", "reason", "except", "correspondenceanalysi", "correspond", "analysi", "org", "apach", "common", "math", "maxiterationsexceededexcept", "max", "iter", "exceed", "except", "maxim", "number", "iter", "540", "exceed", "org", "apach", "common", "math", "linear", "eigendecompositionimpl", "processgeneralblock", "eigen", "decomposit", "impl", "process", "gener", "block", "eigendecompositionimpl", "java:881", "eigen", "decomposit", "impl", "org", "apach", "common", "math", "linear", "eigendecompositionimpl", "findeigenvalu", "eigen", "decomposit", "impl", "find", "eigenvalu", "eigendecompositionimpl", "java:651", "eigen", "decomposit", "impl", "org", "apach", "common", "math", "linear", "eigendecompositionimpl", "decompos", "eigen", "decomposit", "impl", "eigendecompositionimpl", "java:243", "eigen", "decomposit", "impl", "org", "apach", "common", "math", "linear", "eigendecompositionimpl", "eigen", "decomposit", "impl", "init", "eigendecompositionimpl", "java:202", "eigen", "decomposit", "impl", "org", "apach", "common", "math", "linear", "singularvaluedecompositionimpl", "singular", "valu", "decomposit", "impl", "init", "singularvaluedecompositionimpl", "java:114", "singular", "valu", "decomposit", "impl", "realmatrix", "real", "matrix", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "00000000", "00000000", "00000000", "00000000", "99107143", "00000000", "00000000", "00000000", "00000000", "94450431", "00000000", "00000000", "99107143", "95238096", "00000000", "00000000", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "964285731", "00000000", "00000000", "94999999", "95833331", "00000000", "00000000", "99107143", "94583333", "00000000", "95000000", "98333333", "92106681", "97368419", "00000000", "95357142", "95238096", "00000000", "93333334", "96428573", "realmatrix", "real", "matrix", "rcp", "matrixutil", "createrealmatrix", "matrix", "util", "creat", "real", "matrix", "cp", "singularvaluedecomposit", "singular", "valu", "decomposit", "svd", "new", "singularvaluedecompositionimpl", "singular", "valu", "decomposit", "impl", "rcp", "realmatrix", "real", "matrix", "svd", "getu", "get", "realmatrix", "real", "matrix", "svd", "get", "get", "realmatrix", "real", "matrix", "vt", "svd", "getvt", "get", "vt", "doubl", "singularvalu", "singular", "valu", "svd", "getsingularvalu", "get", "singular", "valu"], "B_title": "Rewritten SVD implementation based on JAMA code.", "B_clean_title": ["rewritten", "svd", "implement", "base", "jama", "code"]},
{"A_title": "Errors reported from Form#onValidateModelObjects() are ignoredNone", "A_clean_title": ["error", "report", "form", "onvalidatemodelobject", "valid", "model", "object", "are", "ignorednon", "ignor", "none"], "B_title": "Issue: WICKET-4070", "B_clean_title": ["issu", "wicket", "4070"]},
{"A_title": "CacheLIRS implementation incompleteThe current CacheLIRS implementation is not complete and e.g. does not provide a write through ConcurrentMap view on asMap(). For OAK-1088 it would be good to have this implementation as it allows conditional and atomic updates of cache entries.", "A_clean_title": ["cachelir", "cach", "lir", "implement", "incompleteth", "incomplet", "current", "cachelir", "cach", "lir", "implement", "not", "complet", "not", "provid", "write", "through", "concurrentmap", "concurr", "map", "view", "asmap", "as", "map", "oak", "1088", "it", "would", "good", "have", "thi", "implement", "as", "it", "allow", "condit", "atom", "updat", "cach", "entri"], "B_title": "CacheLIRS implementation incomplete", "B_clean_title": ["cachelir", "cach", "lir", "implement", "incomplet"]},
{"A_title": "BrentOptimizer not always reporting the best pointBrentOptimizer (package o.a.c.m.optimization.univariate) does not check that the point it is going to return is indeed the best one it has encountered. Indeed the last evaluated point might be slightly worse than the one before last.", "A_clean_title": ["brentoptim", "brent", "optim", "not", "alway", "report", "best", "pointbrentoptim", "point", "brent", "optim", "packag", "optim", "univari", "not", "check", "that", "point", "it", "go", "return", "inde", "best", "one", "it", "ha", "encount", "inde", "last", "evalu", "point", "might", "slightli", "wors", "than", "one", "befor", "last"], "B_title": "(second take). Best point must be returned.", "B_clean_title": ["second", "take", "best", "point", "must", "return"]},
{"A_title": "KendallsCorrelation suffers from integer overflow for large arrays.For large array size (say over 5000) numPairs > 10 million. in line 258 (numPairs - tiedXPairs) * (numPairs - tiedYPairs) possibly > 100 billion which will cause an integer overflow resulting in a negative number which will result in the end result in a NaN since the square-root of that number is calculated. This can easily be solved by changing line 163 to final long numPairs = ((long)n) * (n - 1) / 2; // to avoid overflow", "A_clean_title": ["kendallscorrel", "kendal", "correl", "suffer", "integ", "overflow", "larg", "array", "larg", "array", "size", "say", "over", "5000", "numpair", "num", "pair", "10", "million", "line", "258", "numpair", "num", "pair", "tiedxpair", "tie", "pair", "numpair", "num", "pair", "tiedypair", "tie", "pair", "possibl", "100", "billion", "which", "will", "caus", "integ", "overflow", "result", "neg", "number", "which", "will", "result", "end", "result", "nan", "na", "sinc", "squar", "root", "that", "number", "calcul", "thi", "easili", "solv", "by", "chang", "line", "163", "final", "long", "numpair", "num", "pair", "long", "avoid", "overflow"], "B_title": "Avoid overflow in Kendalls correlation for large input arrays.", "B_clean_title": ["avoid", "overflow", "kendal", "correl", "larg", "input", "array"]},
{"A_title": "In Accumulo 1.7.0 connecting to a minicluster started via bin/accumulo minicluster doesnt workIn Accumulo 1.7.0 connecting to a minicluster started via bin/accumulo minicluster doesnt work.  When connecting it appears to ignore the ZK port supplied in the command and is attempting to listen to ZK on 2181.  For example: accumulo-1.7.0 > bin/accumulo minicluster … Mini Accumulo Cluster    Directory:            /var/folders/rv/44k88tps4ql0dc1f68ck4d2w0000gn/T/1437925819514-0   Logs:                 /var/folders/rv/44k88tps4ql0dc1f68ck4d2w0000gn/T/1437925819514-0/logs   Instance Name:        miniInstance   Root Password:        secret   ZooKeeper:            localhost:56783   Shutdown Port:        4445    To connect with shell use the following command :     accumulo shell -zh localhost:56783 -zi miniInstance -u root  Successfully started on Sun Jul 26 11:50:28 EDT 2015 ===================  From a new terminal:  accumulo-1.7.0 > accumulo shell -zh localhost:56783 -zi miniInstance -u root Password: ******* …. 60 seconds later …. 2015-07-26 11:52:44436 tracer.ZooTraceClient ERROR: Unabled to get destination tracer hosts in ZooKeeper will retry in 5000 milliseconds java.lang.RuntimeException: Failed to connect to zookeeper (localhost:2181) within 2x zookeeper timeout period 30000 at org.apache.accumulo.fate.zookeeper.ZooSession.connect(ZooSession.java:124)  Shell - Apache Accumulo Interactive Shell - - version: 1.7.0 - instance name: miniInstance - instance id: a371d4ac-8bc7-4a6a-865f-5f3c8e27fbe1 - - type help for a list of available commands - root@miniInstance>", "A_clean_title": ["accumulo", "connect", "miniclust", "start", "via", "bin", "accumulo", "miniclust", "doesnt", "workin", "work", "accumulo", "connect", "miniclust", "start", "via", "bin", "accumulo", "miniclust", "doesnt", "work", "when", "connect", "it", "appear", "ignor", "zk", "port", "suppli", "command", "attempt", "listen", "zk", "2181", "exampl", "accumulo", "bin", "accumulo", "miniclust", "mini", "accumulo", "cluster", "directori", "var", "folder", "rv", "44k88tps4ql0dc1f68ck4d2w0000gn", "1437925819514", "log", "var", "folder", "rv", "44k88tps4ql0dc1f68ck4d2w0000gn", "1437925819514", "log", "instanc", "name", "miniinst", "mini", "instanc", "root", "password", "secret", "zookeep", "zoo", "keeper", "localhost:56783", "shutdown", "port", "4445", "connect", "shell", "use", "follow", "command", "accumulo", "shell", "zh", "localhost:56783", "zi", "miniinst", "mini", "instanc", "root", "success", "start", "sun", "jul", "26", "11:50:28", "edt", "2015", "new", "termin", "accumulo", "accumulo", "shell", "zh", "localhost:56783", "zi", "miniinst", "mini", "instanc", "root", "password", "60", "second", "later", "2015", "07", "26", "11:52:44436", "tracer", "zootracecli", "zoo", "trace", "client", "error", "unabl", "get", "destin", "tracer", "host", "zookeep", "zoo", "keeper", "will", "retri", "5000", "millisecond", "java", "lang", "runtimeexcept", "runtim", "except", "fail", "connect", "zookeep", "localhost:2181", "within", "2x", "zookeep", "timeout", "period", "30000", "at", "org", "apach", "accumulo", "fate", "zookeep", "zoosess", "connect", "zoo", "session", "zoosess", "java:124", "zoo", "session", "shell", "apach", "accumulo", "interact", "shell", "version", "instanc", "name", "miniinst", "mini", "instanc", "instanc", "id", "a371d4ac", "8bc7", "4a6a", "865f", "5f3c8e27fbe1", "type", "help", "list", "avail", "command", "root", "miniinst", "mini", "instanc"], "B_title": "Use provided zookeeper hosts for tracing when present.", "B_clean_title": ["use", "provid", "zookeep", "host", "trace", "when", "present"]},
{"A_title": "Full-text search on the traversing index fails if the condition contains a slashA full-text search on the traversing index falls back to a sort of manual evaluation of results.  This is handled by the _FullTextTerm_ class and it appears that it passes the constraint text through a cleanup process where it strips most of the characters that are neither _Character.isLetterOrDigit(c)_ not in the list _+-:&_  Im not exactly sure where this list comes from but I see the / character is missing which causes a certain type of query to fail.  Example: code //*jcr:contains(. text/plain) code", "A_clean_title": ["full", "text", "search", "travers", "index", "fail", "condit", "contain", "slasha", "slash", "full", "text", "search", "travers", "index", "fall", "back", "sort", "manual", "evalu", "result", "thi", "handl", "by", "fulltextterm", "full", "text", "term", "class", "it", "appear", "that", "it", "pass", "constraint", "text", "through", "cleanup", "process", "where", "it", "strip", "most", "charact", "that", "are", "neither", "isletterordigit", "charact", "letter", "or", "digit", "not", "list", "im", "not", "exactli", "sure", "where", "thi", "list", "come", "but", "see", "charact", "miss", "which", "caus", "certain", "type", "queri", "fail", "exampl", "code", "jcr", "contain", "text", "plain", "code"], "B_title": "Full-text search on the traversing index fails if the condition contains a slash  - added node name to the full-text checks", "B_clean_title": ["full", "text", "search", "travers", "index", "fail", "condit", "contain", "slash", "ad", "node", "name", "full", "text", "check"]},
{"A_title": "MiniMap.iterator().next() should throw NoSuchElementExceptionThe wicket.util.collections.MiniMap.iterator().next() should throw NoSuchElementException when there are no more elements to return (line 235) please add: if(i >= size)     throw new NoSuchElementException();", "A_clean_title": ["minimap", "iter", "mini", "map", "next", "throw", "nosuchelementexceptionth", "no", "such", "element", "except", "wicket", "util", "collect", "minimap", "iter", "mini", "map", "next", "throw", "nosuchelementexcept", "no", "such", "element", "except", "when", "there", "are", "no", "more", "element", "return", "line", "235", "pleas", "add", "size", "throw", "new", "nosuchelementexcept", "no", "such", "element", "except"], "B_title": "Really fix WICKET-428 complete with unit test.", "B_clean_title": ["realli", "fix", "wicket", "428", "complet", "unit", "test"]},
{"A_title": "incomplete function definition crashes the compiler when ideMode is enabledNone", "A_clean_title": ["incomplet", "function", "definit", "crash", "compil", "when", "idemod", "ide", "mode", "enablednon", "enabl", "none"], "B_title": "Prevent unsupport JavaScript variants that Rhino can parse from crashing the compiler in ide mode. Fixes issue 663", "B_clean_title": ["prevent", "unsupport", "javascript", "java", "script", "variant", "that", "rhino", "pars", "crash", "compil", "ide", "mode", "fix", "issu", "663"]},
{"A_title": "improve wickets handling of empty / null page parameters- DefaultPageFactory#newPage() should be sure to not pass null to a page constructor with page parameters", "A_clean_title": ["improv", "wicket", "handl", "empti", "null", "page", "paramet", "defaultpagefactori", "default", "page", "factori", "newpag", "new", "page", "sure", "not", "pass", "null", "page", "constructor", "page", "paramet"], "B_title": "cleaning up PageParameters in AbstractBookmarkableMapper returns an empty instance if no parameters are left after sanitizing instead of null which by wicket definition indicates that we have no page parameters", "B_clean_title": ["clean", "up", "pageparamet", "page", "paramet", "abstractbookmarkablemapp", "abstract", "bookmark", "mapper", "return", "empti", "instanc", "no", "paramet", "are", "left", "after", "sanit", "instead", "null", "which", "by", "wicket", "definit", "indic", "that", "we", "have", "no", "page", "paramet"]},
{"A_title": "Kryo StackOverflowError due to disabled Kryo Reference trackingAs discussed on the dev list  In KryoSerializer.java  Kryo Reference tracking is disabled by default:  code     kryo.setReferences(false); code  This can causes  StackOverflowError Exceptions when serializing many objects that may contain recursive objects:  code java.lang.StackOverflowError at com.esotericsoftware.kryo.serializers.ObjectField.write(ObjectField.java:48) at com.esotericsoftware.kryo.serializers.FieldSerializer.write(FieldSerializer.java:495) at com.esotericsoftware.kryo.Kryo.writeObject(Kryo.java:523) at com.esotericsoftware.kryo.serializers.ObjectField.write(ObjectField.java:61) at com.esotericsoftware.kryo.serializers.FieldSerializer.write(FieldSerializer.java:495) at com.esotericsoftware.kryo.Kryo.writeObject(Kryo.java:523) at com.esotericsoftware.kryo.serializers.ObjectField.write(ObjectField.java:61) at com.esotericsoftware.kryo.serializers.FieldSerializer.write(FieldSerializer.java:495) at com.esotericsoftware.kryo.Kryo.writeObject(Kryo.java:523) at com.esotericsoftware.kryo.serializers.ObjectField.write(ObjectField.java:61) at com.esotericsoftware.kryo.serializers.FieldSerializer.write(FieldSerializer.java:495) code  By enabling reference tracking we can fix this problem.  1https://gist.github.com/andrewpalumbo/40c7422a5187a24cd03d7d81feb2a419", "A_clean_title": ["kryo", "stackoverflowerror", "stack", "overflow", "error", "due", "disabl", "kryo", "refer", "trackinga", "track", "as", "discuss", "dev", "list", "kryoseri", "java", "kryo", "serial", "kryo", "refer", "track", "disabl", "by", "default", "code", "kryo", "setrefer", "set", "refer", "fals", "code", "thi", "caus", "stackoverflowerror", "stack", "overflow", "error", "except", "when", "serial", "mani", "object", "that", "may", "contain", "recurs", "object", "code", "java", "lang", "stackoverflowerror", "stack", "overflow", "error", "at", "com", "esotericsoftwar", "kryo", "serial", "objectfield", "write", "object", "field", "objectfield", "java:48", "object", "field", "at", "com", "esotericsoftwar", "kryo", "serial", "fieldseri", "write", "field", "serial", "fieldseri", "java:495", "field", "serial", "at", "com", "esotericsoftwar", "kryo", "kryo", "writeobject", "write", "object", "kryo", "java:523", "at", "com", "esotericsoftwar", "kryo", "serial", "objectfield", "write", "object", "field", "objectfield", "java:61", "object", "field", "at", "com", "esotericsoftwar", "kryo", "serial", "fieldseri", "write", "field", "serial", "fieldseri", "java:495", "field", "serial", "at", "com", "esotericsoftwar", "kryo", "kryo", "writeobject", "write", "object", "kryo", "java:523", "at", "com", "esotericsoftwar", "kryo", "serial", "objectfield", "write", "object", "field", "objectfield", "java:61", "object", "field", "at", "com", "esotericsoftwar", "kryo", "serial", "fieldseri", "write", "field", "serial", "fieldseri", "java:495", "field", "serial", "at", "com", "esotericsoftwar", "kryo", "kryo", "writeobject", "write", "object", "kryo", "java:523", "at", "com", "esotericsoftwar", "kryo", "serial", "objectfield", "write", "object", "field", "objectfield", "java:61", "object", "field", "at", "com", "esotericsoftwar", "kryo", "serial", "fieldseri", "write", "field", "serial", "fieldseri", "java:495", "field", "serial", "code", "by", "enabl", "refer", "track", "we", "fix", "thi", "problem", "1http", "github", "gist", "com", "andrewpalumbo", "40c7422a5187a24cd03d7d81feb2a419"], "B_title": "core Enable Kryo reference tracking", "B_clean_title": ["core", "enabl", "kryo", "refer", "track"]},
{"A_title": "Combining temporary strings are over-optimized in advanced buildNone", "A_clean_title": ["combin", "temporari", "string", "are", "over", "optim", "advanc", "buildnon", "build", "none"], "B_title": "fixes issue 698", "B_clean_title": ["fix", "issu", "698"]},
{"A_title": "RandomStringUtils throws confusing IAE when end <= startRandomUtils invokes Random#nextInt where n = end - start. If end <= start then Random throws: java.lang.IllegalArgumentException: n must be positive This is confusing and does not identify the source of the problem.", "A_clean_title": ["randomstringutil", "random", "string", "util", "throw", "confus", "iae", "when", "end", "startrandomutil", "start", "random", "util", "invok", "random", "nextint", "next", "int", "where", "end", "start", "end", "start", "then", "random", "throw", "java", "lang", "illegalargumentexcept", "illeg", "argument", "except", "must", "posit", "thi", "confus", "not", "identifi", "sourc", "problem"], "B_title": "RandomStringUtils throws confusing IAE when end <= start", "B_clean_title": ["randomstringutil", "random", "string", "util", "throw", "confus", "iae", "when", "end", "start"]},
{"A_title": "wicket-bean-validation: Bean validation PropertyValidator only works with direct field accessTheres a substring indexing bug in the wicket-bean-validation module in org.apache.wicket.bean.validation.DefaultPropertyResolver that causes it to only work with direct field access and fail when field is missing and getter method should be used.  The problem is on this line:      String name = getter.getName().substring(3 1).toLowerCase() + getter.getName().substring(4);  Which should be:      String name = getter.getName().substring(3 4).toLowerCase() + getter.getName().substring(4);  (or simply a single character access)", "A_clean_title": ["wicket", "bean", "valid", "bean", "valid", "propertyvalid", "properti", "valid", "onli", "work", "direct", "field", "accessther", "access", "there", "substr", "index", "bug", "wicket", "bean", "valid", "modul", "org", "apach", "wicket", "bean", "valid", "defaultpropertyresolv", "default", "properti", "resolv", "that", "caus", "it", "onli", "work", "direct", "field", "access", "fail", "when", "field", "miss", "getter", "method", "use", "problem", "thi", "line", "string", "name", "getter", "getnam", "get", "name", "substr", "tolowercas", "lower", "case", "getter", "getnam", "get", "name", "substr", "which", "string", "name", "getter", "getnam", "get", "name", "substr", "tolowercas", "lower", "case", "getter", "getnam", "get", "name", "substr", "or", "simpli", "singl", "charact", "access"], "B_title": "", "B_clean_title": []},
{"A_title": "Column-indicating caret is sometimes not in error outputNone", "A_clean_title": ["column", "indic", "caret", "sometim", "not", "error", "outputnon", "output", "none"], "B_title": "Automated g4 rollback.", "B_clean_title": ["autom", "g4", "rollback"]},
{"A_title": "fix proposal for #114None", "A_clean_title": ["fix", "propos", "114none"], "B_title": "Fixed issue 138 When verify contains extra calls to other mocks (highly unlikely) then Mockito was verifying wrong invocation. Now it is all good.", "B_clean_title": ["fix", "issu", "138", "when", "verifi", "contain", "extra", "call", "other", "mock", "highli", "unlik", "then", "mockito", "wa", "verifi", "wrong", "invoc", "now", "it", "all", "good"]},
{"A_title": "DateTimeFormat.parseInto sometimes miscalculates year (2.2)The following code (which can be added to org.joda.time.format.TestDateTimeFormatter) breaks because the input mutable date times millis appear to be mishandled and the year for the parse is changed to 1999.", "A_clean_title": ["datetimeformat", "parseinto", "date", "time", "format", "pars", "into", "sometim", "miscalcul", "year", "follow", "code", "which", "ad", "org", "joda", "time", "format", "testdatetimeformatt", "test", "date", "time", "formatt", "break", "becaus", "input", "mutabl", "date", "time", "milli", "appear", "mishandl", "year", "pars", "chang", "1999"], "B_title": "Fix DateTimeFormatter.parseInto() where it obtains the default year", "B_clean_title": ["fix", "datetimeformatt", "parseinto", "date", "time", "formatt", "pars", "into", "where", "it", "obtain", "default", "year"]},
{"A_title": "inverseCumulativeProbability of BinomialDistribution returns wrong value for large trials.The inverseCumulativeProbability method of the BinomialDistributionImpl class returns wrong value for large trials.  Following code will be reproduce the problem. System.out.println(new BinomialDistributionImpl(1000000 0.5).inverseCumulativeProbability(0.5)); This returns 499525 though it should be 499999. Im not sure how it should be fixed but the cause is that the cumulativeProbability method returns Infinity not NaN.  As the result the checkedCumulativeProbability method doesnt work as expected.", "A_clean_title": ["inversecumulativeprob", "invers", "cumul", "probabl", "binomialdistribut", "binomi", "distribut", "return", "wrong", "valu", "larg", "trial", "inversecumulativeprob", "invers", "cumul", "probabl", "method", "binomialdistributionimpl", "binomi", "distribut", "impl", "class", "return", "wrong", "valu", "larg", "trial", "follow", "code", "will", "reproduc", "problem", "system", "out", "println", "new", "binomialdistributionimpl", "binomi", "distribut", "impl", "1000000", "inversecumulativeprob", "invers", "cumul", "probabl", "thi", "return", "499525", "though", "it", "499999", "im", "not", "sure", "how", "it", "fix", "but", "caus", "that", "cumulativeprob", "cumul", "probabl", "method", "return", "infin", "not", "nan", "na", "as", "result", "checkedcumulativeprob", "check", "cumul", "probabl", "method", "doesnt", "work", "as", "expect"], "B_title": "Use modified Lentz-Thompson algorithm for continued fraction evaluation.", "B_clean_title": ["use", "modifi", "lentz", "thompson", "algorithm", "continu", "fraction", "evalu"]},
{"A_title": "StringEscapeUtils.escapeJavaScript() method did not escape / into / it will make IE render page uncorrectlyIf Javascripts including/ IE will parse the scripts uncorrectly actually / should be escaped to /. For example document.getElementById(test).value = <script>alert(aaa);</script>;this expression will make IE render page uncorrect it should be document.getElementById(test).value = <script>alert(aaa);</script>; Btw Springs JavascriptEscape behavor is correct. Try  to run below codes you will find the difference:   String s = <script>alert(aaa);</script>;   String str = org.springframework.web.util.JavaScriptUtils.javaScriptEscape(s);   System.out.println(Spring JS Escape : +str);   str = org.apache.commons.lang.StringEscapeUtils.escapeJavaScript(s);   System.out.println(Apache Common Lang JS Escape : + str);", "A_clean_title": ["stringescapeutil", "escapejavascript", "string", "escap", "util", "escap", "java", "script", "method", "did", "not", "escap", "into", "it", "will", "make", "ie", "render", "page", "uncorrectlyif", "uncorrectli", "javascript", "includ", "ie", "will", "pars", "script", "uncorrectli", "actual", "escap", "exampl", "document", "getelementbyid", "get", "element", "by", "id", "test", "valu", "script", "alert", "aaa", "script", "thi", "express", "will", "make", "ie", "render", "page", "uncorrect", "it", "document", "getelementbyid", "get", "element", "by", "id", "test", "valu", "script", "alert", "aaa", "script", "btw", "spring", "javascriptescap", "javascript", "escap", "behavor", "correct", "tri", "run", "below", "code", "you", "will", "find", "differ", "string", "script", "alert", "aaa", "script", "string", "str", "org", "springframework", "web", "util", "javascriptutil", "javascriptescap", "java", "script", "util", "java", "script", "escap", "system", "out", "println", "spring", "js", "escap", "+str", "str", "org", "apach", "common", "lang", "stringescapeutil", "escapejavascript", "string", "escap", "util", "escap", "java", "script", "system", "out", "println", "apach", "common", "lang", "js", "escap", "str"], "B_title": "Applying Scott Bassins fix and test from LANG-363", "B_clean_title": ["appli", "scott", "bassin", "fix", "test", "lang", "363"]},
{"A_title": "NullPointerException in IntHashMapI was looking through a testers log file to track down a separate issue. I came across a NullPointerException with IntHashMap apparently when the server was shutting down.  See also WICKET-5584 which also deals with a NullPointerException with IntHashMap and also seems to relate to a null modCount (judging by the line number).  noformat INFO  (ExampleServer) 2014-11-06 00:49:24979 - com.example.server.ExampleServer.stopServer(ExampleServer.java:268): Stopping server. INFO  (ServerConnector) 2014-11-06 00:49:24982 - org.eclipse.jetty.server.AbstractConnector.doStop(AbstractConnector.java:306): Stopped ServerConnector@3b7d3a38HTTP/1.10.0.0.0:8099 INFO  (Application) 2014-11-06 00:49:24983 - org.apache.wicket.Application.destroyInitializers(Application.java:588): org.apache.wicket.protocol.http.WicketFilter-55b0dcab destroy: Wicket core library initializer INFO  (Application) 2014-11-06 00:49:24983 - org.apache.wicket.Application.destroyInitializers(Application.java:588): org.apache.wicket.protocol.http.WicketFilter-55b0dcab destroy: Wicket extensions initializer ERROR (DiskDataStore) 2014-11-06 00:49:24988 - org.apache.wicket.pageStore.DiskDataStore.saveIndex(DiskDataStore.java:282): Couldnt write DiskDataStore index to file C:WindowsSERVIC~2NETWOR~1AppDataLocalTemporg.apache.wicket.protocol.http.WicketFilter-55b0dcab-filestoreDiskDataStoreIndex. java.lang.NullPointerException at org.apache.wicket.util.collections.IntHashMap HashIterator.<init>(IntHashMap.java:777) at org.apache.wicket.util.collections.IntHashMap EntryIterator.<init>(IntHashMap.java:871) at org.apache.wicket.util.collections.IntHashMap EntryIterator.<init>(IntHashMap.java:871) at org.apache.wicket.util.collections.IntHashMap.newEntryIterator(IntHashMap.java:896) at org.apache.wicket.util.collections.IntHashMap EntrySet.iterator(IntHashMap.java:1055) at org.apache.wicket.util.collections.IntHashMap.writeObject(IntHashMap.java:1128) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:988) at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496) at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432) at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178) at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548) at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509) at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432) at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178) at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548) at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509) at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432) at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178) at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348) at java.util.HashMap.internalWriteEntries(HashMap.java:1777) at java.util.HashMap.writeObject(HashMap.java:1354) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:483) at java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:988) at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496) at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432) at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178) at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348) at org.apache.wicket.pageStore.DiskDataStore.saveIndex(DiskDataStore.java:274) at org.apache.wicket.pageStore.DiskDataStore.destroy(DiskDataStore.java:106) at org.apache.wicket.pageStore.AsynchronousDataStore.destroy(AsynchronousDataStore.java:118) at org.apache.wicket.pageStore.AbstractPageStore.destroy(AbstractPageStore.java:53) at org.apache.wicket.pageStore.AbstractCachingPageStore.destroy(AbstractCachingPageStore.java:102) at org.apache.wicket.page.PageStoreManager.destroy(PageStoreManager.java:437) at org.apache.wicket.Application.internalDestroy(Application.java:659) at org.apache.wicket.protocol.http.WebApplication.internalDestroy(WebApplication.java:607) at org.apache.wicket.protocol.http.WicketFilter.destroy(WicketFilter.java:605) at org.eclipse.jetty.servlet.FilterHolder.destroyInstance(FilterHolder.java:173) at org.eclipse.jetty.servlet.FilterHolder.doStop(FilterHolder.java:151) at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89) at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:143) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:162) at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:73) at org.eclipse.jetty.servlet.ServletHandler.doStop(ServletHandler.java:230) at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89) at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:143) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:162) at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:73) at org.eclipse.jetty.security.SecurityHandler.doStop(SecurityHandler.java:411) at org.eclipse.jetty.security.ConstraintSecurityHandler.doStop(ConstraintSecurityHandler.java:457) at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89) at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:143) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:162) at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:73) at org.eclipse.jetty.server.session.SessionHandler.doStop(SessionHandler.java:127) at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89) at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:143) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:162) at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:73) at org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:833) at org.eclipse.jetty.servlet.ServletContextHandler.doStop(ServletContextHandler.java:215) at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89) at org.eclipse.jetty.util.component.ContainerLifeCycle.stop(ContainerLifeCycle.java:143) at org.eclipse.jetty.util.component.ContainerLifeCycle.doStop(ContainerLifeCycle.java:162) at org.eclipse.jetty.server.handler.AbstractHandler.doStop(AbstractHandler.java:73) at org.eclipse.jetty.server.Server.doStop(Server.java:456) at org.eclipse.jetty.util.component.AbstractLifeCycle.stop(AbstractLifeCycle.java:89) at com.example.server.ExampleServer.stopServer(ExampleServer.java:269) at com.example.server.ExampleServer.stop(ExampleServer.java:279) INFO  (ContextHandler) 2014-11-06 00:49:24990 - org.eclipse.jetty.server.handler.ContextHandler.doStop(ContextHandler.java:863): Stopped o.e.j.s.ServletContextHandler@63f259c3/nullUNAVAILABLE noformat", "A_clean_title": ["nullpointerexcept", "null", "pointer", "except", "inthashmapi", "int", "hash", "map", "wa", "look", "through", "tester", "log", "file", "track", "down", "separ", "issu", "came", "across", "nullpointerexcept", "null", "pointer", "except", "inthashmap", "int", "hash", "map", "appar", "when", "server", "wa", "shut", "down", "see", "also", "wicket", "5584", "which", "also", "deal", "nullpointerexcept", "null", "pointer", "except", "inthashmap", "int", "hash", "map", "also", "seem", "relat", "null", "modcount", "mod", "count", "judg", "by", "line", "number", "noformat", "info", "exampleserv", "exampl", "server", "2014", "11", "06", "00:49:24979", "com", "exampl", "server", "exampleserv", "stopserv", "exampl", "server", "stop", "server", "exampleserv", "java:268", "exampl", "server", "stop", "server", "info", "serverconnector", "server", "connector", "2014", "11", "06", "00:49:24982", "org", "eclips", "jetti", "server", "abstractconnector", "dostop", "abstract", "connector", "stop", "abstractconnector", "java:306", "abstract", "connector", "stop", "serverconnector", "server", "connector", "10", "0:8099", "3b7d3a38http", "info", "applic", "2014", "11", "06", "00:49:24983", "org", "apach", "wicket", "applic", "destroyiniti", "destroy", "initi", "applic", "java:588", "55b0dcab", "org", "apach", "wicket", "protocol", "http", "wicketfilt", "wicket", "filter", "destroy", "wicket", "core", "librari", "initi", "info", "applic", "2014", "11", "06", "00:49:24983", "org", "apach", "wicket", "applic", "destroyiniti", "destroy", "initi", "applic", "java:588", "55b0dcab", "org", "apach", "wicket", "protocol", "http", "wicketfilt", "wicket", "filter", "destroy", "wicket", "extens", "initi", "error", "diskdatastor", "disk", "data", "store", "2014", "11", "06", "00:49:24988", "org", "apach", "wicket", "pagestor", "diskdatastor", "saveindex", "page", "store", "disk", "data", "store", "save", "index", "diskdatastor", "java:282", "disk", "data", "store", "couldnt", "write", "diskdatastor", "disk", "data", "store", "index", "file", "55b0dcab", "filestorediskdatastoreindex", "windowsservic~2networ~1appdatalocaltemporg", "apach", "wicket", "protocol", "http", "wicketfilt", "filestor", "disk", "data", "store", "index", "window", "servic~2networ~1app", "data", "local", "temporg", "wicket", "filter", "java", "lang", "nullpointerexcept", "null", "pointer", "except", "at", "org", "apach", "wicket", "util", "collect", "inthashmap", "int", "hash", "map", "hashiter", "hash", "iter", "init", "inthashmap", "java:777", "int", "hash", "map", "at", "org", "apach", "wicket", "util", "collect", "inthashmap", "int", "hash", "map", "entryiter", "entri", "iter", "init", "inthashmap", "java:871", "int", "hash", "map", "at", "org", "apach", "wicket", "util", "collect", "inthashmap", "int", "hash", "map", "entryiter", "entri", "iter", "init", "inthashmap", "java:871", "int", "hash", "map", "at", "org", "apach", "wicket", "util", "collect", "inthashmap", "newentryiter", "int", "hash", "map", "new", "entri", "iter", "inthashmap", "java:896", "int", "hash", "map", "at", "org", "apach", "wicket", "util", "collect", "inthashmap", "int", "hash", "map", "entryset", "iter", "entri", "set", "inthashmap", "java:1055", "int", "hash", "map", "at", "org", "apach", "wicket", "util", "collect", "inthashmap", "writeobject", "int", "hash", "map", "write", "object", "inthashmap", "java:1128", "int", "hash", "map", "at", "sun", "reflect", "nativemethodaccessorimpl", "invoke0", "nativ", "method", "accessor", "impl", "nativ", "method", "at", "sun", "reflect", "nativemethodaccessorimpl", "invok", "nativ", "method", "accessor", "impl", "nativemethodaccessorimpl", "java:62", "nativ", "method", "accessor", "impl", "at", "sun", "reflect", "delegatingmethodaccessorimpl", "invok", "deleg", "method", "accessor", "impl", "delegatingmethodaccessorimpl", "java:43", "deleg", "method", "accessor", "impl", "at", "java", "lang", "reflect", "method", "invok", "method", "java:483", "at", "java", "io", "objectstreamclass", "invokewriteobject", "object", "stream", "class", "invok", "write", "object", "objectstreamclass", "java:988", "object", "stream", "class", "at", "java", "io", "objectoutputstream", "writeserialdata", "object", "output", "stream", "write", "serial", "data", "objectoutputstream", "java:1496", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeordinaryobject", "object", "output", "stream", "write", "ordinari", "object", "objectoutputstream", "java:1432", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeobject0", "object", "output", "stream", "write", "object0", "objectoutputstream", "java:1178", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "defaultwritefield", "object", "output", "stream", "default", "write", "field", "objectoutputstream", "java:1548", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeserialdata", "object", "output", "stream", "write", "serial", "data", "objectoutputstream", "java:1509", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeordinaryobject", "object", "output", "stream", "write", "ordinari", "object", "objectoutputstream", "java:1432", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeobject0", "object", "output", "stream", "write", "object0", "objectoutputstream", "java:1178", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "defaultwritefield", "object", "output", "stream", "default", "write", "field", "objectoutputstream", "java:1548", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeserialdata", "object", "output", "stream", "write", "serial", "data", "objectoutputstream", "java:1509", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeordinaryobject", "object", "output", "stream", "write", "ordinari", "object", "objectoutputstream", "java:1432", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeobject0", "object", "output", "stream", "write", "object0", "objectoutputstream", "java:1178", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeobject", "object", "output", "stream", "write", "object", "objectoutputstream", "java:348", "object", "output", "stream", "at", "java", "util", "hashmap", "internalwriteentri", "hash", "map", "intern", "write", "entri", "hashmap", "java:1777", "hash", "map", "at", "java", "util", "hashmap", "writeobject", "hash", "map", "write", "object", "hashmap", "java:1354", "hash", "map", "at", "sun", "reflect", "nativemethodaccessorimpl", "invoke0", "nativ", "method", "accessor", "impl", "nativ", "method", "at", "sun", "reflect", "nativemethodaccessorimpl", "invok", "nativ", "method", "accessor", "impl", "nativemethodaccessorimpl", "java:62", "nativ", "method", "accessor", "impl", "at", "sun", "reflect", "delegatingmethodaccessorimpl", "invok", "deleg", "method", "accessor", "impl", "delegatingmethodaccessorimpl", "java:43", "deleg", "method", "accessor", "impl", "at", "java", "lang", "reflect", "method", "invok", "method", "java:483", "at", "java", "io", "objectstreamclass", "invokewriteobject", "object", "stream", "class", "invok", "write", "object", "objectstreamclass", "java:988", "object", "stream", "class", "at", "java", "io", "objectoutputstream", "writeserialdata", "object", "output", "stream", "write", "serial", "data", "objectoutputstream", "java:1496", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeordinaryobject", "object", "output", "stream", "write", "ordinari", "object", "objectoutputstream", "java:1432", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeobject0", "object", "output", "stream", "write", "object0", "objectoutputstream", "java:1178", "object", "output", "stream", "at", "java", "io", "objectoutputstream", "writeobject", "object", "output", "stream", "write", "object", "objectoutputstream", "java:348", "object", "output", "stream", "at", "org", "apach", "wicket", "pagestor", "diskdatastor", "saveindex", "page", "store", "disk", "data", "store", "save", "index", "diskdatastor", "java:274", "disk", "data", "store", "at", "org", "apach", "wicket", "pagestor", "diskdatastor", "destroy", "page", "store", "disk", "data", "store", "diskdatastor", "java:106", "disk", "data", "store", "at", "org", "apach", "wicket", "pagestor", "asynchronousdatastor", "destroy", "page", "store", "asynchron", "data", "store", "asynchronousdatastor", "java:118", "asynchron", "data", "store", "at", "org", "apach", "wicket", "pagestor", "abstractpagestor", "destroy", "page", "store", "abstract", "page", "store", "abstractpagestor", "java:53", "abstract", "page", "store", "at", "org", "apach", "wicket", "pagestor", "abstractcachingpagestor", "destroy", "page", "store", "abstract", "cach", "page", "store", "abstractcachingpagestor", "java:102", "abstract", "cach", "page", "store", "at", "org", "apach", "wicket", "page", "pagestoremanag", "destroy", "page", "store", "manag", "pagestoremanag", "java:437", "page", "store", "manag", "at", "org", "apach", "wicket", "applic", "internaldestroy", "intern", "destroy", "applic", "java:659", "at", "org", "apach", "wicket", "protocol", "http", "webappl", "internaldestroy", "web", "applic", "intern", "destroy", "webappl", "java:607", "web", "applic", "at", "org", "apach", "wicket", "protocol", "http", "wicketfilt", "destroy", "wicket", "filter", "wicketfilt", "java:605", "wicket", "filter", "at", "org", "eclips", "jetti", "servlet", "filterhold", "destroyinst", "filter", "holder", "destroy", "instanc", "filterhold", "java:173", "filter", "holder", "at", "org", "eclips", "jetti", "servlet", "filterhold", "dostop", "filter", "holder", "stop", "filterhold", "java:151", "filter", "holder", "at", "org", "eclips", "jetti", "util", "compon", "abstractlifecycl", "stop", "abstract", "life", "cycl", "abstractlifecycl", "java:89", "abstract", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "stop", "contain", "life", "cycl", "containerlifecycl", "java:143", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "dostop", "contain", "life", "cycl", "stop", "containerlifecycl", "java:162", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "server", "handler", "abstracthandl", "dostop", "abstract", "handler", "stop", "abstracthandl", "java:73", "abstract", "handler", "at", "org", "eclips", "jetti", "servlet", "servlethandl", "dostop", "servlet", "handler", "stop", "servlethandl", "java:230", "servlet", "handler", "at", "org", "eclips", "jetti", "util", "compon", "abstractlifecycl", "stop", "abstract", "life", "cycl", "abstractlifecycl", "java:89", "abstract", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "stop", "contain", "life", "cycl", "containerlifecycl", "java:143", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "dostop", "contain", "life", "cycl", "stop", "containerlifecycl", "java:162", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "server", "handler", "abstracthandl", "dostop", "abstract", "handler", "stop", "abstracthandl", "java:73", "abstract", "handler", "at", "org", "eclips", "jetti", "secur", "securityhandl", "dostop", "secur", "handler", "stop", "securityhandl", "java:411", "secur", "handler", "at", "org", "eclips", "jetti", "secur", "constraintsecurityhandl", "dostop", "constraint", "secur", "handler", "stop", "constraintsecurityhandl", "java:457", "constraint", "secur", "handler", "at", "org", "eclips", "jetti", "util", "compon", "abstractlifecycl", "stop", "abstract", "life", "cycl", "abstractlifecycl", "java:89", "abstract", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "stop", "contain", "life", "cycl", "containerlifecycl", "java:143", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "dostop", "contain", "life", "cycl", "stop", "containerlifecycl", "java:162", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "server", "handler", "abstracthandl", "dostop", "abstract", "handler", "stop", "abstracthandl", "java:73", "abstract", "handler", "at", "org", "eclips", "jetti", "server", "session", "sessionhandl", "dostop", "session", "handler", "stop", "sessionhandl", "java:127", "session", "handler", "at", "org", "eclips", "jetti", "util", "compon", "abstractlifecycl", "stop", "abstract", "life", "cycl", "abstractlifecycl", "java:89", "abstract", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "stop", "contain", "life", "cycl", "containerlifecycl", "java:143", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "dostop", "contain", "life", "cycl", "stop", "containerlifecycl", "java:162", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "server", "handler", "abstracthandl", "dostop", "abstract", "handler", "stop", "abstracthandl", "java:73", "abstract", "handler", "at", "org", "eclips", "jetti", "server", "handler", "contexthandl", "dostop", "context", "handler", "stop", "contexthandl", "java:833", "context", "handler", "at", "org", "eclips", "jetti", "servlet", "servletcontexthandl", "dostop", "servlet", "context", "handler", "stop", "servletcontexthandl", "java:215", "servlet", "context", "handler", "at", "org", "eclips", "jetti", "util", "compon", "abstractlifecycl", "stop", "abstract", "life", "cycl", "abstractlifecycl", "java:89", "abstract", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "stop", "contain", "life", "cycl", "containerlifecycl", "java:143", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "util", "compon", "containerlifecycl", "dostop", "contain", "life", "cycl", "stop", "containerlifecycl", "java:162", "contain", "life", "cycl", "at", "org", "eclips", "jetti", "server", "handler", "abstracthandl", "dostop", "abstract", "handler", "stop", "abstracthandl", "java:73", "abstract", "handler", "at", "org", "eclips", "jetti", "server", "server", "dostop", "stop", "server", "java:456", "at", "org", "eclips", "jetti", "util", "compon", "abstractlifecycl", "stop", "abstract", "life", "cycl", "abstractlifecycl", "java:89", "abstract", "life", "cycl", "at", "com", "exampl", "server", "exampleserv", "stopserv", "exampl", "server", "stop", "server", "exampleserv", "java:269", "exampl", "server", "at", "com", "exampl", "server", "exampleserv", "stop", "exampl", "server", "exampleserv", "java:279", "exampl", "server", "info", "contexthandl", "context", "handler", "2014", "11", "06", "00:49:24990", "org", "eclips", "jetti", "server", "handler", "contexthandl", "dostop", "context", "handler", "stop", "contexthandl", "java:863", "context", "handler", "stop", "servletcontexthandl", "servlet", "context", "handler", "63f259c3", "nullunavail", "null", "unavail", "noformat"], "B_title": "NullPointerException in IntHashMap WICKET-5584 DiskDataStore error", "B_clean_title": ["nullpointerexcept", "null", "pointer", "except", "inthashmap", "int", "hash", "map", "wicket", "5584", "diskdatastor", "disk", "data", "store", "error"]},
{"A_title": "VersionablePathHook must not process hidden nodesThe VersionablePathHook also processes hidden nodes e.g. index data which adds considerable overhead to the merge phase.", "A_clean_title": ["versionablepathhook", "version", "path", "hook", "must", "not", "process", "hidden", "nodesth", "node", "versionablepathhook", "version", "path", "hook", "also", "process", "hidden", "node", "index", "data", "which", "add", "consider", "overhead", "merg", "phase"], "B_title": "VersionablePathHook must not process hidden nodes", "B_clean_title": ["versionablepathhook", "version", "path", "hook", "must", "not", "process", "hidden", "node"]},
{"A_title": "EmpiricalDistribution cumulativeProbability can return NaN when evaluated within a constant binIf x belongs to a bin with no variance or to which a ConstantRealDistribution kernel has been assigned cumulativeProbability(x) can return NaN.", "A_clean_title": ["empiricaldistribut", "empir", "distribut", "cumulativeprob", "cumul", "probabl", "return", "nan", "na", "when", "evalu", "within", "constant", "binif", "bin", "belong", "bin", "no", "varianc", "or", "which", "constantrealdistribut", "constant", "real", "distribut", "kernel", "ha", "been", "assign", "cumulativeprob", "cumul", "probabl", "return", "nan", "na"], "B_title": "Corrected the fix for MATH-1208.", "B_clean_title": ["correct", "fix", "math", "1208"]},
{"A_title": "Check Calendar.ERA in LocalDate.fromCalendarFieldsNone", "A_clean_title": ["check", "calendar", "era", "locald", "fromcalendarfieldsnon", "local", "date", "calendar", "field", "none"], "B_title": "Fix fromCalendarFields()/fromDateFields() to handle era BC correctly", "B_clean_title": ["fix", "fromcalendarfield", "calendar", "field", "fromdatefield", "date", "field", "handl", "era", "bc", "correctli"]},
{"A_title": "ArgumentCaptor no longer working for varargsWhen upgrading 1.10.8 the verify passes but the getValue() fails with this error. One other piece of info came to light as a result of creating the MCVE - the test works fine if the Date is the only element passed for bindVariables. That is remove var1 from target and test code then the test runs fine under 1.9.5 and 1.10.8. Also it doesnt matter that the captor is for a Date. The same issue occurs if the parameter is of another type such as Integer.", "A_clean_title": ["argumentcaptor", "argument", "captor", "no", "longer", "work", "varargswhen", "vararg", "when", "upgrad", "10", "verifi", "pass", "but", "getvalu", "get", "valu", "fail", "thi", "error", "one", "other", "piec", "info", "came", "light", "as", "result", "creat", "mcve", "test", "work", "fine", "date", "onli", "element", "pass", "bindvari", "bind", "variabl", "that", "remov", "var1", "target", "test", "code", "then", "test", "run", "fine", "under", "10", "also", "it", "doesnt", "matter", "that", "captor", "date", "same", "issu", "occur", "paramet", "anoth", "type", "such", "as", "integ"], "B_title": "Fixes #188 : provided working example for vararg capture issue.", "B_clean_title": ["fix", "188", "provid", "work", "exampl", "vararg", "captur", "issu"]},
{"A_title": "RegExFilter deepCopy NullPointerExceptionIf any of the regex matcher objects are null (i.e. for example if you only specify a regex for the column family) the deepCopy call will throw a NullPointerException.", "A_clean_title": ["regexfilt", "reg", "ex", "filter", "deepcopi", "deep", "copi", "nullpointerexceptionif", "null", "pointer", "except", "ani", "regex", "matcher", "object", "are", "null", "exampl", "you", "onli", "specifi", "regex", "column", "famili", "deepcopi", "deep", "copi", "call", "will", "throw", "nullpointerexcept", "null", "pointer", "except"], "B_title": "applied patch", "B_clean_title": ["appli", "patch"]},
{"A_title": "new multivariate vector optimizers cannot be used with large number of weightsWhen using the Weigth class to pass a large number of weights to multivariate vector optimizers an nxn full matrix is created (and copied) when a n elements vector is used. This exhausts memory when n is large.  This happens for example when using curve fitters (even simple curve fitters like polynomial ones for low degree) with large number of points. I encountered this with curve fitting on 41200 points which created a matrix with 1.7 billion elements.", "A_clean_title": ["new", "multivari", "vector", "optim", "not", "use", "larg", "number", "weightswhen", "weight", "when", "weigth", "class", "pass", "larg", "number", "weight", "multivari", "vector", "optim", "nxn", "full", "matrix", "creat", "copi", "when", "element", "vector", "use", "thi", "exhaust", "memori", "when", "larg", "thi", "happen", "exampl", "when", "curv", "fitter", "even", "simpl", "curv", "fitter", "like", "polynomi", "one", "low", "degre", "larg", "number", "point", "encount", "thi", "curv", "fit", "41200", "point", "which", "creat", "matrix", "billion", "element"], "B_title": "Using a diagonal matrix to avoid exhausting memory.", "B_clean_title": ["diagon", "matrix", "avoid", "exhaust", "memori"]},
{"A_title": "Page not mounted with WebApplication#mountPackageA bookmarkable page FormPage is mounted via WebApplication#mountPackage().  If this page is opened via IModel model; setResponsePage(new FormPage(IModel model)); then the URL is /wicket/page?0 which is not mounted.  If the page is mounted via WebApplication#mountPage() then the URL is mounted as expected.  If the page is not mounted then the users get PageExpiredException which in this case is unrecoverable.", "A_clean_title": ["page", "not", "mount", "webappl", "web", "applic", "mountpackagea", "mount", "packag", "bookmark", "page", "formpag", "form", "page", "mount", "via", "webappl", "web", "applic", "mountpackag", "mount", "packag", "thi", "page", "open", "via", "imodel", "model", "model", "setresponsepag", "set", "respons", "page", "new", "formpag", "form", "page", "imodel", "model", "model", "then", "url", "wicket", "page", "which", "not", "mount", "page", "mount", "via", "webappl", "web", "applic", "mountpag", "mount", "page", "then", "url", "mount", "as", "expect", "page", "not", "mount", "then", "user", "get", "pageexpiredexcept", "page", "expir", "except", "which", "thi", "case", "unrecover"], "B_title": "Page not mounted with WebApplication#mountPackage", "B_clean_title": ["page", "not", "mount", "webappl", "web", "applic", "mountpackag", "mount", "packag"]},
{"A_title": "SHOW_NO_EXCEPTION_PAGE responding with HTTP status 500 is overwritten by redirectIf the application is configured with SHOW_NO_EXCEPTION_PAGE as unexpectedExceptionDisplay an exception thrown while submitting a form should result in an HTTP 500 status. Since the request is already marked as a redirect in AbstractListenerInterfaceRequestTarget#onProcessEvents() the 500 status is overwritten with status 200 when the redirect is handled afterwards.", "A_clean_title": ["show", "no", "except", "page", "respond", "http", "statu", "500", "overwritten", "by", "redirectif", "redirect", "applic", "configur", "show", "no", "except", "page", "as", "unexpectedexceptiondisplay", "unexpect", "except", "display", "except", "thrown", "while", "submit", "form", "result", "http", "500", "statu", "sinc", "request", "alreadi", "mark", "as", "redirect", "abstractlistenerinterfacerequesttarget", "abstract", "listen", "interfac", "request", "target", "onprocessev", "process", "event", "500", "statu", "overwritten", "statu", "200", "when", "redirect", "handl", "afterward"], "B_title": "SHOW_NO_EXCEPTION_PAGE responding with HTTP status 500 is overwritten by redirect", "B_clean_title": ["show", "no", "except", "page", "respond", "http", "statu", "500", "overwritten", "by", "redirect"]},
{"A_title": "Component#getMarkupId() throws exceptions when not added to page yetWhen retrieving the markup ID for a component that has not yet been added to a page Wicket currently throws an exception telling that the markup could not be found or that the markup type (in case the component was added to a Panel) could not be determined. In 1.4 Wicket would generate a markup ID in these cases.  Proposed solution: to first see if a markup ID has been either generated or set (using setOutputMarkupId) and then returning that or if no ID was yet available *and* the component has been added to a Page: use the ID from the markup or if the component has not been added to a Page nor a markup ID: generate the ID.", "A_clean_title": ["compon", "getmarkupid", "get", "markup", "id", "throw", "except", "when", "not", "ad", "page", "yetwhen", "yet", "when", "retriev", "markup", "id", "compon", "that", "ha", "not", "yet", "been", "ad", "page", "wicket", "current", "throw", "except", "tell", "that", "markup", "could", "not", "found", "or", "that", "markup", "type", "case", "compon", "wa", "ad", "panel", "could", "not", "determin", "wicket", "would", "gener", "markup", "id", "these", "case", "propos", "solut", "first", "see", "markup", "id", "ha", "been", "either", "gener", "or", "set", "setoutputmarkupid", "set", "output", "markup", "id", "then", "return", "that", "or", "no", "id", "wa", "yet", "avail", "compon", "ha", "been", "ad", "page", "use", "id", "markup", "or", "compon", "ha", "not", "been", "ad", "page", "nor", "markup", "id", "gener", "id"], "B_title": "Fixed a regression between Wicket 1.4 and 1.5 where markup ID generation/retrieval caused runtime exceptions in cases where the component was not added to the Page yet. Improved the semantics of Component#getMarkupId() and encased it in a couple unit tests. Issue: WICKET-3647", "B_clean_title": ["fix", "regress", "between", "wicket", "where", "markup", "id", "gener", "retriev", "caus", "runtim", "except", "case", "where", "compon", "wa", "not", "ad", "page", "yet", "improv", "semant", "compon", "getmarkupid", "get", "markup", "id", "encas", "it", "coupl", "unit", "test", "issu", "wicket", "3647"]},
{"A_title": "Vector3D.crossProduct is sensitive to numerical cancellationCross product implementation uses the naive formulas (y1 z2 - y2 z1 ...). These formulas fail when vectors are almost colinear like in the following example: code Vector3D v1 = new Vector3D(9070467121.0 4535233560.0 1); Vector3D v2 = new Vector3D(9070467123.0 4535233561.0 1); System.out.println(Vector3D.crossProduct(v1 v2)); code  The previous code displays  -1 2 0  instead of the correct answer  -1 2 1", "A_clean_title": ["vector3d", "crossproduct", "cross", "product", "sensit", "numer", "cancellationcross", "cancel", "cross", "product", "implement", "use", "naiv", "formula", "y1", "z2", "y2", "z1", "these", "formula", "fail", "when", "vector", "are", "almost", "colinear", "like", "follow", "exampl", "code", "vector3d", "v1", "new", "vector3d", "9070467121", "4535233560", "vector3d", "v2", "new", "vector3d", "9070467123", "4535233561", "system", "out", "println", "vector3d", "crossproduct", "cross", "product", "v1", "v2", "code", "previou", "code", "display", "instead", "correct", "answer"], "B_title": "Reduced cancellation errors in Vector3D.crossProduct", "B_clean_title": ["reduc", "cancel", "error", "vector3d", "crossproduct", "cross", "product"]},
{"A_title": "Auxiliary nodes in iterations are not correctly identified as dynamic or staticThe static/dynamic path tagger starts on the original roots of the step functions ignoring possible auxiliary nodes that we need to attach to the root (such as NoOps when the root is a union)", "A_clean_title": ["auxiliari", "node", "iter", "are", "not", "correctli", "identifi", "as", "dynam", "or", "staticth", "static", "static", "dynam", "path", "tagger", "start", "origin", "root", "step", "function", "ignor", "possibl", "auxiliari", "node", "that", "we", "need", "attach", "root", "such", "as", "noop", "no", "op", "when", "root", "union"], "B_title": "optimizer Correctly tag static/dynamic path for auxiliary nodes in iterations.", "B_clean_title": ["optim", "correctli", "tag", "static", "dynam", "path", "auxiliari", "node", "iter"]},
{"A_title": "TarMK Cold Standby expose standby read timeout valueRunning into a read timeout on the standby instance logs some uncaught error: code org.apache.jackrabbit.oak.plugins.segment.standby.client.SegmentLoaderHandler Exception caught closing channel. io.netty.handler.timeout.ReadTimeoutException: null code  Im not sure how/if I need to fix this the sync process will pickup again but we can expose the timeout value so if the network connection is known to be poor a client can increase the timeout to work around this issue.", "A_clean_title": ["tarmk", "tar", "mk", "cold", "standbi", "expos", "standbi", "read", "timeout", "valuerun", "valu", "run", "into", "read", "timeout", "standbi", "instanc", "log", "some", "uncaught", "error", "code", "org", "apach", "jackrabbit", "oak", "plugin", "segment", "standbi", "client", "segmentloaderhandl", "segment", "loader", "handler", "except", "caught", "close", "channel", "io", "netti", "handler", "timeout", "readtimeoutexcept", "read", "timeout", "except", "null", "code", "im", "not", "sure", "how", "need", "fix", "thi", "sync", "process", "will", "pickup", "again", "but", "we", "expos", "timeout", "valu", "so", "network", "connect", "known", "poor", "client", "increas", "timeout", "work", "around", "thi", "issu"], "B_title": "TarMK Cold Standby expose standby read timeout value  - default timeout value for tests is too small", "B_clean_title": ["tarmk", "tar", "mk", "cold", "standbi", "expos", "standbi", "read", "timeout", "valu", "default", "timeout", "valu", "test", "too", "small"]},
{"A_title": "Disable reference tracking in Kryo fallback serializerKryo runs extra logic to track and resolve repeated references to the same object (similar as JavaSerialization)  We should disable reference tracking   - reference tracking is costly   - it is virtually always unnecessary in the datatypes used in Flink   - most importantly it is inconsistent with Flinks own serialization (which does not do reference tracking)   - It may have problems if elements are read in a different order than they are written.", "A_clean_title": ["disabl", "refer", "track", "kryo", "fallback", "serializerkryo", "serial", "kryo", "run", "extra", "logic", "track", "resolv", "repeat", "refer", "same", "object", "similar", "as", "javaseri", "java", "serial", "we", "disabl", "refer", "track", "refer", "track", "costli", "it", "virtual", "alway", "unnecessari", "datatyp", "use", "flink", "most", "importantli", "it", "inconsist", "flink", "own", "serial", "which", "not", "refer", "track", "it", "may", "have", "problem", "element", "are", "read", "differ", "order", "than", "they", "are", "written"], "B_title": "Disable reference tracking in Kryo fallback serializer", "B_clean_title": ["disabl", "refer", "track", "kryo", "fallback", "serial"]},
{"A_title": "BrentSolver throws IllegalArgumentExceptionI am getting this exception: java.lang.IllegalArgumentException: Function values at endpoints do not have different signs.  Endpoints: -100000.01.7976931348623157E308  Values: 0.0-101945.04630982173 at org.apache.commons.math.analysis.BrentSolver.solve(BrentSolver.java:99) at org.apache.commons.math.analysis.BrentSolver.solve(BrentSolver.java:62) The exception should not be thrown with values  0.0-101945.04630982173 because 0.0 is positive. According to Brent Worden the algorithm should stop and return 0 as the root instead of throwing an exception. The problem comes from this method:     public double solve(double min double max) throws MaxIterationsExceededException          FunctionEvaluationException          clearResult();         verifyInterval(min max);         double yMin = f.value(min);         double yMax = f.value(max);         // Verify bracketing         if (yMin * yMax >= 0)               throw new IllegalArgumentException             (Function values at endpoints do not have different signs. +                       Endpoints:  + min +  + max +  +                        Values:  + yMin +  + yMax + );                          // solve using only the first endpoint as initial guess         return solve(min yMin max yMax min yMin);      One way to fix it would be to add this code after the assignment of yMin and yMax:         if (yMin ==0 || yMax == 0)           return 0;", "A_clean_title": ["brentsolv", "brent", "solver", "throw", "illegalargumentexceptioni", "illeg", "argument", "except", "am", "get", "thi", "except", "java", "lang", "illegalargumentexcept", "illeg", "argument", "except", "function", "valu", "at", "endpoint", "not", "have", "differ", "sign", "endpoint", "100000", "01", "7976931348623157e308", "valu", "101945", "04630982173", "at", "org", "apach", "common", "math", "analysi", "brentsolv", "solv", "brent", "solver", "brentsolv", "java:99", "brent", "solver", "at", "org", "apach", "common", "math", "analysi", "brentsolv", "solv", "brent", "solver", "brentsolv", "java:62", "brent", "solver", "except", "not", "thrown", "valu", "101945", "04630982173", "becaus", "posit", "accord", "brent", "worden", "algorithm", "stop", "return", "as", "root", "instead", "throw", "except", "problem", "come", "thi", "method", "public", "doubl", "solv", "doubl", "min", "doubl", "max", "throw", "maxiterationsexceededexcept", "max", "iter", "exceed", "except", "functionevaluationexcept", "function", "evalu", "except", "clearresult", "clear", "result", "verifyinterv", "verifi", "interv", "min", "max", "doubl", "ymin", "min", "valu", "min", "doubl", "ymax", "max", "valu", "max", "verifi", "bracket", "ymin", "min", "ymax", "max", "throw", "new", "illegalargumentexcept", "illeg", "argument", "except", "function", "valu", "at", "endpoint", "not", "have", "differ", "sign", "endpoint", "min", "max", "valu", "ymin", "min", "ymax", "max", "solv", "onli", "first", "endpoint", "as", "initi", "guess", "return", "solv", "min", "ymin", "min", "max", "ymax", "max", "min", "ymin", "min", "one", "way", "fix", "it", "would", "add", "thi", "code", "after", "assign", "ymin", "min", "ymax", "max", "ymin", "min", "==0", "ymax", "max", "return"], "B_title": "ported all changes from trunk between r6152100 (branch 2.0 creation) and r670469 (today) These changes contain fixes for MATH-204 and MATH-205", "B_clean_title": ["port", "all", "chang", "trunk", "between", "r6152100", "branch", "creation", "r670469", "today", "these", "chang", "contain", "fix", "math", "204", "math", "205"]},
{"A_title": "CDI integration fails in Glassfish 4.0 with WELD-000070When CDI is configured in the Application and a page has a non-static inner class the page throws exception regardless of whether there are any injected fields.  Caused by: org.jboss.weld.exceptions.DefinitionException: WELD-000070 Simple bean EnhancedAnnotatedTypeImpl private  class com.inversebit.HomePage AForm cannot be a non-static inner class at org.jboss.weld.injection.producer.BasicInjectionTarget.checkType(BasicInjectionTarget.java:81) at org.jboss.weld.injection.producer.BasicInjectionTarget.<init>(BasicInjectionTarget.java:69) at org.jboss.weld.injection.producer.BeanInjectionTarget.<init>(BeanInjectionTarget.java:52) at org.jboss.weld.manager.InjectionTargetFactoryImpl.createInjectionTarget(InjectionTargetFactoryImpl.java:95) at org.jboss.weld.manager.InjectionTargetFactoryImpl.createInjectionTarget(InjectionTargetFactoryImpl.java:78) ... 65 more", "A_clean_title": ["cdi", "integr", "fail", "glassfish", "weld", "000070when", "cdi", "configur", "applic", "page", "ha", "non", "static", "inner", "class", "page", "throw", "except", "regardless", "whether", "there", "are", "ani", "inject", "field", "caus", "by", "org", "jboss", "weld", "except", "definitionexcept", "definit", "except", "weld", "000070", "simpl", "bean", "enhancedannotatedtypeimpl", "enhanc", "annot", "type", "impl", "privat", "class", "com", "inversebit", "homepag", "home", "page", "aform", "form", "not", "non", "static", "inner", "class", "at", "org", "jboss", "weld", "inject", "produc", "basicinjectiontarget", "checktyp", "basic", "inject", "target", "check", "type", "basicinjectiontarget", "java:81", "basic", "inject", "target", "at", "org", "jboss", "weld", "inject", "produc", "basicinjectiontarget", "basic", "inject", "target", "init", "basicinjectiontarget", "java:69", "basic", "inject", "target", "at", "org", "jboss", "weld", "inject", "produc", "beaninjectiontarget", "bean", "inject", "target", "init", "beaninjectiontarget", "java:52", "bean", "inject", "target", "at", "org", "jboss", "weld", "manag", "injectiontargetfactoryimpl", "createinjectiontarget", "inject", "target", "factori", "impl", "creat", "inject", "target", "injectiontargetfactoryimpl", "java:95", "inject", "target", "factori", "impl", "at", "org", "jboss", "weld", "manag", "injectiontargetfactoryimpl", "createinjectiontarget", "inject", "target", "factori", "impl", "creat", "inject", "target", "injectiontargetfactoryimpl", "java:78", "inject", "target", "factori", "impl", "65", "more"], "B_title": "CDI integration fails in Glassfish 4.0 with WELD-000070", "B_clean_title": ["cdi", "integr", "fail", "glassfish", "weld", "000070"]},
{"A_title": "UknownParameterException message prints 0 instead of parameter nameThe constructor for UnknownParameterException stores the parameter name internally but does not forward it to the base class which creates the error message.", "A_clean_title": ["uknownparameterexcept", "uknown", "paramet", "except", "messag", "print", "instead", "paramet", "nameth", "name", "constructor", "unknownparameterexcept", "unknown", "paramet", "except", "store", "paramet", "name", "intern", "but", "not", "forward", "it", "base", "class", "which", "creat", "error", "messag"], "B_title": "Fixed error message for unknown parameter name in ODE.", "B_clean_title": ["fix", "error", "messag", "unknown", "paramet", "name", "ode"]},
{"A_title": "Multivalued properties with array size 0 forget their typethought i remember that i have seen a related TODO or issue before i couldnt find it any more... sorry for that.  while cleaning up the node type code i found that one FIXME in the  ReadOnlyNodeTypeManager related to definition generation was only needed because the TypeValidator failed upon validation of an empty jcr:supertypes definition. not storing the super types if none has be declared solved the problem for the time being.  however it seems to me that the underlying problem is in a completely different area: namely that mv properties with an empty value array forget their type.  this can be verified with the following test: code     @Test     public void addEmptyMultiValueName() throws RepositoryException          Node parentNode = getNode(TEST_PATH);         Value values = new Value0;          parentNode.setProperty(multi name values);         parentNode.getSession().save();          Session session2 = createAnonymousSession();         try              Property property = session2.getProperty(TEST_PATH + /multi name);             assertTrue(property.isMultiple());             assertEquals(PropertyType.NAME property.getType());             Value values2 = property.getValues();             assertEquals(values.length values2.length);             assertEquals(values0 values20);             assertEquals(values1 values21);          finally              session2.logout();               code", "A_clean_title": ["multivalu", "properti", "array", "size", "forget", "their", "typethought", "rememb", "that", "have", "seen", "relat", "todo", "or", "issu", "befor", "couldnt", "find", "it", "ani", "more", "sorri", "that", "while", "clean", "up", "node", "type", "code", "found", "that", "one", "fixm", "readonlynodetypemanag", "read", "onli", "node", "type", "manag", "relat", "definit", "gener", "wa", "onli", "need", "becaus", "typevalid", "type", "valid", "fail", "upon", "valid", "empti", "jcr", "supertyp", "definit", "not", "store", "super", "type", "none", "ha", "declar", "solv", "problem", "time", "be", "howev", "it", "seem", "me", "that", "underli", "problem", "complet", "differ", "area", "name", "that", "mv", "properti", "empti", "valu", "array", "forget", "their", "type", "thi", "verifi", "follow", "test", "code", "test", "public", "void", "addemptymultivaluenam", "add", "empti", "multi", "valu", "name", "throw", "repositoryexcept", "repositori", "except", "node", "parentnod", "parent", "node", "getnod", "get", "node", "test", "path", "valu", "valu", "new", "value0", "parentnod", "setproperti", "parent", "node", "set", "properti", "multi", "name", "valu", "parentnod", "getsess", "parent", "node", "get", "session", "save", "session", "session2", "createanonymoussess", "creat", "anonym", "session", "tri", "properti", "properti", "session2", "getproperti", "get", "properti", "test", "path", "multi", "name", "asserttru", "assert", "true", "properti", "ismultipl", "multipl", "assertequ", "assert", "equal", "propertytyp", "name", "properti", "type", "properti", "gettyp", "get", "type", "valu", "values2", "properti", "getvalu", "get", "valu", "assertequ", "assert", "equal", "valu", "length", "values2", "length", "assertequ", "assert", "equal", "values0", "values20", "assertequ", "assert", "equal", "values1", "values21", "final", "session2", "logout", "code"], "B_title": "Multivalued properties with array size 0 forget their type", "B_clean_title": ["multivalu", "properti", "array", "size", "forget", "their", "type"]},
{"A_title": "Hourly async reindexing on an idle instanceOAK-1292 introduced the following interesting but not very nice behavior:  On an idle system with no changes for an extended amount of time the OAK-1292 change blocks the async indexer from updating the reference to the last indexed checkpoint. After one hour (the default checkpoint lifetime) the referenced checkpoint will expire and the indexer will fall back to full reindexing.  The result of this behavior is that once every hour the size of an idle instance will grow with dozens or hundreds of megabytes of new index data generated by reindexing. Older index data becomes garbage but the compaction code from OAK-1804 is needed to make it collectable. A better solution would be to prevent the reindexing from happening in the first place.", "A_clean_title": ["hourli", "async", "reindex", "idl", "instanceoak", "1292", "instanc", "oak", "introduc", "follow", "interest", "but", "not", "veri", "nice", "behavior", "idl", "system", "no", "chang", "extend", "amount", "time", "oak", "1292", "chang", "block", "async", "index", "updat", "refer", "last", "index", "checkpoint", "after", "one", "hour", "default", "checkpoint", "lifetim", "referenc", "checkpoint", "will", "expir", "index", "will", "fall", "back", "full", "reindex", "result", "thi", "behavior", "that", "onc", "everi", "hour", "size", "idl", "instanc", "will", "grow", "dozen", "or", "hundr", "megabyt", "new", "index", "data", "gener", "by", "reindex", "older", "index", "data", "becom", "garbag", "but", "compact", "code", "oak", "1804", "need", "make", "it", "collect", "better", "solut", "would", "prevent", "reindex", "happen", "first", "place"], "B_title": "Hourly async reindexing on an idle instance", "B_clean_title": ["hourli", "async", "reindex", "idl", "instanc"]},
{"A_title": "RegulaFalsiSolver failureThe following unit test: code @Test public void testBug()      final UnivariateRealFunction f = new UnivariateRealFunction()              @Override             public double value(double x)                  return Math.exp(x) - Math.pow(Math.PI 3.0);                      ;      UnivariateRealSolver solver = new RegulaFalsiSolver();     double root = solver.solve(100 f 1 10);  code fails with noformat illegal state: maximal count (100) exceeded: evaluations noformat  Using PegasusSolver the answer is found after 17 evaluations.", "A_clean_title": ["regulafalsisolv", "regula", "falsi", "solver", "failureth", "failur", "follow", "unit", "test", "code", "test", "public", "void", "testbug", "test", "bug", "final", "univariaterealfunct", "univari", "real", "function", "new", "univariaterealfunct", "univari", "real", "function", "overrid", "public", "doubl", "valu", "doubl", "return", "math", "exp", "math", "pow", "math", "pi", "univariaterealsolv", "univari", "real", "solver", "solver", "new", "regulafalsisolv", "regula", "falsi", "solver", "doubl", "root", "solver", "solv", "100", "10", "code", "fail", "noformat", "illeg", "state", "maxim", "count", "100", "exceed", "evalu", "noformat", "pegasussolv", "pegasu", "solver", "answer", "found", "after", "17", "evalu"], "B_title": "Reverted to original behaviour.", "B_clean_title": ["revert", "origin", "behaviour"]},
{"A_title": "@Inject should require the bean dependency instead of setting nullWhen using @SpringBean if the bean cannot be injected then Wicket will throw Exception.  However current behavior if when using @Inject inside component the field will be left as null. This is inconsistent behavior with what CDI spec and how the real Spring does it.  Wicket should change its behavior so that @Inject is always required. If the dependency is optional the user can use @SpringBean(required=false) as always.", "A_clean_title": ["inject", "requir", "bean", "depend", "instead", "set", "nullwhen", "null", "when", "springbean", "spring", "bean", "bean", "not", "inject", "then", "wicket", "will", "throw", "except", "howev", "current", "behavior", "when", "inject", "insid", "compon", "field", "will", "left", "as", "null", "thi", "inconsist", "behavior", "what", "cdi", "spec", "how", "real", "spring", "it", "wicket", "chang", "it", "behavior", "so", "that", "inject", "alway", "requir", "depend", "option", "user", "use", "springbean", "spring", "bean", "required=fals", "as", "alway"], "B_title": "@Inject should require the bean dependency instead of setting null", "B_clean_title": ["inject", "requir", "bean", "depend", "instead", "set", "null"]},
{"A_title": "An unnamed function statement statements should generate a parse errorNone", "A_clean_title": ["unnam", "function", "statement", "statement", "gener", "pars", "errornon", "error", "none"], "B_title": "Generate a parse error for unnamed function statements. Fixes issue 251.", "B_clean_title": ["gener", "pars", "error", "unnam", "function", "statement", "fix", "issu", "251"]},
{"A_title": "closure compiled swfobject errorNone", "A_clean_title": ["closur", "compil", "swfobject", "errornon", "error", "none"], "B_title": "Fix string-to-number conversions in the presense of verical tabs. Fixes issue 395.", "B_clean_title": ["fix", "string", "number", "convers", "presens", "veric", "tab", "fix", "issu", "395"]},
{"A_title": "DormandPrince853 integrator leads to revisiting of state eventsSee the attached ReappearingEventTest.java. It has two unit tests which use either the DormandPrince853 or the GraggBulirschStoer integrator on the same ODE problem. It is a problem starting at time 6.0 with 7 variables and 1 state event. The state event was previously detected at time 6.0 which is why I start there now. I provide and end time of 10.0. Since I start at the state event I expect to integrate all the way to the end (10.0). For the GraggBulirschStoer this is what happens (see attached ReappearingEventTest.out). For the DormandPrince853Integerator it detects a state event and stops integration at 6.000000000000002.  I think the problem becomes clear by looking at the output in ReappearingEventTest.out in particular these lines:  noformat computeDerivatives: t=6.0                  y=2.0                  2.0                  2.0                  4.0                  2.0                  7.0                  15.0                 (...) g                 : t=6.0                  y=1.9999999999999996   1.9999999999999996   1.9999999999999996   4.0                  1.9999999999999996   7.0                  14.999999999999998   (...) final result      : t=6.000000000000002    y=2.0000000000000013   2.0000000000000013   2.0000000000000013   4.000000000000002    2.0000000000000013   7.000000000000002    15.0                 noformat  The initial value of the last variable in y the one that the state event refers to is 15.0. However the first time it is given to the g function the value is 14.999999999999998. This value is less than 15 and more importantly it is a value from the past (as all functions are increasing) *before* the state event. This makes that the state event re-appears immediately and integration stops at 6.000000000000002 because of the detected state event.  I find it puzzling that for the DormandPrince853Integerator the y array that is given to the first evaluation of the g function has different values than the y array that is the input to the problem. For GraggBulirschStoer is can be seen that the y arrays have identical values.", "A_clean_title": ["dormandprince853", "dormand", "prince853", "integr", "lead", "revisit", "state", "eventsse", "event", "see", "attach", "reappearingeventtest", "java", "reappear", "event", "test", "it", "ha", "two", "unit", "test", "which", "use", "either", "dormandprince853", "dormand", "prince853", "or", "graggbulirschsto", "gragg", "bulirsch", "stoer", "integr", "same", "ode", "problem", "it", "problem", "start", "at", "time", "variabl", "state", "event", "state", "event", "wa", "previous", "detect", "at", "time", "which", "whi", "start", "there", "now", "provid", "end", "time", "10", "sinc", "start", "at", "state", "event", "expect", "integr", "all", "way", "end", "10", "graggbulirschsto", "gragg", "bulirsch", "stoer", "thi", "what", "happen", "see", "attach", "reappearingeventtest", "out", "reappear", "event", "test", "dormandprince853integer", "dormand", "prince853integer", "it", "detect", "state", "event", "stop", "integr", "at", "000000000000002", "think", "problem", "becom", "clear", "by", "look", "at", "output", "reappearingeventtest", "out", "reappear", "event", "test", "particular", "these", "line", "noformat", "computederiv", "comput", "deriv", "t=6", "y=2", "15", "t=6", "y=1", "9999999999999996", "9999999999999996", "9999999999999996", "9999999999999996", "14", "999999999999998", "final", "result", "t=6", "000000000000002", "y=2", "0000000000000013", "0000000000000013", "0000000000000013", "000000000000002", "0000000000000013", "000000000000002", "15", "noformat", "initi", "valu", "last", "variabl", "one", "that", "state", "event", "refer", "15", "howev", "first", "time", "it", "given", "function", "valu", "14", "999999999999998", "thi", "valu", "less", "than", "15", "more", "importantli", "it", "valu", "past", "as", "all", "function", "are", "increas", "befor", "state", "event", "thi", "make", "that", "state", "event", "re", "appear", "immedi", "integr", "stop", "at", "000000000000002", "becaus", "detect", "state", "event", "find", "it", "puzzl", "that", "dormandprince853integer", "dormand", "prince853integer", "array", "that", "given", "first", "evalu", "function", "ha", "differ", "valu", "than", "array", "that", "input", "problem", "graggbulirschsto", "gragg", "bulirsch", "stoer", "seen", "that", "array", "have", "ident", "valu"], "B_title": "Improved Dormand-Prince 8(53) step interpolator accuracy at step start.", "B_clean_title": ["improv", "dormand", "princ", "53", "step", "interpol", "accuraci", "at", "step", "start"]},
{"A_title": "EqualsBuilder dont compare BigDecimals correctlyWhen comparing a BigDecimal the comparing is made using equals not compareTo which is more appropriate in the case of BigDecimal.", "A_clean_title": ["equalsbuild", "equal", "builder", "dont", "compar", "bigdecim", "big", "decim", "correctlywhen", "correctli", "when", "compar", "bigdecim", "big", "decim", "compar", "made", "equal", "not", "compareto", "compar", "which", "more", "appropri", "case", "bigdecim", "big", "decim"], "B_title": "Applying my patch from LANG-393; EqualsBuilder uses compareTo for BigDecimal and not equals", "B_clean_title": ["appli", "my", "patch", "lang", "393", "equalsbuild", "equal", "builder", "use", "compareto", "compar", "bigdecim", "big", "decim", "not", "equal"]},
{"A_title": "AssertionError in MemoryNodeBuildercode     NodeBuilder root = ...     NodeBuilder child = root.child(new);      root.removeNode(new);     child.getChildNodeCount(); code  The last line throws an AssertionError when no node named new existed initially. It throws an IllegalStateException as expected otherwise.", "A_clean_title": ["assertionerror", "assert", "error", "memorynodebuildercod", "memori", "node", "buildercod", "nodebuild", "node", "builder", "root", "nodebuild", "node", "builder", "child", "root", "child", "new", "root", "removenod", "remov", "node", "new", "child", "getchildnodecount", "get", "child", "node", "count", "code", "last", "line", "throw", "assertionerror", "assert", "error", "when", "no", "node", "name", "new", "exist", "initi", "it", "throw", "illegalstateexcept", "illeg", "state", "except", "as", "expect", "otherwis"], "B_title": "AssertionError in MemoryNodeBuilder", "B_clean_title": ["assertionerror", "assert", "error", "memorynodebuild", "memori", "node", "builder"]},
{"A_title": "Invalid JCR paths not caughtNamePathMapper.getOakPath should return null when called with an invalid JCR path like foo:barbaz but it doesnt.", "A_clean_title": ["invalid", "jcr", "path", "not", "caughtnamepathmapp", "getoakpath", "caught", "name", "path", "mapper", "get", "oak", "path", "return", "null", "when", "call", "invalid", "jcr", "path", "like", "foo", "barbaz", "but", "it", "doesnt"], "B_title": ": Invalid JCR paths not caught", "B_clean_title": ["invalid", "jcr", "path", "not", "caught"]},
{"A_title": "infinite loop in Fraction.reduce when numerator == 0Summary pretty much says it all.", "A_clean_title": ["infinit", "loop", "fraction", "reduc", "when", "numer", "0summari", "pretti", "much", "say", "it", "all"], "B_title": "", "B_clean_title": []},
{"A_title": "GammaDistribution cloning brokenSerializing a GammaDistribution and deserializing it does not result in a cloned distribution that produces the same samples.  Cause: GammaDistribution inherits from AbstractRealDistribution which implements Serializable. AbstractRealDistribution has random in which we have a Well19937c instance which inherits from AbstractWell. AbstractWell implements Serializable. AbstractWell inherits from BitsStreamGenerator which is not Serializable but does have a private field nextGaussian.  Solution: Make BitStreamGenerator implement Serializable as well.  This probably affects other distributions as well.", "A_clean_title": ["gammadistribut", "gamma", "distribut", "clone", "brokenseri", "broken", "serial", "gammadistribut", "gamma", "distribut", "deseri", "it", "not", "result", "clone", "distribut", "that", "produc", "same", "sampl", "caus", "gammadistribut", "gamma", "distribut", "inherit", "abstractrealdistribut", "abstract", "real", "distribut", "which", "implement", "serializ", "abstractrealdistribut", "abstract", "real", "distribut", "ha", "random", "which", "we", "have", "well19937c", "instanc", "which", "inherit", "abstractwel", "abstract", "well", "abstractwel", "abstract", "well", "implement", "serializ", "abstractwel", "abstract", "well", "inherit", "bitsstreamgener", "bit", "stream", "gener", "which", "not", "serializ", "but", "have", "privat", "field", "nextgaussian", "next", "gaussian", "solut", "make", "bitstreamgener", "bit", "stream", "gener", "implement", "serializ", "as", "well", "thi", "probabl", "affect", "other", "distribut", "as", "well"], "B_title": "Made BitsStreamGenerator class Serializable to allow cloning of subclasses. Added cloning test for all RealDistribution classes. Thanks to Dennis Hendriks.", "B_clean_title": ["made", "bitsstreamgener", "bit", "stream", "gener", "class", "serializ", "allow", "clone", "subclass", "ad", "clone", "test", "all", "realdistribut", "real", "distribut", "class", "thank", "denni", "hendrik"]},
{"A_title": "Bug in PojoSerializers copy() methodThe PojoSerializers copy() method does not work properly with null values. An exception could look like:  code Caused by: java.io.IOException: Thread SortMerger spilling thread terminated due to an exception: null at org.apache.flink.runtime.operators.sort.UnilateralSortMerger ThreadBase.run(UnilateralSortMerger.java:792) Caused by: java.io.EOFException at org.apache.flink.runtime.io.disk.RandomAccessInputView.nextSegment(RandomAccessInputView.java:83) at org.apache.flink.runtime.memorymanager.AbstractPagedInputView.advance(AbstractPagedInputView.java:159) at org.apache.flink.runtime.memorymanager.AbstractPagedInputView.readByte(AbstractPagedInputView.java:270) at org.apache.flink.runtime.memorymanager.AbstractPagedInputView.readUnsignedByte(AbstractPagedInputView.java:277) at org.apache.flink.types.StringValue.copyString(StringValue.java:839) at org.apache.flink.api.common.typeutils.base.StringSerializer.copy(StringSerializer.java:83) at org.apache.flink.api.java.typeutils.runtime.PojoSerializer.copy(PojoSerializer.java:261) at org.apache.flink.runtime.operators.sort.NormalizedKeySorter.writeToOutput(NormalizedKeySorter.java:449) at org.apache.flink.runtime.operators.sort.UnilateralSortMerger SpillingThread.go(UnilateralSortMerger.java:1303) at org.apache.flink.runtime.operators.sort.UnilateralSortMerger ThreadBase.run(UnilateralSortMerger.java:788) code  Im working on a fix for that...", "A_clean_title": ["bug", "pojoseri", "pojo", "serial", "copi", "methodth", "method", "pojoseri", "pojo", "serial", "copi", "method", "not", "work", "properli", "null", "valu", "except", "could", "look", "like", "code", "caus", "by", "java", "io", "ioexcept", "io", "except", "thread", "sortmerg", "sort", "merger", "spill", "thread", "termin", "due", "except", "null", "at", "org", "apach", "flink", "runtim", "oper", "sort", "unilateralsortmerg", "unilater", "sort", "merger", "threadbas", "run", "thread", "base", "unilateralsortmerg", "java:792", "unilater", "sort", "merger", "caus", "by", "java", "io", "eofexcept", "eof", "except", "at", "org", "apach", "flink", "runtim", "io", "disk", "randomaccessinputview", "nextseg", "random", "access", "input", "view", "next", "segment", "randomaccessinputview", "java:83", "random", "access", "input", "view", "at", "org", "apach", "flink", "runtim", "memorymanag", "abstractpagedinputview", "advanc", "abstract", "page", "input", "view", "abstractpagedinputview", "java:159", "abstract", "page", "input", "view", "at", "org", "apach", "flink", "runtim", "memorymanag", "abstractpagedinputview", "readbyt", "abstract", "page", "input", "view", "read", "byte", "abstractpagedinputview", "java:270", "abstract", "page", "input", "view", "at", "org", "apach", "flink", "runtim", "memorymanag", "abstractpagedinputview", "readunsignedbyt", "abstract", "page", "input", "view", "read", "unsign", "byte", "abstractpagedinputview", "java:277", "abstract", "page", "input", "view", "at", "org", "apach", "flink", "type", "stringvalu", "copystr", "string", "valu", "copi", "string", "stringvalu", "java:839", "string", "valu", "at", "org", "apach", "flink", "api", "common", "typeutil", "base", "stringseri", "copi", "string", "serial", "stringseri", "java:83", "string", "serial", "at", "org", "apach", "flink", "api", "java", "typeutil", "runtim", "pojoseri", "copi", "pojo", "serial", "pojoseri", "java:261", "pojo", "serial", "at", "org", "apach", "flink", "runtim", "oper", "sort", "normalizedkeysort", "writetooutput", "normal", "key", "sorter", "write", "output", "normalizedkeysort", "java:449", "normal", "key", "sorter", "at", "org", "apach", "flink", "runtim", "oper", "sort", "unilateralsortmerg", "unilater", "sort", "merger", "spillingthread", "go", "spill", "thread", "unilateralsortmerg", "java:1303", "unilater", "sort", "merger", "at", "org", "apach", "flink", "runtim", "oper", "sort", "unilateralsortmerg", "unilater", "sort", "merger", "threadbas", "run", "thread", "base", "unilateralsortmerg", "java:788", "unilater", "sort", "merger", "code", "im", "work", "fix", "that"], "B_title": "API Fixes copy() methods in PojoSerializer for null values", "B_clean_title": ["api", "fix", "copi", "method", "pojoseri", "pojo", "serial", "null", "valu"]},
{"A_title": "Confusion between a form components wicket:id and a PageParameter in Wicket 1.5.xA Form has a strange behavior when a component has the same wicket:id than a page parameter.  To create a Bookmarkable link after a form is submited setResponsePage is called and a PageParameter object is given as a parameter :  PageParameters params = new PageParameters(); params.add(searchString searchField.getValue()); setResponsePage(SomePage.class params);  In Wicket 1.5 if searchString is also a form-components wicket:id the form will only be submitted once :  searchField.getValue() will always return the first value entered by the user.   Heres an example :   public class SearchPanel extends Panel   public SearchPanel(String id)  super(id); add(new SearchForm(searchForm));   private class SearchForm extends Form<String>   private static final long serialVersionUID = 1L; private TextField<String> searchField;  public SearchForm(String id)  super(id); searchField = new TextField<String>(searchString new Model<String>()); add(searchField);   @Override public void onSubmit()  PageParameters params = new PageParameters(); params.add(searchString searchField.getValue()); setResponsePage(ListContactsPage.class params);      I tested the same application with Wicket 1.4.17 and it was fine. I only had this problem in Wicket 1.5.2 and 1.5.3.", "A_clean_title": ["confus", "between", "form", "compon", "wicket", "id", "pageparamet", "page", "paramet", "wicket", "xa", "form", "ha", "strang", "behavior", "when", "compon", "ha", "same", "wicket", "id", "than", "page", "paramet", "creat", "bookmark", "link", "after", "form", "submit", "setresponsepag", "set", "respons", "page", "call", "pageparamet", "page", "paramet", "object", "given", "as", "paramet", "pageparamet", "page", "paramet", "param", "new", "pageparamet", "page", "paramet", "param", "add", "searchstr", "search", "string", "searchfield", "getvalu", "search", "field", "get", "valu", "setresponsepag", "set", "respons", "page", "somepag", "class", "some", "page", "param", "wicket", "searchstr", "search", "string", "also", "form", "compon", "wicket", "id", "form", "will", "onli", "submit", "onc", "searchfield", "getvalu", "search", "field", "get", "valu", "will", "alway", "return", "first", "valu", "enter", "by", "user", "here", "exampl", "public", "class", "searchpanel", "search", "panel", "extend", "panel", "public", "searchpanel", "search", "panel", "string", "id", "super", "id", "add", "new", "searchform", "search", "form", "searchform", "search", "form", "privat", "class", "searchform", "search", "form", "extend", "form", "string", "privat", "static", "final", "long", "serialversionuid", "serial", "version", "uid", "1l", "privat", "textfield", "text", "field", "string", "searchfield", "search", "field", "public", "searchform", "search", "form", "string", "id", "super", "id", "searchfield", "search", "field", "new", "textfield", "text", "field", "string", "searchstr", "search", "string", "new", "model", "string", "add", "searchfield", "search", "field", "overrid", "public", "void", "onsubmit", "submit", "pageparamet", "page", "paramet", "param", "new", "pageparamet", "page", "paramet", "param", "add", "searchstr", "search", "string", "searchfield", "getvalu", "search", "field", "get", "valu", "setresponsepag", "set", "respons", "page", "listcontactspag", "class", "list", "contact", "page", "param", "test", "same", "applic", "wicket", "17", "it", "wa", "fine", "onli", "had", "thi", "problem", "wicket"], "B_title": "take page parameters from page for links on mounted pages", "B_clean_title": ["take", "page", "paramet", "page", "link", "mount", "page"]},
{"A_title": "arraycopy with bad length in AbstractRequestLogger:172When clicking on DebugBar org.apache.wicket.devutils.inspector.LiveSessionsPage NullPointerException is thrown. After investigating the reason I think AbstractRequestLogger:172 arraycopy params cause it.  arraycopy(requestWindow 0 copy requestWindow.length - oldestPos indexInWindow); Should be changed to: arraycopy(requestWindow 0 copy requestWindow.length - oldestPos oldestPos);", "A_clean_title": ["arraycopi", "bad", "length", "abstractrequestlogger:172when", "abstract", "request", "logger:172when", "click", "debugbar", "debug", "bar", "org", "apach", "wicket", "devutil", "inspector", "livesessionspag", "live", "session", "page", "nullpointerexcept", "null", "pointer", "except", "thrown", "after", "investig", "reason", "think", "abstractrequestlogger:172", "abstract", "request", "logger:172", "arraycopi", "param", "caus", "it", "arraycopi", "requestwindow", "request", "window", "copi", "requestwindow", "length", "request", "window", "oldestpo", "oldest", "po", "indexinwindow", "index", "window", "chang", "arraycopi", "requestwindow", "request", "window", "copi", "requestwindow", "length", "request", "window", "oldestpo", "oldest", "po", "oldestpo", "oldest", "po"], "B_title": "fixed copying of requests", "B_clean_title": ["fix", "copi", "request"]},
{"A_title": "Set an request parameter on Wicket tester do not add it in the request URLWhen submitting an form the parameters set in request do not get appended to the URL query string. Initial impression is that UrlRender should append query parameters in the base URL on relatives URL.", "A_clean_title": ["set", "request", "paramet", "wicket", "tester", "not", "add", "it", "request", "urlwhen", "url", "when", "submit", "form", "paramet", "set", "request", "not", "get", "append", "url", "queri", "string", "initi", "impress", "that", "urlrend", "url", "render", "append", "queri", "paramet", "base", "url", "rel", "url"], "B_title": "Set an request parameter on Wicket tester do not add it in the request URL", "B_clean_title": ["set", "request", "paramet", "wicket", "tester", "not", "add", "it", "request", "url"]},
{"A_title": "Use @public tag to prevent compression of symbol namesNone", "A_clean_title": ["use", "public", "tag", "prevent", "compress", "symbol", "namesnon", "name", "none"], "B_title": "If a property is defined on a global name but in a local scope declare that property in the global scope. this goes most of the way towards fixing issue 66.", "B_clean_title": ["properti", "defin", "global", "name", "but", "local", "scope", "declar", "that", "properti", "global", "scope", "thi", "goe", "most", "way", "toward", "fix", "issu", "66"]},
{"A_title": "Online CC bug: report java error.None", "A_clean_title": ["onlin", "cc", "bug", "report", "java", "error", "none"], "B_title": "Allow expressions on LHS of for-in loops. Fixes issue 528.", "B_clean_title": ["allow", "express", "lh", "loop", "fix", "issu", "528"]},
{"A_title": "ResourceUtils.getLocaleFromFilename cannot handle filenames with classifiersWhen I try to get PathLocale with ResourceUtils than get wrong values when the files contains . in name.  Example: jquery.test.js  PathLocale.path=jquery PathLocale.locale = null  or jquery.test_hu.js. PathLocale.path=jquery PathLocale.locale = null  Thats why Id like to use  jquery.test_hu.js as resource the ResourceStreamLocator try to find  jquery.test_hu_hu_HU.js jquery.test_hu_hu.js and after  jquery.test_hu.js. Because the  ResourceStreamLocator.locate  PathLocale data = ResourceUtils.getLocaleFromFilename(path); if ((data != null) && (data.locale != null))  path = data.path; locale = data.locale;  doesnt work in this case.  Should change the  ResourceUtils  public static PathLocale getLocaleFromFilename(String path)  int pos = path.indexOf(.); ---------------- To                 int pos = path.lastIndexOf(.);", "A_clean_title": ["resourceutil", "getlocalefromfilenam", "resourc", "util", "get", "local", "filenam", "not", "handl", "filenam", "classifierswhen", "classifi", "when", "tri", "get", "pathlocal", "path", "local", "resourceutil", "resourc", "util", "than", "get", "wrong", "valu", "when", "file", "contain", "name", "exampl", "jqueri", "test", "js", "pathlocal", "path=jqueri", "path", "local", "pathlocal", "local", "path", "local", "null", "or", "jqueri", "js", "test", "hu", "pathlocal", "path=jqueri", "path", "local", "pathlocal", "local", "path", "local", "null", "that", "whi", "id", "like", "use", "jqueri", "js", "test", "hu", "as", "resourc", "resourcestreamloc", "resourc", "stream", "locat", "tri", "find", "jqueri", "js", "test", "hu", "hu", "hu", "jqueri", "js", "test", "hu", "hu", "after", "jqueri", "js", "test", "hu", "becaus", "resourcestreamloc", "locat", "resourc", "stream", "locat", "pathlocal", "path", "local", "data", "resourceutil", "getlocalefromfilenam", "resourc", "util", "get", "local", "filenam", "path", "data", "null", "data", "local", "null", "path", "data", "path", "local", "data", "local", "doesnt", "work", "thi", "case", "chang", "resourceutil", "resourc", "util", "public", "static", "pathlocal", "path", "local", "getlocalefromfilenam", "get", "local", "filenam", "string", "path", "int", "po", "path", "indexof", "index", "int", "po", "path", "lastindexof", "last", "index"], "B_title": "ResourceUtils.getLocaleFromFilename cannot handle filenames with classifiers", "B_clean_title": ["resourceutil", "getlocalefromfilenam", "resourc", "util", "get", "local", "filenam", "not", "handl", "filenam", "classifi"]},
{"A_title": "Method createNumber from NumberUtils doesnt work for floating point numbers other than FloatMethod createNumber from NumberUtils is trying to parse a string with a floating point number always first as a Float that will cause that if we send a string with a number that will need a Double or even a BigDecimal the number will be truncate to accommodate into the Float without an exception to be thrown so in fact we will no be returning ever neither a Double nor a BigDecimal.", "A_clean_title": ["method", "createnumb", "creat", "number", "numberutil", "number", "util", "doesnt", "work", "float", "point", "number", "other", "than", "floatmethod", "float", "method", "createnumb", "creat", "number", "numberutil", "number", "util", "tri", "pars", "string", "float", "point", "number", "alway", "first", "as", "float", "that", "will", "caus", "that", "we", "send", "string", "number", "that", "will", "need", "doubl", "or", "even", "bigdecim", "big", "decim", "number", "will", "truncat", "accommod", "into", "float", "without", "except", "thrown", "so", "fact", "we", "will", "no", "return", "ever", "neither", "doubl", "nor", "bigdecim", "big", "decim"], "B_title": "Method createNumber from NumberUtils doesnt work for floating point numbers other than Float", "B_clean_title": ["method", "createnumb", "creat", "number", "numberutil", "number", "util", "doesnt", "work", "float", "point", "number", "other", "than", "float"]},
{"A_title": "stop-all doesnt work: Error BAD_CREDENTIALS for user rootnoformat   bin/accumulo admin stopAll 2013-02-27 14:56:14072 util.Admin ERROR: org.apache.accumulo.core.client.AccumuloSecurityException: Error BAD_CREDENTIALS for user root - Username or Password is Invalid org.apache.accumulo.core.client.AccumuloSecurityException: Error BAD_CREDENTIALS for user root - Username or Password is Invalid at org.apache.accumulo.core.client.impl.MasterClient.execute(MasterClient.java:119) at org.apache.accumulo.server.util.Admin.stopServer(Admin.java:107) at org.apache.accumulo.server.util.Admin.main(Admin.java:95) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) at java.lang.reflect.Method.invoke(Method.java:597) at org.apache.accumulo.start.Main 1.run(Main.java:97) at java.lang.Thread.run(Thread.java:662) Caused by: ThriftSecurityException(user:root code:BAD_CREDENTIALS) at org.apache.accumulo.core.master.thrift.MasterClientService shutdown_result shutdown_resultStandardScheme.read(MasterClientService.java:8424) at org.apache.accumulo.core.master.thrift.MasterClientService shutdown_result shutdown_resultStandardScheme.read(MasterClientService.java:8410) at org.apache.accumulo.core.master.thrift.MasterClientService shutdown_result.read(MasterClientService.java:8360) at org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:78) at org.apache.accumulo.core.master.thrift.MasterClientService Client.recv_shutdown(MasterClientService.java:312) at org.apache.accumulo.core.master.thrift.MasterClientService Client.shutdown(MasterClientService.java:297) at org.apache.accumulo.server.util.Admin 1.execute(Admin.java:110) at org.apache.accumulo.server.util.Admin 1.execute(Admin.java:107) at org.apache.accumulo.core.client.impl.MasterClient.execute(MasterClient.java:113) ... 8 more  noformat", "A_clean_title": ["stop", "all", "doesnt", "work", "error", "bad", "credenti", "user", "rootnoformat", "bin", "accumulo", "admin", "stopal", "stop", "all", "2013", "02", "27", "14:56:14072", "util", "admin", "error", "org", "apach", "accumulo", "core", "client", "accumulosecurityexcept", "accumulo", "secur", "except", "error", "bad", "credenti", "user", "root", "usernam", "or", "password", "invalid", "org", "apach", "accumulo", "core", "client", "accumulosecurityexcept", "accumulo", "secur", "except", "error", "bad", "credenti", "user", "root", "usernam", "or", "password", "invalid", "at", "org", "apach", "accumulo", "core", "client", "impl", "mastercli", "execut", "master", "client", "mastercli", "java:119", "master", "client", "at", "org", "apach", "accumulo", "server", "util", "admin", "stopserv", "stop", "server", "admin", "java:107", "at", "org", "apach", "accumulo", "server", "util", "admin", "main", "admin", "java:95", "at", "sun", "reflect", "nativemethodaccessorimpl", "invoke0", "nativ", "method", "accessor", "impl", "nativ", "method", "at", "sun", "reflect", "nativemethodaccessorimpl", "invok", "nativ", "method", "accessor", "impl", "nativemethodaccessorimpl", "java:39", "nativ", "method", "accessor", "impl", "at", "sun", "reflect", "delegatingmethodaccessorimpl", "invok", "deleg", "method", "accessor", "impl", "delegatingmethodaccessorimpl", "java:25", "deleg", "method", "accessor", "impl", "at", "java", "lang", "reflect", "method", "invok", "method", "java:597", "at", "org", "apach", "accumulo", "start", "main", "run", "main", "java:97", "at", "java", "lang", "thread", "run", "thread", "java:662", "caus", "by", "thriftsecurityexcept", "thrift", "secur", "except", "user", "root", "code", "bad", "credenti", "at", "org", "apach", "accumulo", "core", "master", "thrift", "masterclientservic", "master", "client", "servic", "shutdown", "result", "read", "shutdown", "resultstandardschem", "result", "standard", "scheme", "masterclientservic", "java:8424", "master", "client", "servic", "at", "org", "apach", "accumulo", "core", "master", "thrift", "masterclientservic", "master", "client", "servic", "shutdown", "result", "read", "shutdown", "resultstandardschem", "result", "standard", "scheme", "masterclientservic", "java:8410", "master", "client", "servic", "at", "org", "apach", "accumulo", "core", "master", "thrift", "masterclientservic", "master", "client", "servic", "read", "shutdown", "result", "masterclientservic", "java:8360", "master", "client", "servic", "at", "org", "apach", "thrift", "tservicecli", "receivebas", "servic", "client", "receiv", "base", "tservicecli", "java:78", "servic", "client", "at", "org", "apach", "accumulo", "core", "master", "thrift", "masterclientservic", "master", "client", "servic", "client", "recv", "shutdown", "masterclientservic", "java:312", "master", "client", "servic", "at", "org", "apach", "accumulo", "core", "master", "thrift", "masterclientservic", "master", "client", "servic", "client", "shutdown", "masterclientservic", "java:297", "master", "client", "servic", "at", "org", "apach", "accumulo", "server", "util", "admin", "execut", "admin", "java:110", "at", "org", "apach", "accumulo", "server", "util", "admin", "execut", "admin", "java:107", "at", "org", "apach", "accumulo", "core", "client", "impl", "mastercli", "execut", "master", "client", "mastercli", "java:113", "master", "client", "more", "noformat"], "B_title": "- credentials now getting properly read", "B_clean_title": ["credenti", "now", "get", "properli", "read"]},
{"A_title": "Mann-Whitney U Test Suffers From Integer Overflow With Large Data SetsWhen performing a Mann-Whitney U Test on large data sets (the attached test uses two 1500 element sets) intermediate integer values used in calculateAsymptoticPValue can overflow leading to invalid results such as p-values of NaN or incorrect calculations. Attached is a patch including a test and a fix which modifies the affected code to use doubles", "A_clean_title": ["mann", "whitney", "test", "suffer", "integ", "overflow", "larg", "data", "setswhen", "set", "when", "perform", "mann", "whitney", "test", "larg", "data", "set", "attach", "test", "use", "two", "1500", "element", "set", "intermedi", "integ", "valu", "use", "calculateasymptoticpvalu", "calcul", "asymptot", "valu", "overflow", "lead", "invalid", "result", "such", "as", "valu", "nan", "na", "or", "incorrect", "calcul", "attach", "patch", "includ", "test", "fix", "which", "modifi", "affect", "code", "use", "doubl"], "B_title": "Patch applied to fix the overflow issue.", "B_clean_title": ["patch", "appli", "fix", "overflow", "issu"]},
{"A_title": "--language_in=ECMASCRIPT5_STRICT results in 1 use strict per input fileNone", "A_clean_title": ["languag", "in=ecmascript5", "strict", "result", "use", "strict", "per", "input", "filenon", "file", "none"], "B_title": "When -language_in=ECMASCRIPT5_STRICT only print use strict in the first input file. Fixes Issue 489.", "B_clean_title": ["when", "languag", "in=ecmascript5", "strict", "onli", "print", "use", "strict", "first", "input", "file", "fix", "issu", "489"]},
{"A_title": "text.ExtendedMessageFormat doesnt override java.text.MessageFormat.equals(Object)Findbugs: Bug: org.apache.commons.lang3.text.ExtendedMessageFormat doesnt override java.text.MessageFormat.equals(Object) Pattern id: EQ_DOESNT_OVERRIDE_EQUALS type: Eq category: STYLE This class extends a class that defines an equals method and adds fields but doesnt define an equals method itself. Thus equality on instances of this class will ignore the identity of the subclass and the added fields. Be sure this is what is intended and that you dont need to override the equals method. Even if you dont need to override the equals method consider overriding it anyway to document the fact that the equals method for the subclass just return the result of invoking super.equals(o).", "A_clean_title": ["text", "extendedmessageformat", "extend", "messag", "format", "doesnt", "overrid", "java", "text", "messageformat", "equal", "messag", "format", "object", "findbug", "bug", "org", "apach", "common", "lang3", "text", "extendedmessageformat", "extend", "messag", "format", "doesnt", "overrid", "java", "text", "messageformat", "equal", "messag", "format", "object", "pattern", "id", "eq", "doesnt", "overrid", "equal", "type", "eq", "categori", "style", "thi", "class", "extend", "class", "that", "defin", "equal", "method", "add", "field", "but", "doesnt", "defin", "equal", "method", "itself", "thu", "equal", "instanc", "thi", "class", "will", "ignor", "ident", "subclass", "ad", "field", "sure", "thi", "what", "intend", "that", "you", "dont", "need", "overrid", "equal", "method", "even", "you", "dont", "need", "overrid", "equal", "method", "consid", "overrid", "it", "anyway", "document", "fact", "that", "equal", "method", "subclass", "just", "return", "result", "invok", "super", "equal"], "B_title": "ExtendedMessageFormat doesnt override equals(Object)", "B_clean_title": ["extendedmessageformat", "extend", "messag", "format", "doesnt", "overrid", "equal", "object"]},
{"A_title": "Missing privileges after repository upgradeAfter upgrading from Jackrabbit classic all Oak specific privileges are missing (rep:userManagement rep:readNodes rep:readProperties rep:addProperties rep:alterProperties rep:removeProperties rep:indexDefinitionManagement).  The reason seems to be that the PrivilegeInitializer is not run during upgrade.", "A_clean_title": ["miss", "privileg", "after", "repositori", "upgradeaft", "upgrad", "after", "upgrad", "jackrabbit", "classic", "all", "oak", "specif", "privileg", "are", "miss", "rep", "usermanag", "user", "manag", "rep", "readnod", "read", "node", "rep", "readproperti", "read", "properti", "rep", "addproperti", "add", "properti", "rep", "alterproperti", "alter", "properti", "rep", "removeproperti", "remov", "properti", "rep", "indexdefinitionmanag", "index", "definit", "manag", "reason", "seem", "that", "privilegeiniti", "privileg", "initi", "not", "run", "dure", "upgrad"], "B_title": "Missing privileges after repository upgrade Run repository initialisers of the security configurations on upgrade", "B_clean_title": ["miss", "privileg", "after", "repositori", "upgrad", "run", "repositori", "initialis", "secur", "configur", "upgrad"]},
{"A_title": "MockTable doesnt obey useVersions parameterThe constructor for MockTable will call IteratorUtil.generateInitialTableProperties() and thus set a versioning iterator on itself regardless of whether the useVersion parameter is set to true or false.   I believe MockTables constructor should call IteratorUtil.generateInitialTableProperties() only if useVersions is true otherwise it should populate settings with a new TreeMap", "A_clean_title": ["mocktabl", "mock", "tabl", "doesnt", "obey", "usevers", "use", "version", "parameterth", "paramet", "constructor", "mocktabl", "mock", "tabl", "will", "call", "iteratorutil", "generateinitialtableproperti", "iter", "util", "gener", "initi", "tabl", "properti", "thu", "set", "version", "iter", "itself", "regardless", "whether", "usevers", "use", "version", "paramet", "set", "true", "or", "fals", "believ", "mocktabl", "mock", "tabl", "constructor", "call", "iteratorutil", "generateinitialtableproperti", "iter", "util", "gener", "initi", "tabl", "properti", "onli", "usevers", "use", "version", "true", "otherwis", "it", "popul", "set", "new", "treemap", "tree", "map"], "B_title": "Applied patch from Drew Farris that allows mock to create tables w/o versioning (merged from 1.4)", "B_clean_title": ["appli", "patch", "drew", "farri", "that", "allow", "mock", "creat", "tabl", "version", "merg"]},
{"A_title": "DateTimeZone.forOffsetHoursMinutes cannot handle negative offset < 1 hourDateTimeZone.forOffsetHoursMinutes(hm) cannot handle negative offset < 1 hour like -0:30 due to argument range checking. I used forOffsetMillis() instead.  This should probably be mentioned in the documentation or negative minutes be accepted.", "A_clean_title": ["datetimezon", "foroffsethoursminut", "date", "time", "zone", "offset", "hour", "minut", "not", "handl", "neg", "offset", "hourdatetimezon", "foroffsethoursminut", "hour", "date", "time", "zone", "offset", "hour", "minut", "hm", "not", "handl", "neg", "offset", "hour", "like", "0:30", "due", "argument", "rang", "check", "use", "foroffsetmilli", "offset", "milli", "instead", "thi", "probabl", "mention", "document", "or", "neg", "minut", "accept"], "B_title": "Fix to allow offsets from -00:01 to -00:59", "B_clean_title": ["fix", "allow", "offset", "00:01", "00:59"]},
{"A_title": "Microkernel.diff returns empty diff when there are differencescode String rev1 = mk.commit(/ +node1:node2:prop1:val1prop2:val2 null null); String rev2 = mk.commit(/ ^node1/node2/prop1:val1 new ^node1/node2/prop2:null null null); String diff = mk.diff(rev1 rev2 /node1/node2 0); code  Here diff is empty although there are clearly differences between rev1 and rev2 at depth 0.", "A_clean_title": ["microkernel", "diff", "return", "empti", "diff", "when", "there", "are", "differencescod", "string", "rev1", "mk", "commit", "+node1", "node2", "prop1", "val1prop2", "val2", "null", "null", "string", "rev2", "mk", "commit", "^node1", "node2", "prop1", "val1", "new", "^node1", "node2", "prop2", "null", "null", "null", "string", "diff", "mk", "diff", "rev1", "rev2", "node1", "node2", "code", "here", "diff", "empti", "although", "there", "are", "clearli", "differ", "between", "rev1", "rev2", "at", "depth"], "B_title": "- Microkernel.diff returns empty diff when there are differences", "B_clean_title": ["microkernel", "diff", "return", "empti", "diff", "when", "there", "are", "differ"]},
{"A_title": "AbstractRealVector.sparseIterator fails when vector has exactly one non-zero entryThe following program: === import java.util.Iterator; import org.apache.commons.math.linear.*;  public class SparseIteratorTester      public static void main(String args)          double vdata =  0.0 1.0 0.0 ;         RealVector v = new ArrayRealVector(vdata);         Iterator<RealVector.Entry> iter = v.sparseIterator();         while(iter.hasNext())              RealVector.Entry entry = iter.next();             System.out.printf(%d: %fn entry.getIndex() entry.getValue());                           === generates this output:  1: 1.000000 Exception in thread main java.lang.ArrayIndexOutOfBoundsException: -1 at org.apache.commons.math.linear.ArrayRealVector.getEntry(ArrayRealVector.java:995) at org.apache.commons.math.linear.AbstractRealVector EntryImpl.getValue(AbstractRealVector.java:850) at test.SparseIteratorTester.main(SparseIteratorTester.java:13) ===  This patch fixes it and simplifies AbstractRealVector.SparseEntryIterator  (sorry i dont see any form entry for attaching a file) === Index: src/main/java/org/apache/commons/math/linear/AbstractRealVector.java =================================================================== --- src/main/java/org/apache/commons/math/linear/AbstractRealVector.java(revision 936985) +++ src/main/java/org/apache/commons/math/linear/AbstractRealVector.java(working copy) @@ -186 +187 @@  package org.apache.commons.math.linear;    import java.util.Iterator; +import java.util.NoSuchElementException;    import org.apache.commons.math.FunctionEvaluationException;  import org.apache.commons.math.MathRuntimeException; @@ -87540 +87625 @@          /** Dimension of the vector. */          private final int dim;   -        /** Temporary entry (reused on each call to @link #next(). */ -        private EntryImpl tmp = new EntryImpl(); - -        /** Current entry. */ +        /** Last entry returned by #next(). */          private EntryImpl current;   -        /** Next entry. */ +        /** Next entry for #next() to return. */          private EntryImpl next;            /** Simple constructor. */          protected SparseEntryIterator()               dim = getDimension();              current = new EntryImpl(); -            if (current.getValue() == 0)  -                advance(current); -             -            if(current.getIndex() >= 0) -                // There is at least one non-zero entry -                next = new EntryImpl(); -                next.setIndex(current.getIndex()); +            next = new EntryImpl(); +            if(next.getValue() == 0)                  advance(next); -             else  -                // The vector consists of only zero entries so deny having a next -                current = null; -                         -        /** Advance an entry up to the next non null one. +        /** Advance an entry up to the next nonzero value.           * @param e entry to advance           */          protected void advance(EntryImpl e)  -            if (e == null)  -                return; -                          do                   e.setIndex(e.getIndex() + 1);               while (e.getIndex() < dim && e.getValue() == 0); @@ -91922 +90517 @@            /** @inheritDoc */          public boolean hasNext()  -            return current != null; +            return next.getIndex() >= 0;                      /** @inheritDoc */          public Entry next()  -            tmp.setIndex(current.getIndex()); -            if (next != null)  -                current.setIndex(next.getIndex()); -                advance(next); -                if (next.getIndex() < 0)  -                    next = null; -                 -             else  -                current = null; -             -            return tmp; +            int index = next.getIndex(); +            if(index < 0) +                throw new NoSuchElementException(); +            current.setIndex(index); +            advance(next); +            return current;                      /** @inheritDoc */", "A_clean_title": ["abstractrealvector", "sparseiter", "abstract", "real", "vector", "spars", "iter", "fail", "when", "vector", "ha", "exactli", "one", "non", "zero", "entryth", "entri", "follow", "program", "import", "java", "util", "iter", "import", "org", "apach", "common", "math", "linear", "public", "class", "sparseiteratortest", "spars", "iter", "tester", "public", "static", "void", "main", "string", "arg", "doubl", "vdata", "realvector", "real", "vector", "new", "arrayrealvector", "array", "real", "vector", "vdata", "iter", "realvector", "entri", "real", "vector", "iter", "sparseiter", "spars", "iter", "while", "iter", "hasnext", "ha", "next", "realvector", "entri", "real", "vector", "entri", "iter", "next", "system", "out", "printf", "fn", "entri", "getindex", "get", "index", "entri", "getvalu", "get", "valu", "gener", "thi", "output", "000000", "except", "thread", "main", "java", "lang", "arrayindexoutofboundsexcept", "array", "index", "out", "bound", "except", "at", "org", "apach", "common", "math", "linear", "arrayrealvector", "getentri", "array", "real", "vector", "get", "entri", "arrayrealvector", "java:995", "array", "real", "vector", "at", "org", "apach", "common", "math", "linear", "abstractrealvector", "abstract", "real", "vector", "entryimpl", "getvalu", "entri", "impl", "get", "valu", "abstractrealvector", "java:850", "abstract", "real", "vector", "at", "test", "sparseiteratortest", "main", "spars", "iter", "tester", "sparseiteratortest", "java:13", "spars", "iter", "tester", "thi", "patch", "fix", "it", "simplifi", "abstractrealvector", "sparseentryiter", "abstract", "real", "vector", "spars", "entri", "iter", "sorri", "dont", "see", "ani", "form", "entri", "attach", "file", "index", "java", "src", "main", "java", "org", "apach", "common", "math", "linear", "abstractrealvector", "abstract", "real", "vector", "java", "src", "main", "java", "org", "apach", "common", "math", "linear", "abstractrealvector", "abstract", "real", "vector", "revis", "936985", "java", "src", "main", "java", "org", "apach", "common", "math", "linear", "abstractrealvector", "abstract", "real", "vector", "work", "copi", "186", "+187", "packag", "org", "apach", "common", "math", "linear", "import", "java", "util", "iter", "+import", "java", "util", "nosuchelementexcept", "no", "such", "element", "except", "import", "org", "apach", "common", "math", "functionevaluationexcept", "function", "evalu", "except", "import", "org", "apach", "common", "math", "mathruntimeexcept", "math", "runtim", "except", "87540", "+87625", "dimens", "vector", "privat", "final", "int", "dim", "temporari", "entri", "reus", "each", "call", "link", "next", "privat", "entryimpl", "entri", "impl", "tmp", "new", "entryimpl", "entri", "impl", "current", "entri", "last", "entri", "return", "by", "next", "privat", "entryimpl", "entri", "impl", "current", "next", "entri", "next", "entri", "next", "return", "privat", "entryimpl", "entri", "impl", "next", "simpl", "constructor", "protect", "sparseentryiter", "spars", "entri", "iter", "dim", "getdimens", "get", "dimens", "current", "new", "entryimpl", "entri", "impl", "current", "getvalu", "get", "valu", "advanc", "current", "current", "getindex", "get", "index", "there", "at", "least", "one", "non", "zero", "entri", "next", "new", "entryimpl", "entri", "impl", "next", "setindex", "set", "index", "current", "getindex", "get", "index", "next", "new", "entryimpl", "entri", "impl", "next", "getvalu", "get", "valu", "advanc", "next", "vector", "consist", "onli", "zero", "entri", "so", "deni", "have", "next", "current", "null", "advanc", "entri", "up", "next", "non", "null", "one", "advanc", "entri", "up", "next", "nonzero", "valu", "param", "entri", "advanc", "protect", "void", "advanc", "entryimpl", "entri", "impl", "null", "return", "setindex", "set", "index", "getindex", "get", "index", "while", "getindex", "get", "index", "dim", "getvalu", "get", "valu", "91922", "+90517", "inheritdoc", "inherit", "doc", "public", "boolean", "hasnext", "ha", "next", "return", "current", "null", "return", "next", "getindex", "get", "index", "inheritdoc", "inherit", "doc", "public", "entri", "next", "tmp", "setindex", "set", "index", "current", "getindex", "get", "index", "next", "null", "current", "setindex", "set", "index", "next", "getindex", "get", "index", "advanc", "next", "next", "getindex", "get", "index", "next", "null", "current", "null", "return", "tmp", "int", "index", "next", "getindex", "get", "index", "index", "throw", "new", "nosuchelementexcept", "no", "such", "element", "except", "current", "setindex", "set", "index", "index", "advanc", "next", "return", "current", "inheritdoc", "inherit", "doc"], "B_title": "Fix a problem with the default sparseIterator when an array has exactly one non-zero element Submitted by: Albert Huang (with some style tweeks) Issue: MATH-367", "B_clean_title": ["fix", "problem", "default", "sparseiter", "spars", "iter", "when", "array", "ha", "exactli", "one", "non", "zero", "element", "submit", "by", "albert", "huang", "some", "style", "tweek", "issu", "math", "367"]},
{"A_title": "WebApplication#unmount() unmounts the whole compound mapper if some of its inner ones matchesFrom dev@ mailing lists: http://markmail.org/message/wmdgbrhvrvaeygvr  WebApplication.unmount() calls getRootRequestMapperAsCompound() and  calls unmount() on that.  getRootRequestMapperAsCompound() checks if the root request mapper is a  compound if not wraps it in a compound sets the compound as root and  returns the compound.  CompoundRequestMapper.unmount() identifies which of the mappers added  directly to the compound handle the url and removes them.  The problem: If the original root mapper was a single wrapper or layer of wrappers  with the actual mounted mapper wrapped some levels down then the whole  wrapper is removed not just the specific MountedMapper that is wrapped.  This has the effect of removing every single mapper leaving root mapper  as an empty compound.  I would like to attempt to provide a patch to fix this but would like  guidance on the approach. I have come up with three approaches:  1. Introduce interface IWrappedRequestMapper. This will be an interface  which has one method: IRequestMapper getWrappedRequestMapper(). We can  then have all wrapper mappers implement this and work down the tree to  find the correct MountedMapper (wicket 6) to remove.  2. Have WebApplication hold a reference to a specific  CompoundRequestMapper and have all mount()/unmount() operations add and  remove from this mapper. This compound would need to be added to the  default list during init. This makes it complicated to work out how to  do things like have CryptoMapper not apply to mounted pages.  3. Add method unmount() to IRequestMapper so that wrappers can  delegate. This obviously can only be done in wicket 7 but were making  mounting a problem of every single request mapper when not even  Application cares about mounting.", "A_clean_title": ["webappl", "web", "applic", "unmount", "unmount", "whole", "compound", "mapper", "some", "it", "inner", "one", "matchesfrom", "match", "dev", "mail", "list", "http", "markmail", "org", "messag", "wmdgbrhvrvaeygvr", "webappl", "unmount", "web", "applic", "call", "getrootrequestmapperascompound", "get", "root", "request", "mapper", "as", "compound", "call", "unmount", "that", "getrootrequestmapperascompound", "get", "root", "request", "mapper", "as", "compound", "check", "root", "request", "mapper", "compound", "not", "wrap", "it", "compound", "set", "compound", "as", "root", "return", "compound", "compoundrequestmapp", "unmount", "compound", "request", "mapper", "identifi", "which", "mapper", "ad", "directli", "compound", "handl", "url", "remov", "them", "problem", "origin", "root", "mapper", "wa", "singl", "wrapper", "or", "layer", "wrapper", "actual", "mount", "mapper", "wrap", "some", "level", "down", "then", "whole", "wrapper", "remov", "not", "just", "specif", "mountedmapp", "mount", "mapper", "that", "wrap", "thi", "ha", "effect", "remov", "everi", "singl", "mapper", "leav", "root", "mapper", "as", "empti", "compound", "would", "like", "attempt", "provid", "patch", "fix", "thi", "but", "would", "like", "guidanc", "approach", "have", "come", "up", "three", "approach", "introduc", "interfac", "iwrappedrequestmapp", "wrap", "request", "mapper", "thi", "will", "interfac", "which", "ha", "one", "method", "irequestmapp", "request", "mapper", "getwrappedrequestmapp", "get", "wrap", "request", "mapper", "we", "then", "have", "all", "wrapper", "mapper", "implement", "thi", "work", "down", "tree", "find", "correct", "mountedmapp", "mount", "mapper", "wicket", "remov", "have", "webappl", "web", "applic", "hold", "refer", "specif", "compoundrequestmapp", "compound", "request", "mapper", "have", "all", "mount", "unmount", "oper", "add", "remov", "thi", "mapper", "thi", "compound", "would", "need", "ad", "default", "list", "dure", "init", "thi", "make", "it", "complic", "work", "out", "how", "thing", "like", "have", "cryptomapp", "crypto", "mapper", "not", "appli", "mount", "page", "add", "method", "unmount", "irequestmapp", "request", "mapper", "so", "that", "wrapper", "deleg", "thi", "obvious", "onli", "done", "wicket", "but", "were", "make", "mount", "problem", "everi", "singl", "request", "mapper", "when", "not", "even", "applic", "care", "about", "mount"], "B_title": "WebApplication#unmount() unmounts the whole compound mapper if some of its inner ones matches", "B_clean_title": ["webappl", "web", "applic", "unmount", "unmount", "whole", "compound", "mapper", "some", "it", "inner", "one", "match"]},
{"A_title": "NaN in equals methodsIn MathUtils some equals methods will return true if both argument are NaN. Unless Im mistaken this contradicts the IEEE standard.  If nobody objects Im going to make the changes.", "A_clean_title": ["nan", "na", "equal", "methodsin", "method", "mathutil", "math", "util", "some", "equal", "method", "will", "return", "true", "both", "argument", "are", "nan", "na", "unless", "im", "mistaken", "thi", "contradict", "ieee", "standard", "nobodi", "object", "im", "go", "make", "chang"], "B_title": "Removed deprecated methods.", "B_clean_title": ["remov", "deprec", "method"]},
{"A_title": "Two spaces in SQL2 fulltext search -> errorExecute the following SQL2 query (eg in crx/des query tool) SELECT * FROM nt:unstructured AS c WHERE (CONTAINS(c.jcr:title a  b) AND ISDESCENDANTNODE(c /content)) (note there are 2 spaces between a and b) Result: java.lang.IllegalArgumentException: Invalid expression: a b  If there is only 1 space between a and b there is no error.   Per jsr-283 fulltext expressions should be able to have strings of whitespace.", "A_clean_title": ["two", "space", "sql2", "fulltext", "search", "errorexecut", "error", "execut", "follow", "sql2", "queri", "eg", "crx", "de", "queri", "tool", "select", "nt", "unstructur", "as", "where", "contain", "jcr", "titl", "isdescendantnod", "content", "note", "there", "are", "space", "between", "result", "java", "lang", "illegalargumentexcept", "illeg", "argument", "except", "invalid", "express", "there", "onli", "space", "between", "there", "no", "error", "per", "jsr", "283", "fulltext", "express", "abl", "have", "string", "whitespac"], "B_title": "Two spaces in SQL2 fulltext search -> error", "B_clean_title": ["two", "space", "sql2", "fulltext", "search", "error"]},
{"A_title": "Header can not be set from IRequestCycleListener#onEndRequest()Due to HeaderBufferingWebResponse a header can no longer be set from IRequestCycleListener#onEndRequest().  In 1.4.x this was possible because BufferedWebResponse just passed through all headers to HttpServletResponse.", "A_clean_title": ["header", "not", "set", "irequestcyclelisten", "request", "cycl", "listen", "onendrequest", "end", "request", "due", "headerbufferingwebrespons", "header", "buffer", "web", "respons", "header", "no", "longer", "set", "irequestcyclelisten", "request", "cycl", "listen", "onendrequest", "end", "request", "thi", "wa", "possibl", "becaus", "bufferedwebrespons", "buffer", "web", "respons", "just", "pass", "through", "all", "header", "httpservletrespons", "http", "servlet", "respons"], "B_title": "allow headers to be set even if meta data is no longer buffered", "B_clean_title": ["allow", "header", "set", "even", "meta", "data", "no", "longer", "buffer"]},
{"A_title": "ConcurrentConflictTest fails occasionallyOccurs every now and then on buildbot. E.g.: http://ci.apache.org/builders/oak-trunk-win7/builds/16", "A_clean_title": ["concurrentconflicttest", "concurr", "conflict", "test", "fail", "occasionallyoccur", "occasion", "occur", "everi", "now", "then", "buildbot", "http", "trunk", "apach", "win7", "build", "16", "ci", "org", "builder", "oak"], "B_title": "ConcurrentConflictTest fails occasionally", "B_clean_title": ["concurrentconflicttest", "concurr", "conflict", "test", "fail", "occasion"]},
{"A_title": "Queuing a component within an enclosureQueueing doesnt work if component is in a enclosure tag.   <wicket:enclosure child=inlink> <a href=panier.html> <span wicket:id=inlink></span> </a> </wicket:enclosure>", "A_clean_title": ["queu", "compon", "within", "enclosurequeu", "enclosur", "queue", "doesnt", "work", "compon", "enclosur", "tag", "wicket", "enclosur", "child=inlink", "href=pani", "html", "span", "wicket", "id=inlink", "span", "wicket", "enclosur"], "B_title": "Queuing a component within an enclosure", "B_clean_title": ["queu", "compon", "within", "enclosur"]},
{"A_title": "The tbody section of a DataTable is empty when no records are returned by the provider.When a DataTable is rendered without records the tbody section is empty. This violates the html spec.  From the spec: When present each THEAD TFOOT and TBODY contains a row group. Each row group must contain at least one row defined by the TR element. and The THEAD TFOOT and TBODY sections must contain the same number of columns.", "A_clean_title": ["tbodi", "section", "datat", "data", "tabl", "empti", "when", "no", "record", "are", "return", "by", "provid", "when", "datat", "data", "tabl", "render", "without", "record", "tbodi", "section", "empti", "thi", "violat", "html", "spec", "spec", "when", "present", "each", "thead", "tfoot", "tbodi", "contain", "row", "group", "each", "row", "group", "must", "contain", "at", "least", "one", "row", "defin", "by", "tr", "element", "thead", "tfoot", "tbodi", "section", "must", "contain", "same", "number", "column"], "B_title": "visibility is now checked in onInitialized", "B_clean_title": ["visibl", "now", "check", "oniniti", "initi"]},
{"A_title": "Wrong parameter for first step size guess for Embedded Runge Kutta methodsIn a space application using DOP853 i detected what seems to be a bad parameter in the call to the method  initializeStep of class AdaptiveStepsizeIntegrator.  Here DormandPrince853Integrator is a subclass for EmbeddedRungeKuttaIntegrator which perform the call to initializeStep at the beginning of its method integrate(...)  The problem comes from the array scale that is used as a parameter in the call off initializeStep(..)  Following the theory described by Hairer in his book Solving Ordinary Differential Equations 1 : Nonstiff Problems the scaling should be :  sci = Atol i + |y0i| * Rtoli  Whereas EmbeddedRungeKuttaIntegrator uses :  sci = Atoli  Note that the Gragg-Bulirsch-Stoer integrator uses the good implementation sci = Atol i + |y0i| * Rtoli   when he performs the call to the same method initializeStep(..)  In the method initializeStep the error leads to a wrong step size h used to perform an  Euler step. Most of the time it is unvisible for the user. But in my space application the Euler step with this wrong step size h (much bigger than it should be)  makes an exception occur (my satellite hits the ground...)   To fix the bug one should use the same algorithm as in the rescale method in GraggBulirschStoerIntegrator For exemple :   final double scale= new doubley0.length;;                      if (vecAbsoluteTolerance == null)                for (int i = 0; i < scale.length; ++i)                  final double yi = Math.max(Math.abs(y0i) Math.abs(y0i));                 scalei = scalAbsoluteTolerance + scalRelativeTolerance * yi;                             else                for (int i = 0; i < scale.length; ++i)                  final double yi = Math.max(Math.abs(y0i) Math.abs(y0i));                 scalei = vecAbsoluteTolerancei + vecRelativeTolerancei * yi;                                                  hNew = initializeStep(equations forward getOrder() scale                            stepStart y yDotK0 yTmp yDotK1);    Sorry for the length of this message looking forward to hearing from you soon  Vincent Morand", "A_clean_title": ["wrong", "paramet", "first", "step", "size", "guess", "embed", "rung", "kutta", "methodsin", "method", "space", "applic", "dop853", "detect", "what", "seem", "bad", "paramet", "call", "method", "initializestep", "initi", "step", "class", "adaptivestepsizeintegr", "adapt", "stepsiz", "integr", "here", "dormandprince853integr", "dormand", "prince853integr", "subclass", "embeddedrungekuttaintegr", "embed", "rung", "kutta", "integr", "which", "perform", "call", "initializestep", "initi", "step", "at", "begin", "it", "method", "integr", "problem", "come", "array", "scale", "that", "use", "as", "paramet", "call", "off", "initializestep", "initi", "step", "follow", "theori", "describ", "by", "hairer", "hi", "book", "solv", "ordinari", "differenti", "equat", "nonstiff", "problem", "scale", "sci", "atol", "|y0i|", "rtoli", "wherea", "embeddedrungekuttaintegr", "embed", "rung", "kutta", "integr", "use", "sci", "atoli", "note", "that", "gragg", "bulirsch", "stoer", "integr", "use", "good", "implement", "sci", "atol", "|y0i|", "rtoli", "when", "he", "perform", "call", "same", "method", "initializestep", "initi", "step", "method", "initializestep", "initi", "step", "error", "lead", "wrong", "step", "size", "use", "perform", "euler", "step", "most", "time", "it", "unvis", "user", "but", "my", "space", "applic", "euler", "step", "thi", "wrong", "step", "size", "much", "bigger", "than", "it", "make", "except", "occur", "my", "satellit", "hit", "ground", "fix", "bug", "one", "use", "same", "algorithm", "as", "rescal", "method", "graggbulirschstoerintegr", "gragg", "bulirsch", "stoer", "integr", "exempl", "final", "doubl", "scale=", "new", "doubley0", "length", "vecabsolutetoler", "vec", "absolut", "toler", "null", "int", "scale", "length", "++i", "final", "doubl", "yi", "math", "max", "math", "ab", "y0i", "math", "ab", "y0i", "scalei", "scalabsolutetoler", "scal", "absolut", "toler", "scalrelativetoler", "scal", "rel", "toler", "yi", "int", "scale", "length", "++i", "final", "doubl", "yi", "math", "max", "math", "ab", "y0i", "math", "ab", "y0i", "scalei", "vecabsolutetolerancei", "vec", "absolut", "tolerancei", "vecrelativetolerancei", "vec", "rel", "tolerancei", "yi", "hnew", "new", "initializestep", "initi", "step", "equat", "forward", "getord", "get", "order", "scale", "stepstart", "step", "start", "ydotk0", "dot", "k0", "ytmp", "tmp", "ydotk1", "dot", "k1", "sorri", "length", "thi", "messag", "look", "forward", "hear", "you", "soon", "vincent", "morand"], "B_title": "Fixed automatic step initialization in embedded Runge-Kutta integrators. The relative tolerance setting was never used only the absolute tolerance was used. JIRA: MATH-338", "B_clean_title": ["fix", "automat", "step", "initi", "embed", "rung", "kutta", "integr", "rel", "toler", "set", "wa", "never", "use", "onli", "absolut", "toler", "wa", "use", "jira", "math", "338"]},
{"A_title": "RuntimeException when compiling with extern prototypeNone", "A_clean_title": ["runtimeexcept", "runtim", "except", "when", "compil", "extern", "prototypenon", "prototyp", "none"], "B_title": "Normalize extern VAR declarations Fixes issue 367.", "B_clean_title": ["normal", "extern", "var", "declar", "fix", "issu", "367"]},
{"A_title": "DatePicker issues with locale medium date formatDateTextField as follows: DateTextField d = new DateTextField(id model new StyleDateConverter(M-false));  Case 1: - en-US locale - for example DatePicker insert 04 rather than Apr in DateTextField even though pattern clearly says MMM  Case 2: - pl-PL locale - 2010-10-25 is in the DateTextField - DatePicker opens on April 2031 rather than October 2010  I believe the problem lies in wicket-date.js in functions substituteDate and parseDate.  I know this might be duplicate of WICKET-2427 and WICKET-2375 but apparently this hasnt been properly fixed yet.", "A_clean_title": ["datepick", "date", "picker", "issu", "local", "medium", "date", "formatdatetextfield", "format", "date", "text", "field", "as", "follow", "datetextfield", "date", "text", "field", "new", "datetextfield", "date", "text", "field", "id", "model", "new", "styledateconvert", "style", "date", "convert", "fals", "case", "en", "us", "local", "exampl", "datepick", "date", "picker", "insert", "04", "rather", "than", "apr", "datetextfield", "date", "text", "field", "even", "though", "pattern", "clearli", "say", "mmm", "case", "pl", "pl", "local", "2010", "10", "25", "datetextfield", "date", "text", "field", "datepick", "date", "picker", "open", "april", "2031", "rather", "than", "octob", "2010", "believ", "problem", "lie", "wicket", "date", "js", "function", "substituted", "substitut", "date", "parsed", "pars", "date", "know", "thi", "might", "duplic", "wicket", "2427", "wicket", "2375", "but", "appar", "thi", "hasnt", "been", "properli", "fix", "yet"], "B_title": "DatePicker issues with locale medium date format", "B_clean_title": ["datepick", "date", "picker", "issu", "local", "medium", "date", "format"]},
{"A_title": "Sliding Window Keeps Emitting Elements After Source Stops ProducingThis happens when the source produces some elements then the source stops for a while and then produces again some elements before stopping again. After this the window will just keep emitting the last emitted element indefinitely.", "A_clean_title": ["slide", "window", "keep", "emit", "element", "after", "sourc", "stop", "producingthi", "produc", "thi", "happen", "when", "sourc", "produc", "some", "element", "then", "sourc", "stop", "while", "then", "produc", "again", "some", "element", "befor", "stop", "again", "after", "thi", "window", "will", "just", "keep", "emit", "last", "emit", "element", "indefinit"], "B_title": "Fix erroneous emission of Sliding Time PreReducer", "B_clean_title": ["fix", "erron", "emiss", "slide", "time", "prereduc", "pre", "reduc"]},
{"A_title": "math  SimpleRegression getSumSquaredErrorsgetSumSquaredErrors returns -ve value. See test below: public void testSimpleRegression()  double y =    8915.102 8919.302 8923.502 ; double x =   1.107178495 1.107264895 1.107351295 ; double x2 =   1.107178495E2 1.107264895E2 1.107351295E2 ; SimpleRegression reg = new SimpleRegression(); for (int i = 0; i < x.length; i++)   reg.addData(xiyi);  assertTrue(reg.getSumSquaredErrors() >= 0.0); // OK reg.clear(); for (int i = 0; i < x.length; i++)   reg.addData(x2iyi);  assertTrue(reg.getSumSquaredErrors() >= 0.0); // FAIL", "A_clean_title": ["math", "simpleregress", "simpl", "regress", "getsumsquarederrorsgetsumsquarederror", "get", "sum", "squar", "errorsget", "sum", "squar", "error", "return", "ve", "valu", "see", "test", "below", "public", "void", "testsimpleregress", "test", "simpl", "regress", "doubl", "8915", "102", "8919", "302", "8923", "502", "doubl", "107178495", "107264895", "107351295", "doubl", "x2", "107178495e2", "107264895e2", "107351295e2", "simpleregress", "simpl", "regress", "reg", "new", "simpleregress", "simpl", "regress", "int", "length", "i++", "reg", "adddata", "add", "data", "xiyi", "asserttru", "assert", "true", "reg", "getsumsquarederror", "get", "sum", "squar", "error", "ok", "reg", "clear", "int", "length", "i++", "reg", "adddata", "add", "data", "x2iyi", "asserttru", "assert", "true", "reg", "getsumsquarederror", "get", "sum", "squar", "error", "fail"], "B_title": "Modified getSumSquaredErrors method in SimpleRegression to always return a non-negative result. JIRA: MATH-85 Reported by Mark Osborn Patched by Luc Maisonobe", "B_clean_title": ["modifi", "getsumsquarederror", "get", "sum", "squar", "error", "method", "simpleregress", "simpl", "regress", "alway", "return", "non", "neg", "result", "jira", "math", "85", "report", "by", "mark", "osborn", "patch", "by", "luc", "maisonob"]},
{"A_title": "Extraneous type id mapping added for base type itselfLooks like type id (name) matching base type is included in type resolution list automatically. While this might be useful sometimes it seems quite odd and probably should only be included if:    Base type is concrete and  Base type has explicit name (not add if default name used)", "A_clean_title": ["extran", "type", "id", "map", "ad", "base", "type", "itselflook", "itself", "look", "like", "type", "id", "name", "match", "base", "type", "includ", "type", "resolut", "list", "automat", "while", "thi", "might", "use", "sometim", "it", "seem", "quit", "odd", "probabl", "onli", "includ", "base", "type", "concret", "base", "type", "ha", "explicit", "name", "not", "add", "default", "name", "use"], "B_title": "Fix #1616", "B_clean_title": ["fix", "1616"]},
{"A_title": "FileOperations expects RFile filenames to contain only 1 dot.If I attempt to create or read an RFile that contains more than 1 dot in the filename FileOperations throws an IllegalArgumentException(File name  + name +  has no extension). Please allow creation/import of RFiles that have more than 1 dot in the filename.", "A_clean_title": ["fileoper", "file", "oper", "expect", "rfile", "file", "filenam", "contain", "onli", "dot", "attempt", "creat", "or", "read", "rfile", "file", "that", "contain", "more", "than", "dot", "filenam", "fileoper", "file", "oper", "throw", "illegalargumentexcept", "illeg", "argument", "except", "file", "name", "name", "ha", "no", "extens", "pleas", "allow", "creation", "import", "rfile", "file", "that", "have", "more", "than", "dot", "filenam"], "B_title": "Patch from David M. Lyle that allows opening rfiles w/ multiple dots in name.", "B_clean_title": ["patch", "david", "lyle", "that", "allow", "open", "rfile", "multipl", "dot", "name"]},
{"A_title": "CMAESOptimizer with bounds fits finely near lower bound and coarsely near upper bound.When fitting with bounds the CMAESOptimizer fits finely near the lower bound and coarsely near the upper bound.  This is because it internally maps the fitted parameter range into the interval 01.  The unit of least precision (ulp) between floating point numbers is much smaller near zero than near one.  Thus fits have much better resolution near the lower bound (which is mapped to zero) than the upper bound (which is mapped to one).  I will attach a example program to demonstrate.", "A_clean_title": ["cmaesoptim", "cmae", "optim", "bound", "fit", "fine", "near", "lower", "bound", "coars", "near", "upper", "bound", "when", "fit", "bound", "cmaesoptim", "cmae", "optim", "fit", "fine", "near", "lower", "bound", "coars", "near", "upper", "bound", "thi", "becaus", "it", "intern", "map", "fit", "paramet", "rang", "into", "interv", "01", "unit", "least", "precis", "ulp", "between", "float", "point", "number", "much", "smaller", "near", "zero", "than", "near", "one", "thu", "fit", "have", "much", "better", "resolut", "near", "lower", "bound", "which", "map", "zero", "than", "upper", "bound", "which", "map", "one", "will", "attach", "exampl", "program", "demonstr"], "B_title": "Modified encode and decode methods. Unit test testFitAccuracyDependsOnBoundary now passes and is thus enabled. Unit test testConstrainedRosen had to be modified in order to not fail with the new code (starting point is set closer to the solution).", "B_clean_title": ["modifi", "encod", "decod", "method", "unit", "test", "testfitaccuracydependsonboundari", "test", "fit", "accuraci", "depend", "boundari", "now", "pass", "thu", "enabl", "unit", "test", "testconstrainedrosen", "test", "constrain", "rosen", "had", "modifi", "order", "not", "fail", "new", "code", "start", "point", "set", "closer", "solut"]},
{"A_title": "Repositories does not expose registered repository for proxy type DATACMNS-1215opened and commented Converting an entity to an ID using  DomainClassConverter.ToIdConverter fails if the entity instance is actually a proxy. This is because DomainClassConverter.ToIdConverter.matches(…) only checks for a repository with the sourceType.getType() . In the case of a Hibernate proxy this type is EntityClass_", "A_clean_title": ["repositori", "not", "expos", "regist", "repositori", "proxi", "type", "datacmn", "1215open", "comment", "convert", "entiti", "id", "domainclassconvert", "toidconvert", "domain", "class", "convert", "id", "convert", "fail", "entiti", "instanc", "actual", "proxi", "thi", "becaus", "domainclassconvert", "toidconvert", "match", "domain", "class", "convert", "id", "convert", "onli", "check", "repositori", "sourcetyp", "gettyp", "sourc", "type", "get", "type", "case", "hibern", "proxi", "thi", "type", "entityclass", "entiti", "class"], "B_title": "DATACMNS-1215 - Fixed repository lookup for proxy domain classes.  We now consistently use the user class for repository (metadata) lookup in Repositories.", "B_clean_title": ["datacmn", "1215", "fix", "repositori", "lookup", "proxi", "domain", "class", "we", "now", "consist", "use", "user", "class", "repositori", "metadata", "lookup", "repositori"]},
{"A_title": "Converting from an interface type to a constructor which @implements itself causes stack overflow.None", "A_clean_title": ["convert", "interfac", "type", "constructor", "which", "implement", "itself", "caus", "stack", "overflow", "none"], "B_title": "Fix issue 873 Converting from an interface type to a constructor which @implements itself causes stack overflow.", "B_clean_title": ["fix", "issu", "873", "convert", "interfac", "type", "constructor", "which", "implement", "itself", "caus", "stack", "overflow"]},
{"A_title": "Method getResult() in MultiStartUnivariateRealOptimizerIn MultiStartUnivariateRealOptimizer (package optimization) the method getResult returns the result of the last run of the underlying optimizer; this last result might not be the best one in which case it will not correspond to the value returned by the optimize method. This is confusing and does not seem very useful. I think that getResult should be defined as    public double getResult()      return optima0;    and similarly  public double getFunctionValue()      return optimaValues0;", "A_clean_title": ["method", "getresult", "get", "result", "multistartunivariaterealoptimizerin", "multi", "start", "univari", "real", "optim", "multistartunivariaterealoptim", "multi", "start", "univari", "real", "optim", "packag", "optim", "method", "getresult", "get", "result", "return", "result", "last", "run", "underli", "optim", "thi", "last", "result", "might", "not", "best", "one", "which", "case", "it", "will", "not", "correspond", "valu", "return", "by", "optim", "method", "thi", "confus", "not", "seem", "veri", "use", "think", "that", "getresult", "get", "result", "defin", "as", "public", "doubl", "getresult", "get", "result", "return", "optima0", "similarli", "public", "doubl", "getfunctionvalu", "get", "function", "valu", "return", "optimavalues0", "optima", "values0"], "B_title": "Fixed inconsistent definition of getResult. Modified associated test accordingly.", "B_clean_title": ["fix", "inconsist", "definit", "getresult", "get", "result", "modifi", "associ", "test", "accordingli"]},
{"A_title": "LastRevRecoveryAgent can update _lastRev of children but not the rootAs mentioned in OAK-2131|https://issues.apache.org/jira/browse/OAK-2131?focusedCommentId=14616391&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14616391 there can be a situation wherein the LastRevRecoveryAgent updates some nodes in the tree but not the root. This seems to happen due to OAK-2131s change in the Commit.applyToCache (where paths to update are collected via tracker.track): in that code paths which are non-root and for which no content has changed (and mind you a content change includes adding _deleted which happens by default for nodes with children) are not tracked ie for those the _lastRev is not update by subsequent backgroundUpdate operations - leaving them old/out-of-date. This seems correct as per description/intention of OAK-2131 where the last revision can be determined via the commitRoot of the parent. But it has the effect that the LastRevRecoveryAgent then finds those intermittent nodes to be updated while as the root has already been updated (which is at first glance non-intuitive).  Ill attach a test case to reproduce this.  Perhaps this is a bug perhaps its ok. ~mreutegg wdyt?", "A_clean_title": ["lastrevrecoveryag", "last", "rev", "recoveri", "agent", "updat", "lastrev", "last", "rev", "children", "but", "not", "roota", "root", "as", "mention", "oak", "2131|http", "2131", "apach", "issu", "org", "jira", "brows", "oak", "focusedcommentid=14616391", "focus", "comment", "id=14616391", "page=com", "atlassian", "jira", "plugin", "system", "issuetabpanel", "comment", "tabpanel", "comment", "14616391", "there", "situat", "wherein", "lastrevrecoveryag", "last", "rev", "recoveri", "agent", "updat", "some", "node", "tree", "but", "not", "root", "thi", "seem", "happen", "due", "oak", "2131", "chang", "commit", "applytocach", "appli", "cach", "where", "path", "updat", "are", "collect", "via", "tracker", "track", "that", "code", "path", "which", "are", "non", "root", "which", "no", "content", "ha", "chang", "mind", "you", "content", "chang", "includ", "ad", "delet", "which", "happen", "by", "default", "node", "children", "are", "not", "track", "ie", "those", "lastrev", "last", "rev", "not", "updat", "by", "subsequ", "backgroundupd", "background", "updat", "oper", "leav", "them", "date", "old", "out", "thi", "seem", "correct", "as", "per", "descript", "intent", "oak", "2131", "where", "last", "revis", "determin", "via", "commitroot", "commit", "root", "parent", "but", "it", "ha", "effect", "that", "lastrevrecoveryag", "last", "rev", "recoveri", "agent", "then", "find", "those", "intermitt", "node", "updat", "while", "as", "root", "ha", "alreadi", "been", "updat", "which", "at", "first", "glanc", "non", "intuit", "ill", "attach", "test", "case", "reproduc", "thi", "perhap", "thi", "bug", "perhap", "it", "ok", "~mreutegg", "wdyt"], "B_title": "LastRevRecoveryAgent can update _lastRev of children but not the root", "B_clean_title": ["lastrevrecoveryag", "last", "rev", "recoveri", "agent", "updat", "lastrev", "last", "rev", "children", "but", "not", "root"]},
{"A_title": "Query: use union for complex XPath queries that use multiple orThe following XPath query is converted to a union however there is still an or in the converted query which means the query still cant use all indexes and has to traverse the whole repository:  noformat /jcr:root/a/b//element(* nt:unstructured)( (@sling:resourceType = x  or @sling:resourceType = dam/collection)  or @sling:resourceSuperType = dam/collection)  noformat", "A_clean_title": ["queri", "use", "union", "complex", "xpath", "path", "queri", "that", "use", "multipl", "orth", "or", "follow", "xpath", "path", "queri", "convert", "union", "howev", "there", "still", "or", "convert", "queri", "which", "mean", "queri", "still", "cant", "use", "all", "index", "ha", "travers", "whole", "repositori", "noformat", "jcr", "root", "element", "nt", "unstructur", "sling", "resourcetyp", "resourc", "type", "or", "sling", "resourcetyp", "resourc", "type", "dam", "collect", "or", "sling", "resourcesupertyp", "resourc", "super", "type", "dam", "collect", "noformat"], "B_title": "Query: use union for complex XPath queries that use multiple or", "B_clean_title": ["queri", "use", "union", "complex", "xpath", "path", "queri", "that", "use", "multipl", "or"]},
{"A_title": "Fix StateDescriptor.readObjectThe readObject method of StateDescriptor uses uses ObjectInputStream.read(). For very large serialized default values this will not necessarily read all data in one go. We need a loop that reads it in several steps.", "A_clean_title": ["fix", "statedescriptor", "readobjectth", "state", "descriptor", "read", "object", "readobject", "read", "object", "method", "statedescriptor", "state", "descriptor", "use", "use", "objectinputstream", "read", "object", "input", "stream", "veri", "larg", "serial", "default", "valu", "thi", "will", "not", "necessarili", "read", "all", "data", "one", "go", "we", "need", "loop", "that", "read", "it", "sever", "step"], "B_title": "Fix StateDescriptor.readObject", "B_clean_title": ["fix", "statedescriptor", "readobject", "state", "descriptor", "read", "object"]},
{"A_title": "new multivariate vector optimizers cannot be used with large number of weightsWhen using the Weigth class to pass a large number of weights to multivariate vector optimizers an nxn full matrix is created (and copied) when a n elements vector is used. This exhausts memory when n is large. This happens for example when using curve fitters (even simple curve fitters like polynomial ones for low degree) with large number of points. I encountered this with curve fitting on 41200 points which created a matrix with 1.7 billion elements.", "A_clean_title": ["new", "multivari", "vector", "optim", "not", "use", "larg", "number", "weightswhen", "weight", "when", "weigth", "class", "pass", "larg", "number", "weight", "multivari", "vector", "optim", "nxn", "full", "matrix", "creat", "copi", "when", "element", "vector", "use", "thi", "exhaust", "memori", "when", "larg", "thi", "happen", "exampl", "when", "curv", "fitter", "even", "simpl", "curv", "fitter", "like", "polynomi", "one", "low", "degre", "larg", "number", "point", "encount", "thi", "curv", "fit", "41200", "point", "which", "creat", "matrix", "billion", "element"], "B_title": "Using a diagonal matrix to avoid exhausting memory.", "B_clean_title": ["diagon", "matrix", "avoid", "exhaust", "memori"]},
{"A_title": "NullPointerException in ProjectingJackson2HttpMessageConverter DATACMNS-972opened and commented Managed to get a nullpointer after switching to spring-boot 1.5.0.RC1 from 1.4.3.RELEASE  Nullpointer happens because the rawType is null when the type is generic type(like T or D).   With generic type the targetClass is initialised here correctly using ResolvableType.forMethodParameter(parameter).resolve():   spring The new ProjectingJackson2HttpMessageConverter converter is initialized as first converter here because spring-boot defines json-path depenency.   spring Stacktrace:     Affects: 1.13 RC1 (Ingalls)  Reference URL:  https://jira.spring.io/browse/DATACMNS-885  Attachments:      Backported to:  1.13 GA (Ingalls)", "A_clean_title": ["nullpointerexcept", "null", "pointer", "except", "projectingjackson2httpmessageconvert", "project", "jackson2http", "messag", "convert", "datacmn", "972open", "comment", "manag", "get", "nullpoint", "after", "switch", "spring", "boot", "rc1", "releas", "nullpoint", "happen", "becaus", "rawtyp", "raw", "type", "null", "when", "type", "gener", "type", "like", "or", "gener", "type", "targetclass", "target", "class", "initialis", "here", "correctli", "resolvabletyp", "formethodparamet", "resolv", "type", "method", "paramet", "paramet", "resolv", "spring", "new", "projectingjackson2httpmessageconvert", "project", "jackson2http", "messag", "convert", "convert", "initi", "as", "first", "convert", "here", "becaus", "spring", "boot", "defin", "json", "path", "depen", "spring", "stacktrac", "affect", "13", "rc1", "ingal", "refer", "url", "http", "885", "spring", "jira", "io", "brows", "datacmn", "attach", "backport", "13", "ga", "ingal"], "B_title": "DATACMNS-972 - Fixed ProjectingJackson2HttpMessageConverter.canRead(…) for generic type variables.  ProjectingJackson2HttpMessageConverter.canRead(…) now resolves the given type correctly even in context of their owning class.", "B_clean_title": ["datacmn", "972", "fix", "projectingjackson2httpmessageconvert", "canread", "project", "jackson2http", "messag", "convert", "read", "gener", "type", "variabl", "projectingjackson2httpmessageconvert", "canread", "project", "jackson2http", "messag", "convert", "read", "now", "resolv", "given", "type", "correctli", "even", "context", "their", "own", "class"]},
{"A_title": "closure compiler screws up a perfectly valid isFunction() implementationNone", "A_clean_title": ["closur", "compil", "screw", "up", "perfectli", "valid", "isfunct", "function", "implementationnon", "implement", "none"], "B_title": "dont try to inline properties that we dont recognize because they may be prototype properties. This isnt a perfect fix but should get most cases. Fixes issue 724", "B_clean_title": ["dont", "tri", "inlin", "properti", "that", "we", "dont", "recogn", "becaus", "they", "may", "prototyp", "properti", "thi", "isnt", "perfect", "fix", "but", "get", "most", "case", "fix", "issu", "724"]},
{"A_title": "SpearmansCorrelation fails when using NaturalRanking together with NaNStrategy.REMOVEDAs reported by Martin Rosellen on the users mailinglist:  Using a NaturalRanking with a REMOVED NaNStrategy can result in an exception when NaN are contained in the input arrays.  The current implementation just removes the NaN values where they occur without taken care to remove the corresponding values in the other array.", "A_clean_title": ["spearmanscorrel", "spearman", "correl", "fail", "when", "naturalrank", "natur", "rank", "togeth", "nanstrategi", "removeda", "na", "strategi", "remov", "as", "report", "by", "martin", "rosellen", "user", "mailinglist", "naturalrank", "natur", "rank", "remov", "nanstrategi", "na", "strategi", "result", "except", "when", "nan", "na", "are", "contain", "input", "array", "current", "implement", "just", "remov", "nan", "na", "valu", "where", "they", "occur", "without", "taken", "care", "remov", "correspond", "valu", "other", "array"], "B_title": "SpearmansCorrelation now works correctly when provided with a NaturalRanking with NaNStrategy.REMOVED.", "B_clean_title": ["spearmanscorrel", "spearman", "correl", "now", "work", "correctli", "when", "provid", "naturalrank", "natur", "rank", "nanstrategi", "remov", "na", "strategi"]},
{"A_title": "ListenerInterfaceRequestHandler should not assume existence of a pageListenerInterfaceRequestHandler should not assume a page instance is always available in isPageInstanceCreated. This handler can also be used for links on bookmarkable pages. The attached patch fixes this.", "A_clean_title": ["listenerinterfacerequesthandl", "listen", "interfac", "request", "handler", "not", "assum", "exist", "pagelistenerinterfacerequesthandl", "page", "listen", "interfac", "request", "handler", "not", "assum", "page", "instanc", "alway", "avail", "ispageinstancecr", "page", "instanc", "creat", "thi", "handler", "also", "use", "link", "bookmark", "page", "attach", "patch", "fix", "thi"], "B_title": "ListenerInterfaceRequestHandler should not assume existence of a page", "B_clean_title": ["listenerinterfacerequesthandl", "listen", "interfac", "request", "handler", "not", "assum", "exist", "page"]},
{"A_title": "Using ajax to update a component that has an AbstractTransformerBehavior attached throws a ClassCastExceptionUsing ajax to update a component that has an AbstractTransformerBehavior attached throws a ClassCastException:  java.lang.ClassCastException: org.apache.wicket.ajax.AjaxRequestTarget AjaxResponse cannot be cast to org.apache.wicket.request.http.WebResponse       at org.apache.wicket.markup.transformer.AbstractTransformerBehavior.beforeRender(AbstractTransformerBehavior.java:68)        at org.apache.wicket.Component.notifyBehaviorsComponentBeforeRender(Component.java:3421)       at org.apache.wicket.Component.internalRender(Component.java:2344)       at org.apache.wicket.Component.render(Component.java:2273)        at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)       at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)       at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)        at org.apache.wicket.MarkupContainer.onComponentTagBody(MarkupContainer.java:1567)       at org.apache.wicket.markup.html.form.Form.onComponentTagBody(Form.java:1570)       at org.apache.wicket.markup.html.panel.DefaultMarkupSourcingStrategy.onComponentTagBody(DefaultMarkupSourcingStrategy.java:72)        at org.apache.wicket.Component.internalRenderComponent(Component.java:2515)       at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)       at org.apache.wicket.Component.internalRender(Component.java:2345)        at org.apache.wicket.Component.render(Component.java:2273)       at org.apache.wicket.MarkupContainer.renderNext(MarkupContainer.java:1474)       at org.apache.wicket.MarkupContainer.renderAll(MarkupContainer.java:1638)        at org.apache.wicket.MarkupContainer.renderComponentTagBody(MarkupContainer.java:1613)       at org.apache.wicket.MarkupContainer.renderAssociatedMarkup(MarkupContainer.java:735)       at org.apache.wicket.markup.html.panel.AssociatedMarkupSourcingStrategy.renderAssociatedMarkup(AssociatedMarkupSourcingStrategy.java:76)        at org.apache.wicket.markup.html.panel.PanelMarkupSourcingStrategy.onComponentTagBody(PanelMarkupSourcingStrategy.java:112)       at org.apache.wicket.Component.internalRenderComponent(Component.java:2515)       at org.apache.wicket.MarkupContainer.onRender(MarkupContainer.java:1576)        at org.apache.wicket.Component.internalRender(Component.java:2345)       at org.apache.wicket.Component.render(Component.java:2273)       at org.apache.wicket.ajax.AjaxRequestTarget.respondComponent(AjaxRequestTarget.java:982)        at org.apache.wicket.ajax.AjaxRequestTarget.respondComponents(AjaxRequestTarget.java:796)       at org.apache.wicket.ajax.AjaxRequestTarget.constructResponseBody(AjaxRequestTarget.java:676)       at org.apache.wicket.ajax.AjaxRequestTarget.respond(AjaxRequestTarget.java:637)        at org.apache.wicket.request.cycle.RequestCycle HandlerExecutor.respond(RequestCycle.java:712)       at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:63)       at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:96)        at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:208)       at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:251)       at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:162)        at org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:218)       at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)       at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)       at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:175)       at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:128)        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)       at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)       at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:286)        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:844)       at org.apache.coyote.http11.Http11Protocol Http11ConnectionHandler.process(Http11Protocol.java:583)       at org.apache.tomcat.util.net.JIoEndpoint Worker.run(JIoEndpoint.java:447)        at java.lang.Thread.run(Thread.java:619)", "A_clean_title": ["ajax", "updat", "compon", "that", "ha", "abstracttransformerbehavior", "abstract", "transform", "behavior", "attach", "throw", "classcastexceptionus", "class", "cast", "except", "ajax", "updat", "compon", "that", "ha", "abstracttransformerbehavior", "abstract", "transform", "behavior", "attach", "throw", "classcastexcept", "class", "cast", "except", "java", "lang", "classcastexcept", "class", "cast", "except", "org", "apach", "wicket", "ajax", "ajaxrequesttarget", "ajax", "request", "target", "ajaxrespons", "ajax", "respons", "not", "cast", "org", "apach", "wicket", "request", "http", "webrespons", "web", "respons", "at", "org", "apach", "wicket", "markup", "transform", "abstracttransformerbehavior", "beforerend", "abstract", "transform", "behavior", "befor", "render", "abstracttransformerbehavior", "java:68", "abstract", "transform", "behavior", "at", "org", "apach", "wicket", "compon", "notifybehaviorscomponentbeforerend", "notifi", "behavior", "compon", "befor", "render", "compon", "java:3421", "at", "org", "apach", "wicket", "compon", "internalrend", "intern", "render", "compon", "java:2344", "at", "org", "apach", "wicket", "compon", "render", "compon", "java:2273", "at", "org", "apach", "wicket", "markupcontain", "rendernext", "markup", "contain", "render", "next", "markupcontain", "java:1474", "markup", "contain", "at", "org", "apach", "wicket", "markupcontain", "renderal", "markup", "contain", "render", "all", "markupcontain", "java:1638", "markup", "contain", "at", "org", "apach", "wicket", "markupcontain", "rendercomponenttagbodi", "markup", "contain", "render", "compon", "tag", "bodi", "markupcontain", "java:1613", "markup", "contain", "at", "org", "apach", "wicket", "markupcontain", "oncomponenttagbodi", "markup", "contain", "compon", "tag", "bodi", "markupcontain", "java:1567", "markup", "contain", "at", "org", "apach", "wicket", "markup", "html", "form", "form", "oncomponenttagbodi", "compon", "tag", "bodi", "form", "java:1570", "at", "org", "apach", "wicket", "markup", "html", "panel", "defaultmarkupsourcingstrategi", "oncomponenttagbodi", "default", "markup", "sourc", "strategi", "compon", "tag", "bodi", "defaultmarkupsourcingstrategi", "java:72", "default", "markup", "sourc", "strategi", "at", "org", "apach", "wicket", "compon", "internalrendercompon", "intern", "render", "compon", "compon", "java:2515", "at", "org", "apach", "wicket", "markupcontain", "onrend", "markup", "contain", "render", "markupcontain", "java:1576", "markup", "contain", "at", "org", "apach", "wicket", "compon", "internalrend", "intern", "render", "compon", "java:2345", "at", "org", "apach", "wicket", "compon", "render", "compon", "java:2273", "at", "org", "apach", "wicket", "markupcontain", "rendernext", "markup", "contain", "render", "next", "markupcontain", "java:1474", "markup", "contain", "at", "org", "apach", "wicket", "markupcontain", "renderal", "markup", "contain", "render", "all", "markupcontain", "java:1638", "markup", "contain", "at", "org", "apach", "wicket", "markupcontain", "rendercomponenttagbodi", "markup", "contain", "render", "compon", "tag", "bodi", "markupcontain", "java:1613", "markup", "contain", "at", "org", "apach", "wicket", "markupcontain", "renderassociatedmarkup", "markup", "contain", "render", "associ", "markup", "markupcontain", "java:735", "markup", "contain", "at", "org", "apach", "wicket", "markup", "html", "panel", "associatedmarkupsourcingstrategi", "renderassociatedmarkup", "associ", "markup", "sourc", "strategi", "render", "associ", "markup", "associatedmarkupsourcingstrategi", "java:76", "associ", "markup", "sourc", "strategi", "at", "org", "apach", "wicket", "markup", "html", "panel", "panelmarkupsourcingstrategi", "oncomponenttagbodi", "panel", "markup", "sourc", "strategi", "compon", "tag", "bodi", "panelmarkupsourcingstrategi", "java:112", "panel", "markup", "sourc", "strategi", "at", "org", "apach", "wicket", "compon", "internalrendercompon", "intern", "render", "compon", "compon", "java:2515", "at", "org", "apach", "wicket", "markupcontain", "onrend", "markup", "contain", "render", "markupcontain", "java:1576", "markup", "contain", "at", "org", "apach", "wicket", "compon", "internalrend", "intern", "render", "compon", "java:2345", "at", "org", "apach", "wicket", "compon", "render", "compon", "java:2273", "at", "org", "apach", "wicket", "ajax", "ajaxrequesttarget", "respondcompon", "ajax", "request", "target", "respond", "compon", "ajaxrequesttarget", "java:982", "ajax", "request", "target", "at", "org", "apach", "wicket", "ajax", "ajaxrequesttarget", "respondcompon", "ajax", "request", "target", "respond", "compon", "ajaxrequesttarget", "java:796", "ajax", "request", "target", "at", "org", "apach", "wicket", "ajax", "ajaxrequesttarget", "constructresponsebodi", "ajax", "request", "target", "construct", "respons", "bodi", "ajaxrequesttarget", "java:676", "ajax", "request", "target", "at", "org", "apach", "wicket", "ajax", "ajaxrequesttarget", "respond", "ajax", "request", "target", "ajaxrequesttarget", "java:637", "ajax", "request", "target", "at", "org", "apach", "wicket", "request", "cycl", "requestcycl", "request", "cycl", "handlerexecutor", "respond", "handler", "executor", "requestcycl", "java:712", "request", "cycl", "at", "org", "apach", "wicket", "request", "requesthandlerstack", "execut", "request", "handler", "stack", "requesthandlerstack", "java:63", "request", "handler", "stack", "at", "org", "apach", "wicket", "request", "requesthandlerstack", "execut", "request", "handler", "stack", "requesthandlerstack", "java:96", "request", "handler", "stack", "at", "org", "apach", "wicket", "request", "cycl", "requestcycl", "processrequest", "request", "cycl", "process", "request", "requestcycl", "java:208", "request", "cycl", "at", "org", "apach", "wicket", "request", "cycl", "requestcycl", "processrequestanddetach", "request", "cycl", "process", "request", "detach", "requestcycl", "java:251", "request", "cycl", "at", "org", "apach", "wicket", "protocol", "http", "wicketfilt", "processrequest", "wicket", "filter", "process", "request", "wicketfilt", "java:162", "wicket", "filter", "at", "org", "apach", "wicket", "protocol", "http", "wicketfilt", "dofilt", "wicket", "filter", "filter", "wicketfilt", "java:218", "wicket", "filter", "at", "org", "apach", "catalina", "core", "applicationfilterchain", "internaldofilt", "applic", "filter", "chain", "intern", "filter", "applicationfilterchain", "java:235", "applic", "filter", "chain", "at", "org", "apach", "catalina", "core", "applicationfilterchain", "dofilt", "applic", "filter", "chain", "filter", "applicationfilterchain", "java:206", "applic", "filter", "chain", "at", "org", "apach", "catalina", "core", "standardwrappervalv", "invok", "standard", "wrapper", "valv", "standardwrappervalv", "java:233", "standard", "wrapper", "valv", "at", "org", "apach", "catalina", "core", "standardcontextvalv", "invok", "standard", "context", "valv", "standardcontextvalv", "java:175", "standard", "context", "valv", "at", "org", "apach", "catalina", "core", "standardhostvalv", "invok", "standard", "host", "valv", "standardhostvalv", "java:128", "standard", "host", "valv", "at", "org", "apach", "catalina", "valv", "errorreportvalv", "invok", "error", "report", "valv", "errorreportvalv", "java:102", "error", "report", "valv", "at", "org", "apach", "catalina", "core", "standardenginevalv", "invok", "standard", "engin", "valv", "standardenginevalv", "java:109", "standard", "engin", "valv", "at", "org", "apach", "catalina", "connector", "coyoteadapt", "servic", "coyot", "adapt", "coyoteadapt", "java:286", "coyot", "adapt", "at", "org", "apach", "coyot", "http11", "http11processor", "process", "http11processor", "java:844", "at", "org", "apach", "coyot", "http11", "http11protocol", "http11connectionhandl", "process", "http11connect", "handler", "http11protocol", "java:583", "at", "org", "apach", "tomcat", "util", "net", "jioendpoint", "io", "endpoint", "worker", "run", "jioendpoint", "java:447", "io", "endpoint", "at", "java", "lang", "thread", "run", "thread", "java:619"], "B_title": "Using ajax to update a component that has an AbstractTransformerBehavior attached throws a ClassCastException", "B_clean_title": ["ajax", "updat", "compon", "that", "ha", "abstracttransformerbehavior", "abstract", "transform", "behavior", "attach", "throw", "classcastexcept", "class", "cast", "except"]},
{"A_title": "tryFoldArrayAccess does not check for side effectsNone", "A_clean_title": ["tryfoldarrayaccess", "tri", "fold", "array", "access", "not", "check", "side", "effectsnon", "effect", "none"], "B_title": "Dont fold arrays if they have side effects. Contributed by Robert Gust-Bardon Fixes issue 747", "B_clean_title": ["dont", "fold", "array", "they", "have", "side", "effect", "contribut", "by", "robert", "gust", "bardon", "fix", "issu", "747"]},
{"A_title": "Better support for RangeIteratorsCurrently all RangeIterators returned from the JCR API dont implement the getSize() method but rather return -1. We should return the size of the iterator if and where feasible.", "A_clean_title": ["better", "support", "rangeiteratorscurr", "rang", "iter", "current", "all", "rangeiter", "rang", "iter", "return", "jcr", "api", "dont", "implement", "getsiz", "get", "size", "method", "but", "rather", "return", "we", "return", "size", "iter", "where", "feasibl"], "B_title": "Better support for RangeIterators", "B_clean_title": ["better", "support", "rangeiter", "rang", "iter"]},
{"A_title": "externExport with @typedef can generate invalid externsNone", "A_clean_title": ["externexport", "extern", "export", "typedef", "gener", "invalid", "externsnon", "extern", "none"], "B_title": "print record types better when generating typed code. fixes issue 643", "B_clean_title": ["print", "record", "type", "better", "when", "gener", "type", "code", "fix", "issu", "643"]},
{"A_title": "@enum does not type correctlyNone", "A_clean_title": ["enum", "not", "type", "correctlynon", "correctli", "none"], "B_title": "Fixes Issue 482 In percent typed counting ignore the nodes of Enum elements", "B_clean_title": ["fix", "issu", "482", "percent", "type", "count", "ignor", "node", "enum", "element"]},
{"A_title": "RegExFilter does not properly regex when using multi-byte charactersThe current RegExFilter class uses a ByteArrayBackedCharSequence to set the data to match against. The ByteArrayBackedCharSequence contains a line of code that prevents the matcher from properly matching multi-byte characters.  Line 49 of ByteArrayBackedCharSequence.java is: return (char) (0xff & dataoffset + index);                                                                                                This incorrectly casts a single byte from the byte array to a char which is 2 bytes in Java. This prevents the RegExFilter from properly performing Regular Expressions on multi-byte character encoded values.  A patch for the RegExFilter.java file has been created and will be submitted.", "A_clean_title": ["regexfilt", "reg", "ex", "filter", "not", "properli", "regex", "when", "multi", "byte", "charactersth", "charact", "current", "regexfilt", "reg", "ex", "filter", "class", "use", "bytearraybackedcharsequ", "byte", "array", "back", "char", "sequenc", "set", "data", "match", "against", "bytearraybackedcharsequ", "byte", "array", "back", "char", "sequenc", "contain", "line", "code", "that", "prevent", "matcher", "properli", "match", "multi", "byte", "charact", "line", "49", "bytearraybackedcharsequ", "java", "byte", "array", "back", "char", "sequenc", "return", "char", "0xff", "dataoffset", "index", "thi", "incorrectli", "cast", "singl", "byte", "byte", "array", "char", "which", "byte", "java", "thi", "prevent", "regexfilt", "reg", "ex", "filter", "properli", "perform", "regular", "express", "multi", "byte", "charact", "encod", "valu", "patch", "regexfilt", "java", "reg", "ex", "filter", "file", "ha", "been", "creat", "will", "submit"], "B_title": "merged to trunk", "B_clean_title": ["merg", "trunk"]},
{"A_title": "TokenLoginModule cant handle case insensitive useridsLogin against TokenLoginModule with an userid different in case throws:   javax.security.auth.login.LoginException: Invalid token credentials.", "A_clean_title": ["tokenloginmodul", "token", "login", "modul", "cant", "handl", "case", "insensit", "useridslogin", "userid", "login", "against", "tokenloginmodul", "token", "login", "modul", "userid", "differ", "case", "throw", "javax", "secur", "auth", "login", "loginexcept", "login", "except", "invalid", "token", "credenti"], "B_title": ": TokenLoginModule cant handle case insensitive userids OAK-1984: adjust test case to match issue resolution", "B_clean_title": ["tokenloginmodul", "token", "login", "modul", "cant", "handl", "case", "insensit", "userid", "oak", "1984", "adjust", "test", "case", "match", "issu", "resolut"]},
{"A_title": "Cannot exclude globalThis checks through command lineNone", "A_clean_title": ["not", "exclud", "globalthi", "global", "thi", "check", "through", "command", "linenon", "line", "none"], "B_title": "Fix order of operations of GLOBAL_THIS options. Fixes issue 521", "B_clean_title": ["fix", "order", "oper", "global", "thi", "option", "fix", "issu", "521"]},
{"A_title": "NumberUtils createNumber thows a StringIndexOutOfBoundsException when only an l is passed in.Seems to be similar to LANG-300 except that if you dont place a digit in front of the l or L it throws a StringIndexOutOfBoundsException instead.", "A_clean_title": ["numberutil", "number", "util", "createnumb", "creat", "number", "thow", "stringindexoutofboundsexcept", "string", "index", "out", "bound", "except", "when", "onli", "pass", "seem", "similar", "lang", "300", "except", "that", "you", "dont", "place", "digit", "front", "or", "it", "throw", "stringindexoutofboundsexcept", "string", "index", "out", "bound", "except", "instead"], "B_title": "Applying test/fix from LANG-457 - getting a StringIndexOutOfBounds from createNumber rather than a NumberFormatException", "B_clean_title": ["appli", "test", "fix", "lang", "457", "get", "stringindexoutofbound", "string", "index", "out", "bound", "createnumb", "creat", "number", "rather", "than", "numberformatexcept", "number", "format", "except"]},
{"A_title": "Value exchange in a wicket:message throws an exceptioni tried to exchange values in a <wicket:message> like described in wiki <https://cwiki.apache.org/WICKET/wickets-xhtml-tags.html#Wicket%27sXHTMLtags-Elementwicket:message>. But i get an exception: ERROR - RequestCycle               - No get method defined for class: class org.apache.wicket.markup.resolver.MarkupInheritanceResolver TransparentWebMarkupContainer expression: vat1value org.apache.wicket.WicketRuntimeException: No get method defined for class: class org.apache.wicket.markup.resolver.MarkupInheritanceResolver TransparentWebMarkupContainer expression: vat1value at org.apache.wicket.util.lang.PropertyResolver.getGetAndSetter(PropertyResolver.java:488) at org.apache.wicket.util.lang.PropertyResolver.getObjectAndGetSetter(PropertyResolver.java:330) at org.apache.wicket.util.lang.PropertyResolver.getObjectAndGetSetter(PropertyResolver.java:237) ...  Maybe its caused by usage of border. Ive debugged a bit but could get a real glue.  I added a quick start with test case.", "A_clean_title": ["valu", "exchang", "wicket", "messag", "throw", "exceptioni", "tri", "exchang", "valu", "wicket", "messag", "like", "describ", "wiki", "http", "xhtml", "apach", "tag", "html", "cwiki", "org", "wicket", "wicket", "wicket", "27sxhtmltag", "elementwicket", "27", "xhtm", "ltag", "messag", "but", "get", "except", "error", "requestcycl", "request", "cycl", "no", "get", "method", "defin", "class", "class", "org", "apach", "wicket", "markup", "resolv", "markupinheritanceresolv", "markup", "inherit", "resolv", "transparentwebmarkupcontain", "transpar", "web", "markup", "contain", "express", "vat1valu", "org", "apach", "wicket", "wicketruntimeexcept", "wicket", "runtim", "except", "no", "get", "method", "defin", "class", "class", "org", "apach", "wicket", "markup", "resolv", "markupinheritanceresolv", "markup", "inherit", "resolv", "transparentwebmarkupcontain", "transpar", "web", "markup", "contain", "express", "vat1valu", "at", "org", "apach", "wicket", "util", "lang", "propertyresolv", "getgetandsett", "properti", "resolv", "get", "get", "setter", "propertyresolv", "java:488", "properti", "resolv", "at", "org", "apach", "wicket", "util", "lang", "propertyresolv", "getobjectandgetsett", "properti", "resolv", "get", "object", "get", "setter", "propertyresolv", "java:330", "properti", "resolv", "at", "org", "apach", "wicket", "util", "lang", "propertyresolv", "getobjectandgetsett", "properti", "resolv", "get", "object", "get", "setter", "propertyresolv", "java:237", "properti", "resolv", "mayb", "it", "caus", "by", "usag", "border", "ive", "debug", "bit", "but", "could", "get", "real", "glue", "ad", "quick", "start", "test", "case"], "B_title": "fixed: Value exchange in a wicket:message throws an exception (if inside a border) Issue: WICKET-3454", "B_clean_title": ["fix", "valu", "exchang", "wicket", "messag", "throw", "except", "insid", "border", "issu", "wicket", "3454"]},
{"A_title": "Assignment removed when used as an expression result to Array.pushNone", "A_clean_title": ["assign", "remov", "when", "use", "as", "express", "result", "array", "pushnon", "push", "none"], "B_title": "Dont remove assignments to variables whose values have escaped and are later modified. Fixes issue 618.", "B_clean_title": ["dont", "remov", "assign", "variabl", "whose", "valu", "have", "escap", "are", "later", "modifi", "fix", "issu", "618"]},
{"A_title": "Locale deserialize zh-hant_CNzh-hant_CN will convert to zh_HANT_cn Locale include (language country variant) Locale.toString() use _ to split then  language_country_(variant_# | #)script-extensions but Jackson deserialize Locale use - or _  : (  code: LocaleHandle.readResolve()  iana language-tags   rfc4647 language lookup    in jdk1.5 -> 1.8", "A_clean_title": ["local", "deseri", "zh", "hant", "cnzh", "hant", "cn", "nzh", "will", "convert", "zh", "hant", "cn", "local", "includ", "languag", "countri", "variant", "local", "tostr", "string", "use", "split", "then", "languag", "countri", "variant", "script", "extens", "but", "jackson", "deseri", "local", "use", "or", "code", "localehandl", "readresolv", "local", "handl", "read", "resolv", "iana", "languag", "tag", "rfc4647", "languag", "lookup", "jdk1"], "B_title": "    #1411: Locale deserialize zh-hant_CN", "B_clean_title": ["1411", "local", "deseri", "zh", "hant", "cn"]},
{"A_title": "0 x00 and u0000 are translated to null characterNone", "A_clean_title": ["x00", "u0000", "are", "translat", "null", "characternon", "charact", "none"], "B_title": "Special case the NUL character. Fixes issue 383", "B_clean_title": ["special", "case", "nul", "charact", "fix", "issu", "383"]},
{"A_title": "Global fulltext index returning plan for pure NodeType queriesOn a system having  # Global fulltext index enabled with version V2 and evaluatePathRestriction enabled # NodeType index having indexing enabled for specific nodetype like cq:ClientLibraryFolder  A query like  noformat /jcr:root//element(* cq:ClientLibraryFolder) noformat  Ends up getting evaluated by fulltext index as it return plan with include all query  *Expected* For such query global fulltext index should not return any plan if the path restriction is on root path with include all children", "A_clean_title": ["global", "fulltext", "index", "return", "plan", "pure", "nodetyp", "node", "type", "querieson", "queri", "system", "have", "global", "fulltext", "index", "enabl", "version", "v2", "evaluatepathrestrict", "evalu", "path", "restrict", "enabl", "nodetyp", "node", "type", "index", "have", "index", "enabl", "specif", "nodetyp", "like", "cq", "clientlibraryfold", "client", "librari", "folder", "queri", "like", "noformat", "jcr", "root", "element", "cq", "clientlibraryfold", "client", "librari", "folder", "noformat", "end", "up", "get", "evalu", "by", "fulltext", "index", "as", "it", "return", "plan", "includ", "all", "queri", "expect", "such", "queri", "global", "fulltext", "index", "not", "return", "ani", "plan", "path", "restrict", "root", "path", "includ", "all", "children"], "B_title": "- Global fulltext index returning plan for pure NodeType queries", "B_clean_title": ["global", "fulltext", "index", "return", "plan", "pure", "nodetyp", "node", "type", "queri"]},
{"A_title": "Wicket 1.5 Form Post Action and Link Get discard Page Class InformationPage expiry is a very annoying and perplexing event especially if users stay logged in via remember-me cookie.  It is therefore not a fancy enhancement but an essential business requirement to not drop the user out of context after session expiry. Only stateless pages can fully achieve this but it is not always desirable to go fully stateless especially while a recovery solution already exists. In 1.4 this appears to be automatic with BookmarkablePageRequestTargetUrlCodingStrategy - without any additional coding.  The solution is well known - keep as much state in the client as required to recover the page class and possibly even its page parameters and to not destroy this information.  The two attached testcases show two possible methods of page fallback recovery (one with AJAX one without) that already work behind the scenes. Of course it is easy with AJAX to just force a page reload but this is not discussed here. AJAX just serves to demonstrate how easy the principle actually is. In most cases the user could successfully reload the page but Wicket 1.5 cant create a response because it has forgotten the class of the expired page.  In 1.4 it is possible to recover the class of an expired page via its mount path. This feature is lost in 1.5.  To get this functionality back in a more streamlined fashion I am additionaly proposing in a separate jira issue 4013 to store page class and page parameters in PageExpiredException.  Meanwhile the focus of this issue is to request whatever means to not overwrite the path of a page in a form post action or get request and to get the page class back as in 1.4 by whatever means.  The two attached testcases may be helpful for expermintation. The 1.4 tescase demonstrates how the scheme works unfortunately I could not fill the blanks in the 1.5 testcase.  In 1.4  a form tag is rendered as: <form wicket:id=form action=?wicket:interface=:0:form::IFormSubmitListener:: This is requested as: /testForm.0?wicket:interface=:0:form::IFormSubmitListener:: and the page class can be recovered from the mount path testForm as in     mount(new HybridUrlCodingStrategy(testForm TestPageForm.class));  an anchor tag is rendered as: <a href=?wicket:interface=:0:linkSwitch::ILinkListener:: This is requested as: /testLink.0?wicket:interface=:0:linkSwitch::ILinkListener:: and the page class can be recovered from the mount path test as in     mount(new HybridUrlCodingStrategy(testLink TestPageLink.class));    In 1.5  a form tag is rendered as: <form wicket:id=form action=wicket/page?0-2.IFormSubmitListener-form This is requested requested as: /wicket/page?0-1.IFormSubmitListener-form  This overwrites the mount path testForm as in     mountPage(testForm TestPageForm.class); Consequently the server cannot discover the page class   an anchor tag is rendered as: <a href=wicket/page?0-1.ILinkListener-linkSwitch This is requested requested as: /wicket/page?0-1.ILinkListener-linkSwitch  This overwrites the mount path testLink as in     mountPage(testLink TestPageLink.class); Consequently the server cannot discover the page class", "A_clean_title": ["wicket", "form", "post", "action", "link", "get", "discard", "page", "class", "informationpag", "inform", "page", "expiri", "veri", "annoy", "perplex", "event", "especi", "user", "stay", "log", "via", "rememb", "me", "cooki", "it", "therefor", "not", "fanci", "enhanc", "but", "essenti", "busi", "requir", "not", "drop", "user", "out", "context", "after", "session", "expiri", "onli", "stateless", "page", "fulli", "achiev", "thi", "but", "it", "not", "alway", "desir", "go", "fulli", "stateless", "especi", "while", "recoveri", "solut", "alreadi", "exist", "thi", "appear", "automat", "bookmarkablepagerequesttargeturlcodingstrategi", "bookmark", "page", "request", "target", "url", "code", "strategi", "without", "ani", "addit", "code", "solut", "well", "known", "keep", "as", "much", "state", "client", "as", "requir", "recov", "page", "class", "possibl", "even", "it", "page", "paramet", "not", "destroy", "thi", "inform", "two", "attach", "testcas", "show", "two", "possibl", "method", "page", "fallback", "recoveri", "one", "ajax", "one", "without", "that", "alreadi", "work", "behind", "scene", "cours", "it", "easi", "ajax", "just", "forc", "page", "reload", "but", "thi", "not", "discuss", "here", "ajax", "just", "serv", "demonstr", "how", "easi", "principl", "actual", "most", "case", "user", "could", "success", "reload", "page", "but", "wicket", "cant", "creat", "respons", "becaus", "it", "ha", "forgotten", "class", "expir", "page", "it", "possibl", "recov", "class", "expir", "page", "via", "it", "mount", "path", "thi", "featur", "lost", "get", "thi", "function", "back", "more", "streamlin", "fashion", "am", "additionali", "propos", "separ", "jira", "issu", "4013", "store", "page", "class", "page", "paramet", "pageexpiredexcept", "page", "expir", "except", "meanwhil", "focu", "thi", "issu", "request", "whatev", "mean", "not", "overwrit", "path", "page", "form", "post", "action", "or", "get", "request", "get", "page", "class", "back", "as", "by", "whatev", "mean", "two", "attach", "testcas", "may", "help", "expermint", "tescas", "demonstr", "how", "scheme", "work", "unfortun", "could", "not", "fill", "blank", "testcas", "form", "tag", "render", "as", "form", "wicket", "id=form", "action=", "wicket", "interface=:0", "form", ":iformsubmitlisten", ":i", "form", "submit", "listen", "thi", "request", "as", "testform", "test", "form", "wicket", "interface=:0", "form", ":iformsubmitlisten", ":i", "form", "submit", "listen", "page", "class", "recov", "mount", "path", "testform", "test", "form", "as", "mount", "new", "hybridurlcodingstrategi", "hybrid", "url", "code", "strategi", "testform", "test", "form", "testpageform", "class", "test", "page", "form", "anchor", "tag", "render", "as", "href=", "wicket", "interface=:0", "linkswitch", "link", "switch", ":ilinklisten", ":i", "link", "listen", "thi", "request", "as", "testlink", "test", "link", "wicket", "interface=:0", "linkswitch", "link", "switch", ":ilinklisten", ":i", "link", "listen", "page", "class", "recov", "mount", "path", "test", "as", "mount", "new", "hybridurlcodingstrategi", "hybrid", "url", "code", "strategi", "testlink", "test", "link", "testpagelink", "class", "test", "page", "link", "form", "tag", "render", "as", "form", "wicket", "id=form", "action=wicket", "page", "form", "iformsubmitlisten", "form", "submit", "listen", "thi", "request", "request", "as", "wicket", "page", "form", "iformsubmitlisten", "form", "submit", "listen", "thi", "overwrit", "mount", "path", "testform", "test", "form", "as", "mountpag", "mount", "page", "testform", "test", "form", "testpageform", "class", "test", "page", "form", "consequ", "server", "not", "discov", "page", "class", "anchor", "tag", "render", "as", "href=wicket", "page", "linkswitch", "ilinklisten", "link", "switch", "link", "listen", "thi", "request", "request", "as", "wicket", "page", "linkswitch", "ilinklisten", "link", "switch", "link", "listen", "thi", "overwrit", "mount", "path", "testlink", "test", "link", "as", "mountpag", "mount", "page", "testlink", "test", "link", "testpagelink", "class", "test", "page", "link", "consequ", "server", "not", "discov", "page", "class"], "B_title": "Wicket 1.5 Form Post Action and Link Get discard Page Class Information", "B_clean_title": ["wicket", "form", "post", "action", "link", "get", "discard", "page", "class", "inform"]},
{"A_title": "NaN singular value from SVDThe following jython code Start code  from org.apache.commons.math.linear import *   Alist = 1.0 2.0 3.02.03.04.03.05.07.0   A = Array2DRowRealMatrix(Alist)   decomp = SingularValueDecompositionImpl(A)   print decomp.getSingularValues()  End code  prints array(d 11.218599757513008 0.3781791648535976 nan) The last singular value should be something very close to 0 since the matrix is rank deficient.  When i use the result from getSolver() to solve a system i end  up with a bunch of NaNs in the solution.  I assumed i would get back a least squares solution.  Does this SVD implementation require that the matrix be full rank?  If so then i would expect an exception to be thrown from the constructor or one of the methods.", "A_clean_title": ["nan", "na", "singular", "valu", "svdthe", "svd", "follow", "jython", "code", "start", "code", "org", "apach", "common", "math", "linear", "import", "alist", "02", "03", "04", "03", "05", "07", "array2drowrealmatrix", "array2d", "row", "real", "matrix", "alist", "decomp", "singularvaluedecompositionimpl", "singular", "valu", "decomposit", "impl", "print", "decomp", "getsingularvalu", "get", "singular", "valu", "end", "code", "print", "array", "11", "218599757513008", "3781791648535976", "nan", "last", "singular", "valu", "someth", "veri", "close", "sinc", "matrix", "rank", "defici", "when", "use", "result", "getsolv", "get", "solver", "solv", "system", "end", "up", "bunch", "nan", "na", "ns", "solut", "assum", "would", "get", "back", "least", "squar", "solut", "thi", "svd", "implement", "requir", "that", "matrix", "full", "rank", "so", "then", "would", "expect", "except", "thrown", "constructor", "or", "one", "method"], "B_title": "changed SVD to compute either compact SVD (using only positive singular values) or truncated SVD (using only singular values up to a user-specified max number) started fix of SVD solver that did not compute a least square solution the fix is not complete yet as it seems the solution does not really gives the smallest possible residuals. See for example the commented out parts of testMath320A in SingularValueSolverTest. JIRA: MATH-320", "B_clean_title": ["chang", "svd", "comput", "either", "compact", "svd", "onli", "posit", "singular", "valu", "or", "truncat", "svd", "onli", "singular", "valu", "up", "user", "specifi", "max", "number", "start", "fix", "svd", "solver", "that", "did", "not", "comput", "least", "squar", "solut", "fix", "not", "complet", "yet", "as", "it", "seem", "solut", "not", "realli", "give", "smallest", "possibl", "residu", "see", "exampl", "comment", "out", "part", "testmath320a", "test", "math320a", "singularvaluesolvertest", "singular", "valu", "solver", "test", "jira", "math", "320"]},
{"A_title": "Moving larger trees cause OutOfMemoryErrorLargeMoveTest.moveTest test runs out of heap space when moving roughly 100000 nodes (128M heap):  code java.lang.OutOfMemoryError: Java heap space at java.util.Arrays.copyOf(Arrays.java:2786) at java.lang.StringCoding.safeTrim(StringCoding.java:64) at java.lang.StringCoding.access 300(StringCoding.java:34) at java.lang.StringCoding StringEncoder.encode(StringCoding.java:251) at java.lang.StringCoding.encode(StringCoding.java:272) at java.lang.String.getBytes(String.java:946) at org.apache.jackrabbit.mk.util.IOUtils.writeString(IOUtils.java:84) at org.apache.jackrabbit.mk.store.BinaryBinding.writeMap(BinaryBinding.java:98) at org.apache.jackrabbit.mk.model.ChildNodeEntriesMap.serialize(ChildNodeEntriesMap.java:196) at org.apache.jackrabbit.mk.model.AbstractNode.serialize(AbstractNode.java:169) at org.apache.jackrabbit.mk.persistence.InMemPersistence.writeNode(InMemPersistence.java:76) at org.apache.jackrabbit.mk.store.DefaultRevisionStore.putNode(DefaultRevisionStore.java:276) at org.apache.jackrabbit.mk.model.StagedNodeTree StagedNode.persist(StagedNodeTree.java:568) at org.apache.jackrabbit.mk.model.StagedNodeTree StagedNode.persist(StagedNodeTree.java:563) at org.apache.jackrabbit.mk.model.StagedNodeTree StagedNode.persist(StagedNodeTree.java:563) at org.apache.jackrabbit.mk.model.StagedNodeTree StagedNode.persist(StagedNodeTree.java:563) at org.apache.jackrabbit.mk.model.StagedNodeTree StagedNode.persist(StagedNodeTree.java:563) at org.apache.jackrabbit.mk.model.StagedNodeTree StagedNode.persist(StagedNodeTree.java:563) at org.apache.jackrabbit.mk.model.StagedNodeTree StagedNode.persist(StagedNodeTree.java:563) at org.apache.jackrabbit.mk.model.StagedNodeTree.persist(StagedNodeTree.java:80) at org.apache.jackrabbit.mk.model.CommitBuilder.doCommit(CommitBuilder.java:126) at org.apache.jackrabbit.mk.model.CommitBuilder.doCommit(CommitBuilder.java:94) at org.apache.jackrabbit.mk.core.MicroKernelImpl.commit(MicroKernelImpl.java:496) at org.apache.jackrabbit.oak.kernel.KernelNodeStoreBranch.commit(KernelNodeStoreBranch.java:178) at org.apache.jackrabbit.oak.kernel.KernelNodeStoreBranch.setRoot(KernelNodeStoreBranch.java:78) at org.apache.jackrabbit.oak.core.RootImpl.purgePendingChanges(RootImpl.java:355) at org.apache.jackrabbit.oak.core.RootImpl.commit(RootImpl.java:234) at org.apache.jackrabbit.oak.core.LargeMoveTest.moveTest(LargeMoveTest.java:78) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) code  This is caused by the inefficient rebase implementation in oak-core as discussed at length in OAK-464.", "A_clean_title": ["move", "larger", "tree", "caus", "outofmemoryerrorlargemovetest", "movetest", "out", "memori", "error", "larg", "move", "test", "move", "test", "test", "run", "out", "heap", "space", "when", "move", "roughli", "100000", "node", "128m", "heap", "code", "java", "lang", "outofmemoryerror", "out", "memori", "error", "java", "heap", "space", "at", "java", "util", "array", "copyof", "copi", "array", "java:2786", "at", "java", "lang", "stringcod", "safetrim", "string", "code", "safe", "trim", "stringcod", "java:64", "string", "code", "at", "java", "lang", "stringcod", "access", "string", "code", "300", "stringcod", "java:34", "string", "code", "at", "java", "lang", "stringcod", "string", "code", "stringencod", "encod", "string", "encod", "stringcod", "java:251", "string", "code", "at", "java", "lang", "stringcod", "encod", "string", "code", "stringcod", "java:272", "string", "code", "at", "java", "lang", "string", "getbyt", "get", "byte", "string", "java:946", "at", "org", "apach", "jackrabbit", "mk", "util", "ioutil", "writestr", "io", "util", "write", "string", "ioutil", "java:84", "io", "util", "at", "org", "apach", "jackrabbit", "mk", "store", "binarybind", "writemap", "binari", "bind", "write", "map", "binarybind", "java:98", "binari", "bind", "at", "org", "apach", "jackrabbit", "mk", "model", "childnodeentriesmap", "serial", "child", "node", "entri", "map", "childnodeentriesmap", "java:196", "child", "node", "entri", "map", "at", "org", "apach", "jackrabbit", "mk", "model", "abstractnod", "serial", "abstract", "node", "abstractnod", "java:169", "abstract", "node", "at", "org", "apach", "jackrabbit", "mk", "persist", "inmempersist", "writenod", "mem", "persist", "write", "node", "inmempersist", "java:76", "mem", "persist", "at", "org", "apach", "jackrabbit", "mk", "store", "defaultrevisionstor", "putnod", "default", "revis", "store", "put", "node", "defaultrevisionstor", "java:276", "default", "revis", "store", "at", "org", "apach", "jackrabbit", "mk", "model", "stagednodetre", "stage", "node", "tree", "stagednod", "persist", "stage", "node", "stagednodetre", "java:568", "stage", "node", "tree", "at", "org", "apach", "jackrabbit", "mk", "model", "stagednodetre", "stage", "node", "tree", "stagednod", "persist", "stage", "node", "stagednodetre", "java:563", "stage", "node", "tree", "at", "org", "apach", "jackrabbit", "mk", "model", "stagednodetre", "stage", "node", "tree", "stagednod", "persist", "stage", "node", "stagednodetre", "java:563", "stage", "node", "tree", "at", "org", "apach", "jackrabbit", "mk", "model", "stagednodetre", "stage", "node", "tree", "stagednod", "persist", "stage", "node", "stagednodetre", "java:563", "stage", "node", "tree", "at", "org", "apach", "jackrabbit", "mk", "model", "stagednodetre", "stage", "node", "tree", "stagednod", "persist", "stage", "node", "stagednodetre", "java:563", "stage", "node", "tree", "at", "org", "apach", "jackrabbit", "mk", "model", "stagednodetre", "stage", "node", "tree", "stagednod", "persist", "stage", "node", "stagednodetre", "java:563", "stage", "node", "tree", "at", "org", "apach", "jackrabbit", "mk", "model", "stagednodetre", "stage", "node", "tree", "stagednod", "persist", "stage", "node", "stagednodetre", "java:563", "stage", "node", "tree", "at", "org", "apach", "jackrabbit", "mk", "model", "stagednodetre", "persist", "stage", "node", "tree", "stagednodetre", "java:80", "stage", "node", "tree", "at", "org", "apach", "jackrabbit", "mk", "model", "commitbuild", "docommit", "commit", "builder", "commit", "commitbuild", "java:126", "commit", "builder", "at", "org", "apach", "jackrabbit", "mk", "model", "commitbuild", "docommit", "commit", "builder", "commit", "commitbuild", "java:94", "commit", "builder", "at", "org", "apach", "jackrabbit", "mk", "core", "microkernelimpl", "commit", "micro", "kernel", "impl", "microkernelimpl", "java:496", "micro", "kernel", "impl", "at", "org", "apach", "jackrabbit", "oak", "kernel", "kernelnodestorebranch", "commit", "kernel", "node", "store", "branch", "kernelnodestorebranch", "java:178", "kernel", "node", "store", "branch", "at", "org", "apach", "jackrabbit", "oak", "kernel", "kernelnodestorebranch", "setroot", "kernel", "node", "store", "branch", "set", "root", "kernelnodestorebranch", "java:78", "kernel", "node", "store", "branch", "at", "org", "apach", "jackrabbit", "oak", "core", "rootimpl", "purgependingchang", "root", "impl", "purg", "pend", "chang", "rootimpl", "java:355", "root", "impl", "at", "org", "apach", "jackrabbit", "oak", "core", "rootimpl", "commit", "root", "impl", "rootimpl", "java:234", "root", "impl", "at", "org", "apach", "jackrabbit", "oak", "core", "largemovetest", "movetest", "larg", "move", "test", "move", "test", "largemovetest", "java:78", "larg", "move", "test", "at", "sun", "reflect", "nativemethodaccessorimpl", "invoke0", "nativ", "method", "accessor", "impl", "nativ", "method", "at", "sun", "reflect", "nativemethodaccessorimpl", "invok", "nativ", "method", "accessor", "impl", "nativemethodaccessorimpl", "java:39", "nativ", "method", "accessor", "impl", "at", "sun", "reflect", "delegatingmethodaccessorimpl", "invok", "deleg", "method", "accessor", "impl", "delegatingmethodaccessorimpl", "java:25", "deleg", "method", "accessor", "impl", "code", "thi", "caus", "by", "ineffici", "rebas", "implement", "oak", "core", "as", "discuss", "at", "length", "oak", "464"], "B_title": "Moving larger trees cause OutOfMemoryError (diff ignores depth for added nodes)", "B_clean_title": ["move", "larger", "tree", "caus", "outofmemoryerror", "out", "memori", "error", "diff", "ignor", "depth", "ad", "node"]},
{"A_title": "Optimizer prunes all candidates when unable to reuse sort propertiesPrograms fail with an exception that no plan could be created. The bug can be reproduced by the following code:  code val data : DataSet(Long Long) = ...  data.distinct(0 1).groupBy(0).reduceGroup(...) code", "A_clean_title": ["optim", "prune", "all", "candid", "when", "unabl", "reus", "sort", "propertiesprogram", "properti", "program", "fail", "except", "that", "no", "plan", "could", "creat", "bug", "reproduc", "by", "follow", "code", "code", "val", "data", "dataset", "data", "set", "long", "long", "data", "distinct", "groupbi", "group", "by", "reducegroup", "reduc", "group", "code"], "B_title": "Fix Optimizer to create plans when encountering incompatible partitionings.", "B_clean_title": ["fix", "optim", "creat", "plan", "when", "encount", "incompat", "partit"]},
{"A_title": "PathUtils.isAncestor(/ /) should return false but returns trueNone", "A_clean_title": ["pathutil", "isancestor", "path", "util", "ancestor", "return", "fals", "but", "return", "truenon", "true", "none"], "B_title": "PathUtils.isAncestor(/ /) should return false but returns true", "B_clean_title": ["pathutil", "isancestor", "path", "util", "ancestor", "return", "fals", "but", "return", "true"]},
{"A_title": "MathUtils.gcd(u v) fails when u and v both contain a high power of 2The test at the beginning of MathUtils.gcd(u v) for arguments equal to zero fails when u and v contain high enough powers of 2 so that their product overflows to zero.         assertEquals(3 * (1<<15) MathUtils.gcd(3 * (1<<20) 9 * (1<<15))); Fix: Replace the test at the start of MathUtils.gcd()         if (u * v == 0)  by         if (u == 0 || v == 0)", "A_clean_title": ["mathutil", "gcd", "math", "util", "fail", "when", "both", "contain", "high", "power", "2the", "test", "at", "begin", "mathutil", "gcd", "math", "util", "argument", "equal", "zero", "fail", "when", "contain", "high", "enough", "power", "so", "that", "their", "product", "overflow", "zero", "assertequ", "assert", "equal", "15", "mathutil", "gcd", "math", "util", "20", "15", "fix", "replac", "test", "at", "start", "mathutil", "gcd", "math", "util", "by"], "B_title": "fixed overflow error in gdc computation JIRA: MATH-238", "B_clean_title": ["fix", "overflow", "error", "gdc", "comput", "jira", "math", "238"]},
{"A_title": "Suggestion dictionary dont update after suggestUpdateFrequencyMinutes unless something else causes index updateCurrently suggestions building is tied at the end of indexing cycle. Along with that we check if diff between currTime and lastSugguestionBuildTime is more than suggestUpdateFrequencyMinutes before deciding to build suggestions or not.  This allows for suggestions not getting updated if: * At T1 suggestions are built * At T2 an index update takes place but suggestions arent rebuilt because not enough time has passed since T1 * Now at T3 (after sufficient time) changes at T2 wont show up for suggestions until some other index change happens.  We should probably see track about last changes in index (at T2) and use that too while running indexing cycle at T3.", "A_clean_title": ["suggest", "dictionari", "dont", "updat", "after", "suggestupdatefrequencyminut", "suggest", "updat", "frequenc", "minut", "unless", "someth", "caus", "index", "updatecurr", "updat", "current", "suggest", "build", "tie", "at", "end", "index", "cycl", "along", "that", "we", "check", "diff", "between", "currtim", "curr", "time", "lastsugguestionbuildtim", "last", "sugguest", "build", "time", "more", "than", "suggestupdatefrequencyminut", "suggest", "updat", "frequenc", "minut", "befor", "decid", "build", "suggest", "or", "not", "thi", "allow", "suggest", "not", "get", "updat", "at", "t1", "suggest", "are", "built", "at", "t2", "index", "updat", "take", "place", "but", "suggest", "arent", "rebuilt", "becaus", "not", "enough", "time", "ha", "pass", "sinc", "t1", "now", "at", "t3", "after", "suffici", "time", "chang", "at", "t2", "wont", "show", "up", "suggest", "until", "some", "other", "index", "chang", "happen", "we", "probabl", "see", "track", "about", "last", "chang", "index", "at", "t2", "use", "that", "too", "while", "run", "index", "cycl", "at", "t3"], "B_title": "Suggestion dictionary dont update after suggestUpdateFrequencyMinutes unless something else causes index update", "B_clean_title": ["suggest", "dictionari", "dont", "updat", "after", "suggestupdatefrequencyminut", "suggest", "updat", "frequenc", "minut", "unless", "someth", "caus", "index", "updat"]},
{"A_title": "event state not updated if an unrelated event triggers a RESET_STATE during ODE integrationWhen an ODE solver manages several different event types there are some unwanted side effects.  If one event handler asks for a RESET_STATE (for integration state) when its eventOccurred method is called the other event handlers that did not trigger an event in the same step are not updated correctly due to an early return.  As a result when the next step is processed with a reset integration state the forgotten event still refer to the start date of the previous state. This implies that when these event handlers will be checked for In some cases the function defining an event g(double t double y) is called with state parameters y that are completely wrong. In one case when the y array should have contained values between -1 and +1 one function call got values up to 1.0e20.  The attached file reproduces the problem.", "A_clean_title": ["event", "state", "not", "updat", "unrel", "event", "trigger", "reset", "state", "dure", "ode", "integrationwhen", "integr", "when", "ode", "solver", "manag", "sever", "differ", "event", "type", "there", "are", "some", "unwant", "side", "effect", "one", "event", "handler", "ask", "reset", "state", "integr", "state", "when", "it", "eventoccur", "event", "occur", "method", "call", "other", "event", "handler", "that", "did", "not", "trigger", "event", "same", "step", "are", "not", "updat", "correctli", "due", "earli", "return", "as", "result", "when", "next", "step", "process", "reset", "integr", "state", "forgotten", "event", "still", "refer", "start", "date", "previou", "state", "thi", "impli", "that", "when", "these", "event", "handler", "will", "check", "some", "case", "function", "defin", "event", "doubl", "doubl", "call", "state", "paramet", "that", "are", "complet", "wrong", "one", "case", "when", "array", "have", "contain", "valu", "between", "+1", "one", "function", "call", "got", "valu", "up", "0e20", "attach", "file", "reproduc", "problem"], "B_title": "Fixed missing update in ODE event handlers.", "B_clean_title": ["fix", "miss", "updat", "ode", "event", "handler"]},
{"A_title": "RequestHandler listeners are called with null handlerWhen running RequestCycleListeners with WicketTester they get called with null for the requesthandler in onScheduleHandler(). This is an artifact of the wicket tester requestcycle which I think should normally not occur in Wicket processing. The parameters are not marked as optional so it is IMO safe to assume that handler should never be null.  I propose to modify scheduleRequestHandlerAfterCurrent(IRequestHandler handler) to not invoke the listeners when the handler is null but only to clear the current scheduled handler.", "A_clean_title": ["requesthandl", "request", "handler", "listen", "are", "call", "null", "handlerwhen", "handler", "when", "run", "requestcyclelisten", "request", "cycl", "listen", "wickettest", "wicket", "tester", "they", "get", "call", "null", "requesthandl", "onschedulehandl", "schedul", "handler", "thi", "artifact", "wicket", "tester", "requestcycl", "which", "think", "normal", "not", "occur", "wicket", "process", "paramet", "are", "not", "mark", "as", "option", "so", "it", "imo", "safe", "assum", "that", "handler", "never", "null", "propos", "modifi", "schedulerequesthandleraftercurr", "schedul", "request", "handler", "after", "current", "irequesthandl", "request", "handler", "handler", "not", "invok", "listen", "when", "handler", "null", "but", "onli", "clear", "current", "schedul", "handler"], "B_title": "No more calling of requestcyclelistener#onScheduleHandler with null handler Issue: WICKET-3646", "B_clean_title": ["no", "more", "call", "requestcyclelisten", "onschedulehandl", "schedul", "handler", "null", "handler", "issu", "wicket", "3646"]},
{"A_title": "FastMath.pow deviates from Math.pow for negative finite base values with an exponent 2^52 < y < 2^53As reported by Jeff Hain: pow(doubledouble): Math.pow(-1.05.000000000000001E15) = -1.0 FastMath.pow(-1.05.000000000000001E15) = 1.0 ===> This is due to considering that power is an even integer if it is >= 2^52 while you need to test that it is >= 2^53 for it. ===> replace if (y >= TWO_POWER_52 || y <= -TWO_POWER_52) with if (y >= 2*TWO_POWER_52 || y <= -2*TWO_POWER_52) and that solves it.", "A_clean_title": ["fastmath", "pow", "fast", "math", "deviat", "math", "pow", "neg", "finit", "base", "valu", "expon", "2^52", "2^53a", "report", "by", "jeff", "hain", "pow", "doubledoubl", "math", "pow", "05", "000000000000001e15", "fastmath", "pow", "fast", "math", "05", "000000000000001e15", "thi", "due", "consid", "that", "power", "even", "integ", "it", "2^52", "while", "you", "need", "test", "that", "it", "2^53", "it", "replac", "two", "power", "52", "two", "power", "52", "two", "power", "52", "two", "power", "52", "that", "solv", "it"], "B_title": "Fixed wrong assumption in pow method.", "B_clean_title": ["fix", "wrong", "assumpt", "pow", "method"]},
{"A_title": "CompactCommand description is incorrectThe compact command has the following description  code root@accumulo> compact -? usage: compact <table> <table> -? -b <begin-row> --cancel -e <end-row> -nf -ns <namespace> | -p <pattern> | -t <tableName>  -pn <profile>  -w description: sets all tablets for a table to major compact as soon as possible (based on current time)   -?--help                       display this help   -b--begin-row <begin-row>      begin row (inclusive)      --cancel                     cancel user initiated compactions   -e--end-row <end-row>          end row (inclusive)   -nf--noFlush                   do not flush table data in memory before compacting.   -ns--namespace <namespace>     name of a namespace to operate on   -p--pattern <pattern>          regex pattern of table names to operate on   -pn--profile <profile>         iterator profile name   -t--table <tableName>          name of a table to operate on   -w--wait                       wait for compact to finish code  However the --begin-row is not inclusive.  Here is a simple demonstration. code createtable compacttest addsplits a b c insert a 1   insert a 2   insert b 3   insert b 4   insert c 5   insert c 6   flush -w scan -t accumulo.metadata -np compact -b a -e c -t compacttest -w scan -t accumulo.metadata -np deletetable compacttest -f code  You will see that file associated with the a split is still a F flush file which the files in the b and c split are A files.  Not sure if the fix is to update the commands description which would be easy or to make the begin row actually inclusive.", "A_clean_title": ["compactcommand", "compact", "command", "descript", "incorrectth", "incorrect", "compact", "command", "ha", "follow", "descript", "code", "root", "accumulo", "compact", "usag", "compact", "tabl", "tabl", "begin", "row", "cancel", "end", "row", "nf", "ns", "namespac", "pattern", "tablenam", "tabl", "name", "pn", "profil", "descript", "set", "all", "tablet", "tabl", "major", "compact", "as", "soon", "as", "possibl", "base", "current", "time", "help", "display", "thi", "help", "begin", "row", "begin", "row", "begin", "row", "inclus", "cancel", "cancel", "user", "initi", "compact", "end", "row", "end", "row", "end", "row", "inclus", "nf", "noflush", "no", "flush", "not", "flush", "tabl", "data", "memori", "befor", "compact", "ns", "namespac", "namespac", "name", "namespac", "oper", "pattern", "pattern", "regex", "pattern", "tabl", "name", "oper", "pn", "profil", "profil", "iter", "profil", "name", "tabl", "tablenam", "tabl", "name", "name", "tabl", "oper", "wait", "wait", "compact", "finish", "code", "howev", "begin", "row", "not", "inclus", "here", "simpl", "demonstr", "code", "createt", "compacttest", "addsplit", "insert", "insert", "insert", "insert", "insert", "insert", "flush", "scan", "accumulo", "metadata", "np", "compact", "compacttest", "scan", "accumulo", "metadata", "np", "deletet", "compacttest", "code", "you", "will", "see", "that", "file", "associ", "split", "still", "flush", "file", "which", "file", "split", "are", "file", "not", "sure", "fix", "updat", "command", "descript", "which", "would", "easi", "or", "make", "begin", "row", "actual", "inclus"], "B_title": "Merge branch ACCUMULO-4138 into 1.6", "B_clean_title": ["merg", "branch", "accumulo", "4138", "into"]},
{"A_title": "Partial.with fails with NPEFails with yearOfCentury year and yearOfEra. Probably because weekyear has a null range duration type.", "A_clean_title": ["partial", "fail", "npefail", "npe", "fail", "yearofcenturi", "year", "centuri", "year", "yearofera", "year", "era", "probabl", "becaus", "weekyear", "ha", "null", "rang", "durat", "type"], "B_title": "Fix NPE in Partial.with()", "B_clean_title": ["fix", "npe", "partial"]},
{"A_title": "DateUtils.isSameLocalTime does not work correctHi I think I found a bug in the DateUtils class in the method isSameLocalTime. Example:  Calendar a = Calendar.getInstance(); a.setTimeInMillis(1297364400000L); Calendar b = Calendar.getInstance(); b.setTimeInMillis(1297321200000L); Assert.assertFalse(DateUtils.isSameLocalTime(a b)); This is because the method compares  cal1.get(Calendar.HOUR) == cal2.get(Calendar.HOUR)  but I think it has to be  cal1.get(Calendar.HOUR_OF_DAY) == cal2.get(Calendar.HOUR_OF_DAY)", "A_clean_title": ["dateutil", "issamelocaltim", "date", "util", "same", "local", "time", "not", "work", "correcthi", "correct", "hi", "think", "found", "bug", "dateutil", "date", "util", "class", "method", "issamelocaltim", "same", "local", "time", "exampl", "calendar", "calendar", "getinst", "get", "instanc", "settimeinmilli", "set", "time", "milli", "1297364400000l", "calendar", "calendar", "getinst", "get", "instanc", "settimeinmilli", "set", "time", "milli", "1297321200000l", "assert", "assertfals", "assert", "fals", "dateutil", "issamelocaltim", "date", "util", "same", "local", "time", "thi", "becaus", "method", "compar", "cal1", "get", "calendar", "hour", "cal2", "get", "calendar", "hour", "but", "think", "it", "ha", "cal1", "get", "calendar", "hour", "day", "cal2", "get", "calendar", "hour", "day"], "B_title": "DateUtils isSameLocalTime() compares the hour using 12hour Calendar.HOUR instead of 24hour Calendar.HOUR_OF_DAY - thanks to Christian", "B_clean_title": ["dateutil", "date", "util", "issamelocaltim", "same", "local", "time", "compar", "hour", "12hour", "calendar", "hour", "instead", "24hour", "calendar", "hour", "day", "thank", "christian"]},
{"A_title": "ReduceOnNeighborsWithExceptionITCase failureI noticed a build error due to failure on this case. It was on a branch of my fork which didnt actually have anything to do with the failed test or the runtime system at all.  Heres the error log: https://s3.amazonaws.com/archive.travis-ci.org/jobs/73695554/log.txt", "A_clean_title": ["reduceonneighborswithexceptionitcas", "reduc", "neighbor", "except", "it", "case", "failurei", "failur", "notic", "build", "error", "due", "failur", "thi", "case", "it", "wa", "branch", "my", "fork", "which", "didnt", "actual", "have", "anyth", "fail", "test", "or", "runtim", "system", "at", "all", "here", "error", "log", "http", "amazonaw", "travi", "ci", "txt", "s3", "com", "archiv", "org", "job", "73695554", "log"], "B_title": "runtime Check parent state in isReleased() check of partition view", "B_clean_title": ["runtim", "check", "parent", "state", "isreleas", "releas", "check", "partit", "view"]},
{"A_title": "denominatorDegreeOfFreedom in FDistribution leads to IllegalArgumentsException in UnivariateRealSolverUtils.bracketWe are using the FDistributionImpl from the commons.math project to do some statistical calculations namely receiving the upper and lower boundaries of a confidence interval. Everything is working fine and the results are matching our reference calculations. However the FDistribution behaves strange if a denominatorDegreeOfFreedom of 2 is used with an alpha-value of 0.95. This results in an IllegalArgumentsException stating: Invalid endpoint parameters:  lowerBound=0.0 initial=Infinity upperBound=1.7976931348623157E308 coming from org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket The problem is the initial parameter to that function wich is POSITIVE_INFINITY and therefore not within the boundaries. I already pinned down the problem to the FDistributions getInitialDomain()-method wich goes like:         return getDenominatorDegreesOfFreedom() /                     (getDenominatorDegreesOfFreedom() - 2.0); Obviously in case of denominatorDegreesOfFreedom == 2 this must lead to a division-by-zero resulting in POSTIVE_INFINITY. The result of this operation is then directly passed into the UnivariateRealSolverUtils.bracket() - method as second argument.", "A_clean_title": ["denominatordegreeoffreedom", "denomin", "degre", "freedom", "fdistribut", "distribut", "lead", "illegalargumentsexcept", "illeg", "argument", "except", "univariaterealsolverutil", "bracketw", "univari", "real", "solver", "util", "bracket", "we", "are", "fdistributionimpl", "distribut", "impl", "common", "math", "project", "some", "statist", "calcul", "name", "receiv", "upper", "lower", "boundari", "confid", "interv", "everyth", "work", "fine", "result", "are", "match", "our", "refer", "calcul", "howev", "fdistribut", "distribut", "behav", "strang", "denominatordegreeoffreedom", "denomin", "degre", "freedom", "use", "alpha", "valu", "95", "thi", "result", "illegalargumentsexcept", "illeg", "argument", "except", "state", "invalid", "endpoint", "paramet", "lowerbound=0", "lower", "bound=0", "initial=infin", "upperbound=1", "7976931348623157e308", "upper", "bound=1", "come", "org", "apach", "common", "math", "analysi", "univariaterealsolverutil", "bracket", "univari", "real", "solver", "util", "problem", "initi", "paramet", "that", "function", "wich", "posit", "infin", "therefor", "not", "within", "boundari", "alreadi", "pin", "down", "problem", "fdistribut", "distribut", "getinitialdomain", "get", "initi", "domain", "method", "wich", "goe", "like", "return", "getdenominatordegreesoffreedom", "get", "denomin", "degre", "freedom", "getdenominatordegreesoffreedom", "get", "denomin", "degre", "freedom", "obvious", "case", "denominatordegreesoffreedom", "denomin", "degre", "freedom", "thi", "must", "lead", "divis", "by", "zero", "result", "postiv", "infin", "result", "thi", "oper", "then", "directli", "pass", "into", "univariaterealsolverutil", "bracket", "univari", "real", "solver", "util", "method", "as", "second", "argument"], "B_title": "propagated trunk changes from r699157 into branch 2.0 MATH-227.  fixed F distribution inverse CDF computation for small denominator degrees of freedom.", "B_clean_title": ["propag", "trunk", "chang", "r699157", "into", "branch", "math", "227", "fix", "distribut", "invers", "cdf", "comput", "small", "denomin", "degre", "freedom"]},
{"A_title": "Base url is incorrect for error dispatched pagesThe fix for https://issues.apache.org/jira/browse/WICKET-4387 includes the following code in org.apache.wicket.protocol.http.servlet.ServletWebRequest#ServletWebRequest(HttpServletRequest httpServletRequest String filterPrefix Url url):  if (forwardAttributes != null || errorAttributes != null)  if (LOG.isDebugEnabled())  LOG.debug(Setting filterPrefix() to  because there is either an error or a forward.   new Object filterPrefix forwardAttributes errorAttributes);  // the filter prefix is not needed when the current request is internal // see WICKET-4387 this.filterPrefix = ;  The filterPrefix is actually needed later when a request is made due to an error (e.g. 404):  public Url getClientUrl()  if (errorAttributes != null && !Strings.isEmpty(errorAttributes.getRequestUri()))  String problematicURI = Url.parse(errorAttributes.getRequestUri() getCharset()) .toString(); return getContextRelativeUrl(problematicURI filterPrefix);  With filterPrefix== the urls for any resources in the error page are wrong.", "A_clean_title": ["base", "url", "incorrect", "error", "dispatch", "pagesth", "page", "fix", "http", "4387", "apach", "issu", "org", "jira", "brows", "wicket", "includ", "follow", "code", "org", "apach", "wicket", "protocol", "http", "servlet", "servletwebrequest", "servlet", "web", "request", "servletwebrequest", "servlet", "web", "request", "httpservletrequest", "http", "servlet", "request", "httpservletrequest", "http", "servlet", "request", "string", "filterprefix", "filter", "prefix", "url", "url", "forwardattribut", "forward", "attribut", "null", "errorattribut", "error", "attribut", "null", "log", "isdebugen", "debug", "enabl", "log", "debug", "set", "filterprefix", "filter", "prefix", "becaus", "there", "either", "error", "or", "forward", "new", "object", "filterprefix", "filter", "prefix", "forwardattribut", "forward", "attribut", "errorattribut", "error", "attribut", "filter", "prefix", "not", "need", "when", "current", "request", "intern", "see", "wicket", "4387", "thi", "filterprefix", "filter", "prefix", "filterprefix", "filter", "prefix", "actual", "need", "later", "when", "request", "made", "due", "error", "404", "public", "url", "getclienturl", "get", "client", "url", "errorattribut", "error", "attribut", "null", "string", "isempti", "empti", "errorattribut", "getrequesturi", "error", "attribut", "get", "request", "uri", "string", "problematicuri", "problemat", "uri", "url", "pars", "errorattribut", "getrequesturi", "error", "attribut", "get", "request", "uri", "getcharset", "get", "charset", "tostr", "string", "return", "getcontextrelativeurl", "get", "context", "rel", "url", "problematicuri", "problemat", "uri", "filterprefix", "filter", "prefix", "filterprefix==", "filter", "prefix==", "url", "ani", "resourc", "error", "page", "are", "wrong"], "B_title": "Base url is incorrect for error dispatched pages", "B_clean_title": ["base", "url", "incorrect", "error", "dispatch", "page"]},
{"A_title": "unicode characters in property names result in invalid outputNone", "A_clean_title": ["unicod", "charact", "properti", "name", "result", "invalid", "outputnon", "output", "none"], "B_title": "Add patch from issue 921 as well as accompanying unit test.", "B_clean_title": ["add", "patch", "issu", "921", "as", "well", "as", "accompani", "unit", "test"]},
{"A_title": "The update() method on the ProxyServer should throw a MutationsRejectedExceptionNone", "A_clean_title": ["updat", "method", "proxyserv", "proxi", "server", "throw", "mutationsrejectedexceptionnon", "mutat", "reject", "except", "none"], "B_title": "make update a oneway call again", "B_clean_title": ["make", "updat", "oneway", "call", "again"]},
{"A_title": "Page mount with an optional named parameter overtakes a mount with more specific pathSee the discussion in http://markmail.org/thread/sgpiku27ah2tmcim  Having:   mountPage(/all/sindexPage1.class);   mountPage(/all/#exp Page2.class);  Request to /all/sindex will be handled by Page2.  Compatibility score for optional parameters should be lower than mandatory parameters which should be lower than exact value.", "A_clean_title": ["page", "mount", "option", "name", "paramet", "overtak", "mount", "more", "specif", "pathse", "path", "see", "discuss", "http", "markmail", "org", "thread", "sgpiku27ah2tmcim", "have", "mountpag", "mount", "page", "class", "all", "sindexpage1", "sindex", "page1", "mountpag", "mount", "page", "all", "exp", "page2", "class", "request", "all", "sindex", "will", "handl", "by", "page2", "compat", "score", "option", "paramet", "lower", "than", "mandatori", "paramet", "which", "lower", "than", "exact", "valu"], "B_title": "Page mount with an optional named parameter overtakes a mount with more specific path", "B_clean_title": ["page", "mount", "option", "name", "paramet", "overtak", "mount", "more", "specif", "path"]},
{"A_title": "FastDateFormat.mRules is not transient or serializableReported by FindBugs. Either we need to make the Rule interface Serializable or make mRules transient and add deserializing code to kick off init().", "A_clean_title": ["fastdateformat", "mrule", "fast", "date", "format", "rule", "not", "transient", "or", "serializablereport", "serializ", "report", "by", "findbug", "find", "bug", "either", "we", "need", "make", "rule", "interfac", "serializ", "or", "make", "mrule", "rule", "transient", "add", "deseri", "code", "kick", "off", "init"], "B_title": "Applying test for #LANG-303 and a fix.", "B_clean_title": ["appli", "test", "lang", "303", "fix"]},
{"A_title": "MarkupContainer.removeAll() does not detach models recursivelyML thread at: http://markmail.org/message/ybdfd2ts4i3j2b72", "A_clean_title": ["markupcontain", "removeal", "markup", "contain", "remov", "all", "not", "detach", "model", "recursivelyml", "recurs", "ml", "thread", "at", "http", "markmail", "org", "messag", "ybdfd2ts4i3j2b72"], "B_title": "- detach models recursively Issue: WICKET-3872", "B_clean_title": ["detach", "model", "recurs", "issu", "wicket", "3872"]},
{"A_title": "Revisit full-text queries in case of multiple tokensTheres still an issue with tokenizing the search terms when trying for example to search for a fulltext term that will split into 2 actual terms because of the analyzer.  Taking hello-world* this will break into 2 tokens hello and world* which when treated as a PhraseQuery will not work so I want to change this into a MutiPhraseQuery based on the simple tokens provided and all the existing tokens that match the wildchar character.", "A_clean_title": ["revisit", "full", "text", "queri", "case", "multipl", "tokensther", "token", "there", "still", "issu", "token", "search", "term", "when", "tri", "exampl", "search", "fulltext", "term", "that", "will", "split", "into", "actual", "term", "becaus", "analyz", "take", "hello", "world", "thi", "will", "break", "into", "token", "hello", "world", "which", "when", "treat", "as", "phrasequeri", "phrase", "queri", "will", "not", "work", "so", "want", "chang", "thi", "into", "mutiphrasequeri", "muti", "phrase", "queri", "base", "simpl", "token", "provid", "all", "exist", "token", "that", "match", "wildchar", "charact"], "B_title": "Revisit full-text queries in case of multiple tokens  - introduced a MultiPhraseQuery for the multiple token case  - fixed a bug in the tokenizer", "B_clean_title": ["revisit", "full", "text", "queri", "case", "multipl", "token", "introduc", "multiphrasequeri", "multi", "phrase", "queri", "multipl", "token", "case", "fix", "bug", "token"]},
{"A_title": "NPE if checking for a non-existing node in version storageNPE If a tree given to CompiledPermissionImpl.getTreePermission() does not have a primary type e.g. for a hidden oak node:  noformat   at com.google.common.base.Preconditions.checkNotNull(Preconditions.java:191)   at org.apache.jackrabbit.oak.security.authorization.permission.CompiledPermissionImpl.getTreePermission(CompiledPermissionImpl.java:160)   at org.apache.jackrabbit.oak.security.authorization.permission.CompiledPermissionImpl TreePermissionImpl.getChildPermission(CompiledPermissionImpl.java:443)   at org.apache.jackrabbit.oak.core.SecureNodeBuilder.getTreePermission(SecureNodeBuilder.java:352)   at org.apache.jackrabbit.oak.core.SecureNodeBuilder.exists(SecureNodeBuilder.java:129)   at org.apache.jackrabbit.oak.core.SecureNodeBuilder.hasChildNode(SecureNodeBuilder.java:271)   at org.apache.jackrabbit.oak.core.AbstractTree.getChildrenCount(AbstractTree.java:248) noformat  The tree passed here to get the children count is: /jcr:system/jcr:versionStorage and the child node not having a primary type is :index", "A_clean_title": ["npe", "check", "non", "exist", "node", "version", "storagenp", "storag", "npe", "tree", "given", "compiledpermissionimpl", "gettreepermiss", "compil", "permiss", "impl", "get", "tree", "permiss", "not", "have", "primari", "type", "hidden", "oak", "node", "noformat", "at", "com", "googl", "common", "base", "precondit", "checknotnul", "check", "not", "null", "precondit", "java:191", "at", "org", "apach", "jackrabbit", "oak", "secur", "author", "permiss", "compiledpermissionimpl", "gettreepermiss", "compil", "permiss", "impl", "get", "tree", "permiss", "compiledpermissionimpl", "java:160", "compil", "permiss", "impl", "at", "org", "apach", "jackrabbit", "oak", "secur", "author", "permiss", "compiledpermissionimpl", "compil", "permiss", "impl", "treepermissionimpl", "getchildpermiss", "tree", "permiss", "impl", "get", "child", "permiss", "compiledpermissionimpl", "java:443", "compil", "permiss", "impl", "at", "org", "apach", "jackrabbit", "oak", "core", "securenodebuild", "gettreepermiss", "secur", "node", "builder", "get", "tree", "permiss", "securenodebuild", "java:352", "secur", "node", "builder", "at", "org", "apach", "jackrabbit", "oak", "core", "securenodebuild", "exist", "secur", "node", "builder", "securenodebuild", "java:129", "secur", "node", "builder", "at", "org", "apach", "jackrabbit", "oak", "core", "securenodebuild", "haschildnod", "secur", "node", "builder", "ha", "child", "node", "securenodebuild", "java:271", "secur", "node", "builder", "at", "org", "apach", "jackrabbit", "oak", "core", "abstracttre", "getchildrencount", "abstract", "tree", "get", "children", "count", "abstracttre", "java:248", "abstract", "tree", "noformat", "tree", "pass", "here", "get", "children", "count", "jcr", "system", "jcr", "versionstorag", "version", "storag", "child", "node", "not", "have", "primari", "type", "index"], "B_title": ": NPE if TreePermissionImpl if tree does not have a primary type", "B_clean_title": ["npe", "treepermissionimpl", "tree", "permiss", "impl", "tree", "not", "have", "primari", "type"]},
{"A_title": "RegulaFalsiSolver failureThe following unit test: code @Test public void testBug()      final UnivariateRealFunction f = new UnivariateRealFunction()              @Override             public double value(double x)                  return Math.exp(x) - Math.pow(Math.PI 3.0);                      ;      UnivariateRealSolver solver = new RegulaFalsiSolver();     double root = solver.solve(100 f 1 10);  code fails with noformat illegal state: maximal count (100) exceeded: evaluations noformat  Using PegasusSolver the answer is found after 17 evaluations.", "A_clean_title": ["regulafalsisolv", "regula", "falsi", "solver", "failureth", "failur", "follow", "unit", "test", "code", "test", "public", "void", "testbug", "test", "bug", "final", "univariaterealfunct", "univari", "real", "function", "new", "univariaterealfunct", "univari", "real", "function", "overrid", "public", "doubl", "valu", "doubl", "return", "math", "exp", "math", "pow", "math", "pi", "univariaterealsolv", "univari", "real", "solver", "solver", "new", "regulafalsisolv", "regula", "falsi", "solver", "doubl", "root", "solver", "solv", "100", "10", "code", "fail", "noformat", "illeg", "state", "maxim", "count", "100", "exceed", "evalu", "noformat", "pegasussolv", "pegasu", "solver", "answer", "found", "after", "17", "evalu"], "B_title": "Work around infinite loop.", "B_clean_title": ["work", "around", "infinit", "loop"]}]